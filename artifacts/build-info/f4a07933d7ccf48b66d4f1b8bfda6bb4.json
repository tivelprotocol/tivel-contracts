{"id":"f4a07933d7ccf48b66d4f1b8bfda6bb4","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/base/Lockable.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ncontract Lockable {\n    uint256 private unlocked = 1;\n\n    error Locked();\n\n    modifier lock() {\n        if (unlocked != 1) revert Locked();\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n}\n"},"contracts/interfaces/IDEXAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IDEXAggregator {\n    function dexes(uint256) external view returns (address);\n\n    function dexNames(uint256) external view returns (string memory);\n\n    function dexIndex(address) external view returns (uint256);\n\n    function dexLength() external view returns (uint256);\n\n    function validatePair(\n        address _dex,\n        address _tokenIn,\n        address _tokenOut\n    ) external view returns (bool);\n\n    function getAmountIn(\n        address _dex,\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) external view returns (uint256 amountIn, address dex);\n\n    function getAmountOut(\n        address _dex,\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) external view returns (uint256 amountOut, address dex);\n\n    function swap(\n        address _dex,\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _minAmountOut,\n        address _to\n    ) external returns (uint256 amountOut, address dex);\n}\n"},"contracts/interfaces/IDEXIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IDEXIntegration {\n    function validatePair(\n        address _tokenIn,\n        address _tokenOut\n    ) external view returns (bool);\n\n    function getAmountOut(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) external view returns (uint256);\n\n    function getAmountIn(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) external view returns (uint256);\n\n    function swap(\n        address _tokenIn,\n        address _tokenOut,\n        address _to\n    ) external returns (uint256);\n}\n"},"contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IERC20 {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address) external view returns (uint256);\n\n    function allowance(\n        address _owner,\n        address _spender\n    ) external view returns (uint256);\n\n    function approve(address _spender, uint256 _value) external returns (bool);\n\n    function transfer(address _to, uint256 _value) external returns (bool);\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) external returns (bool);\n\n    function permit(\n        address _owner,\n        address _spender,\n        uint256 _value,\n        uint256 _deadline,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    ) external;\n}\n"},"contracts/interfaces/IUniswapV3StaticQuoter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\ninterface IUniswapV3StaticQuoter {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    function quoteExactInput(\n        bytes memory path,\n        uint256 amountIn\n    ) external view returns (uint256 amountOut);\n\n    struct QuoteExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amountIn;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountIn The desired input amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    function quoteExactInputSingle(\n        QuoteExactInputSingleParams memory params\n    ) external view returns (uint256 amountOut);\n\n    /// @notice Returns the amount in needed for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountOut The amount of the last token that would be received\n    /// @return amountIn The amount of the first token to swap\n    function quoteExactOutput(\n        bytes memory path,\n        uint256 amountOut\n    ) external view returns (uint256 amountIn);\n\n    struct QuoteExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amount;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount in needed for a given exact output but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountOut The desired output amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount of `tokenIn` that would be needed\n    function quoteExactOutputSingle(\n        QuoteExactOutputSingleParams memory params\n    ) external view returns (uint256 amountIn);\n}"},"contracts/libraries/TransferHelper.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address _token, address _to, uint256 _value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeApprove: approve failed\"\n        );\n    }\n\n    function safeTransfer(\n        address _token,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address _token,\n        address _from,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address _to, uint256 _value) internal {\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"},"contracts/UniswapV3DEXIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\nimport \"./libraries/TransferHelper.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IDEXIntegration.sol\";\nimport \"./interfaces/IUniswapV3StaticQuoter.sol\";\nimport \"./base/Lockable.sol\";\n\ncontract UniswapV3Integration is IDEXIntegration, Lockable {\n    address public immutable factory;\n    address public immutable quoter; // https://github.com/ultimexfi/uniswap-v3-static-quoter\n    address public immutable router;\n    uint24[] public feeTiers;\n\n    constructor(address _factory, address _quoter, address _router) {\n        factory = _factory;\n        quoter = _quoter;\n        router = _router;\n        feeTiers.push(100);\n        feeTiers.push(500);\n        feeTiers.push(3000);\n        feeTiers.push(10000);\n    }\n\n    function _sortTokens(\n        address _tokenA,\n        address _tokenB\n    ) internal pure returns (address token0, address token1) {\n        if (\n            _tokenA != _tokenB && _tokenA != address(0) && _tokenB != address(0)\n        ) {\n            (token0, token1) = _tokenA < _tokenB\n                ? (_tokenA, _tokenB)\n                : (_tokenB, _tokenA);\n        }\n    }\n\n    function validatePair(\n        address _tokenIn,\n        address _tokenOut\n    ) external view override returns (bool) {\n        if (_tokenIn == _tokenOut) {\n            return false;\n        }\n        uint24[] memory _feeTiers = feeTiers;\n        address _factory = factory;\n        for (uint8 i = 0; i < _feeTiers.length; i++) {\n            address pool = IUniswapV3Factory(_factory).getPool(\n                _tokenIn,\n                _tokenOut,\n                _feeTiers[i]\n            );\n            if (pool != address(0)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function _getAmountOut(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) internal view returns (uint256 amountOut, uint24 fee) {\n        uint24[] memory _feeTiers = feeTiers;\n        address _quoter = quoter;\n        for (uint8 i = 0; i < _feeTiers.length; i++) {\n            uint256 tempAmountOut;\n            try\n                IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(\n                    IUniswapV3StaticQuoter.QuoteExactInputSingleParams({\n                        tokenIn: _tokenIn,\n                        tokenOut: _tokenOut,\n                        amountIn: _amountIn,\n                        fee: _feeTiers[i],\n                        sqrtPriceLimitX96: 0\n                    })\n                )\n            returns (uint256 t) {\n                tempAmountOut = t;\n            } catch (bytes memory /*lowLevelData*/) {\n                tempAmountOut = 0;\n            }\n            if (tempAmountOut > amountOut) {\n                amountOut = tempAmountOut;\n                fee = _feeTiers[i];\n            }\n        }\n    }\n\n    function _getAmountIn(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) internal view returns (uint256 amountIn, uint24 fee) {\n        uint24[] memory _feeTiers = feeTiers;\n        address _quoter = quoter;\n        for (uint8 i = 0; i < _feeTiers.length; i++) {\n            uint256 tempAmountIn;\n            try\n                IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(\n                    IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({\n                        tokenIn: _tokenIn,\n                        tokenOut: _tokenOut,\n                        amount: _amountOut,\n                        fee: _feeTiers[i],\n                        sqrtPriceLimitX96: 0\n                    })\n                )\n            returns (uint256 t) {\n                tempAmountIn = t;\n            } catch (bytes memory /*lowLevelData*/) {\n                tempAmountIn = 0;\n            }\n            if (tempAmountIn > 0 && tempAmountIn < amountIn) {\n                amountIn = tempAmountIn;\n                fee = _feeTiers[i];\n            }\n        }\n    }\n\n    function getAmountOut(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) external view override returns (uint256 amountOut) {\n        (amountOut, ) = _getAmountOut(_tokenIn, _tokenOut, _amountIn);\n    }\n\n    function getAmountIn(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) external view override returns (uint256 amountIn) {\n        (amountIn, ) = _getAmountIn(_tokenIn, _tokenOut, _amountOut);\n    }\n\n    function swap(\n        address _tokenIn,\n        address _tokenOut,\n        address _to\n    ) external override lock returns (uint256 amountOut) {\n        uint256 amountIn = IERC20(_tokenIn).balanceOf(address(this));\n        uint24 fee;\n        (amountOut, fee) = _getAmountOut(_tokenIn, _tokenOut, amountIn);\n        require(\n            amountOut > 0 && fee > 0,\n            \"UniswapV3Integration: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n\n        // allow swapping to the router address with address 0\n        if (_to == address(0)) _to = address(this);\n\n        address _router = router;\n        if (IERC20(_tokenIn).allowance(address(this), _router) == 0) {\n            TransferHelper.safeApprove(_tokenIn, _router, type(uint256).max);\n        }\n\n        uint256 initialBalance = IERC20(_tokenOut).balanceOf(_to);\n        ISwapRouter(_router).exactInputSingle(\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: _tokenIn,\n                tokenOut: _tokenOut,\n                fee: fee,\n                recipient: _to,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            })\n        );\n\n        uint256 balance = IERC20(_tokenOut).balanceOf(_to);\n        amountOut = balance - initialBalance;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[82]},"id":83,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"71:163:0","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":82,"linearizedBaseContracts":[82],"name":"IUniswapV3Factory","nameLocation":"244:17:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"268:185:0","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"id":9,"name":"OwnerChanged","nameLocation":"464:12:0","nodeType":"EventDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"oldOwner","nameLocation":"493:8:0","nodeType":"VariableDeclaration","scope":9,"src":"477:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"519:8:0","nodeType":"VariableDeclaration","scope":9,"src":"503:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:0"},"src":"458:71:0"},{"anonymous":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"535:421:0","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"id":22,"name":"PoolCreated","nameLocation":"967:11:0","nodeType":"EventDefinition","parameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1004:6:0","nodeType":"VariableDeclaration","scope":22,"src":"988:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1036:6:0","nodeType":"VariableDeclaration","scope":22,"src":"1020:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1067:3:0","nodeType":"VariableDeclaration","scope":22,"src":"1052:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":15,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"1086:11:0","nodeType":"VariableDeclaration","scope":22,"src":"1080:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":17,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":20,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1115:4:0","nodeType":"VariableDeclaration","scope":22,"src":"1107:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:0"},"src":"961:165:0"},{"anonymous":false,"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"1132:275:0","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"id":29,"name":"FeeAmountEnabled","nameLocation":"1418:16:0","nodeType":"EventDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1450:3:0","nodeType":"VariableDeclaration","scope":29,"src":"1435:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":24,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":27,"indexed":true,"mutability":"mutable","name":"tickSpacing","nameLocation":"1469:11:0","nodeType":"VariableDeclaration","scope":29,"src":"1455:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":26,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:0"},"src":"1412:70:0"},{"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"1488:163:0","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":35,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1665:5:0","nodeType":"FunctionDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1670:2:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35,"src":"1696:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:0"},"scope":82,"src":"1656:49:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1711:348:0","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":43,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nameLocation":"2073:20:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"fee","nameLocation":"2101:3:0","nodeType":"VariableDeclaration","scope":43,"src":"2094:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":37,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:0"},"returnParameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43,"src":"2129:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":40,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:0"},"scope":82,"src":"2064:72:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"2142:471:0","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":55,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2627:7:0","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"tokenA","nameLocation":"2652:6:0","nodeType":"VariableDeclaration","scope":55,"src":"2644:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"tokenB","nameLocation":"2676:6:0","nodeType":"VariableDeclaration","scope":55,"src":"2668:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"fee","nameLocation":"2699:3:0","nodeType":"VariableDeclaration","scope":55,"src":"2692:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"pool","nameLocation":"2740:4:0","nodeType":"VariableDeclaration","scope":55,"src":"2732:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:0"},"scope":82,"src":"2618:128:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"2752:554:0","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":67,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3320:10:0","nodeType":"FunctionDefinition","parameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"tokenA","nameLocation":"3348:6:0","nodeType":"VariableDeclaration","scope":67,"src":"3340:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"tokenB","nameLocation":"3372:6:0","nodeType":"VariableDeclaration","scope":67,"src":"3364:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":62,"mutability":"mutable","name":"fee","nameLocation":"3395:3:0","nodeType":"VariableDeclaration","scope":67,"src":"3388:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:0"},"returnParameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"pool","nameLocation":"3431:4:0","nodeType":"VariableDeclaration","scope":67,"src":"3423:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:0"},"scope":82,"src":"3311:126:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"3443:144:0","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":73,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"3601:8:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"_owner","nameLocation":"3618:6:0","nodeType":"VariableDeclaration","scope":73,"src":"3610:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[],"src":"3634:0:0"},"scope":82,"src":"3592:43:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"3641:326:0","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":81,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nameLocation":"3981:15:0","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"fee","nameLocation":"4004:3:0","nodeType":"VariableDeclaration","scope":81,"src":"3997:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":75,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"tickSpacing","nameLocation":"4015:11:0","nodeType":"VariableDeclaration","scope":81,"src":"4009:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":77,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"4036:0:0"},"scope":82,"src":"3972:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":83,"src":"234:3805:0","usedErrors":[]}],"src":"45:3995:0"},"id":0},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[96]},"id":97,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":84,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"71:144:1","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":96,"linearizedBaseContracts":[96],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":86,"nodeType":"StructuredDocumentation","src":"254:898:1","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":95,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:1","nodeType":"FunctionDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:1","nodeType":"VariableDeclaration","scope":95,"src":"1197:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":87,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:1","nodeType":"VariableDeclaration","scope":95,"src":"1226:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":89,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"data","nameLocation":"1270:4:1","nodeType":"VariableDeclaration","scope":95,"src":"1255:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":91,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:1"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[],"src":"1289:0:1"},"scope":96,"src":"1157:133:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":97,"src":"215:1077:1","usedErrors":[]}],"src":"45:1248:1"},"id":1},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[196],"IUniswapV3SwapCallback":[96]},"id":197,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":98,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:2"},{"id":99,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:2"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":197,"sourceUnit":97,"src":"91:83:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":102,"name":"IUniswapV3SwapCallback","nodeType":"IdentifierPath","referencedDeclaration":96,"src":"305:22:2"},"id":103,"nodeType":"InheritanceSpecifier","src":"305:22:2"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"176:104:2","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":196,"linearizedBaseContracts":[196,96],"name":"ISwapRouter","nameLocation":"290:11:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":120,"members":[{"constant":false,"id":105,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:2","nodeType":"VariableDeclaration","scope":120,"src":"374:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:2","nodeType":"VariableDeclaration","scope":120,"src":"399:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"fee","nameLocation":"432:3:2","nodeType":"VariableDeclaration","scope":120,"src":"425:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":108,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"recipient","nameLocation":"453:9:2","nodeType":"VariableDeclaration","scope":120,"src":"445:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"deadline","nameLocation":"480:8:2","nodeType":"VariableDeclaration","scope":120,"src":"472:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:2","nodeType":"VariableDeclaration","scope":120,"src":"498:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:2","nodeType":"VariableDeclaration","scope":120,"src":"524:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:2","nodeType":"VariableDeclaration","scope":120,"src":"558:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":118,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:2","nodeType":"StructDefinition","scope":196,"src":"334:256:2","visibility":"public"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"596:250:2","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:2","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"params","nameLocation":"909:6:2","nodeType":"VariableDeclaration","scope":129,"src":"877:38:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$120_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":123,"nodeType":"UserDefinedTypeName","pathNode":{"id":122,"name":"ExactInputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":120,"src":"877:22:2"},"referencedDeclaration":120,"src":"877:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$120_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:2"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:2","nodeType":"VariableDeclaration","scope":129,"src":"943:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:2"},"scope":196,"src":"851:111:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":140,"members":[{"constant":false,"id":131,"mutability":"mutable","name":"path","nameLocation":"1008:4:2","nodeType":"VariableDeclaration","scope":140,"src":"1002:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":130,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:2","nodeType":"VariableDeclaration","scope":140,"src":"1022:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:2","nodeType":"VariableDeclaration","scope":140,"src":"1049:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:2","nodeType":"VariableDeclaration","scope":140,"src":"1075:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:2","nodeType":"VariableDeclaration","scope":140,"src":"1101:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:2","nodeType":"StructDefinition","scope":196,"src":"968:164:2","visibility":"public"},{"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"1138:273:2","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":149,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:2","nodeType":"FunctionDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"params","nameLocation":"1462:6:2","nodeType":"VariableDeclaration","scope":149,"src":"1436:32:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$140_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":143,"nodeType":"UserDefinedTypeName","pathNode":{"id":142,"name":"ExactInputParams","nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1436:16:2"},"referencedDeclaration":140,"src":"1436:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$140_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:2"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:2","nodeType":"VariableDeclaration","scope":149,"src":"1496:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:2"},"scope":196,"src":"1416:99:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":166,"members":[{"constant":false,"id":151,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:2","nodeType":"VariableDeclaration","scope":166,"src":"1562:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:2","nodeType":"VariableDeclaration","scope":166,"src":"1587:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"fee","nameLocation":"1620:3:2","nodeType":"VariableDeclaration","scope":166,"src":"1613:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":154,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:2","nodeType":"VariableDeclaration","scope":166,"src":"1633:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:2","nodeType":"VariableDeclaration","scope":166,"src":"1660:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:2","nodeType":"VariableDeclaration","scope":166,"src":"1686:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:2","nodeType":"VariableDeclaration","scope":166,"src":"1713:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:2","nodeType":"VariableDeclaration","scope":166,"src":"1746:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":164,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:2","nodeType":"StructDefinition","scope":196,"src":"1521:257:2","visibility":"public"},{"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"1784:250:2","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":175,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:2","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"params","nameLocation":"2099:6:2","nodeType":"VariableDeclaration","scope":175,"src":"2066:39:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$166_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":169,"nodeType":"UserDefinedTypeName","pathNode":{"id":168,"name":"ExactOutputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":166,"src":"2066:23:2"},"referencedDeclaration":166,"src":"2066:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$166_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:2"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:2","nodeType":"VariableDeclaration","scope":175,"src":"2133:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:2"},"scope":196,"src":"2039:112:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":186,"members":[{"constant":false,"id":177,"mutability":"mutable","name":"path","nameLocation":"2198:4:2","nodeType":"VariableDeclaration","scope":186,"src":"2192:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":176,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:2","nodeType":"VariableDeclaration","scope":186,"src":"2212:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:2","nodeType":"VariableDeclaration","scope":186,"src":"2239:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":180,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":183,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:2","nodeType":"VariableDeclaration","scope":186,"src":"2265:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:2","nodeType":"VariableDeclaration","scope":186,"src":"2292:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:2","nodeType":"StructDefinition","scope":196,"src":"2157:165:2","visibility":"public"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"2328:284:2","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:2","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"params","nameLocation":"2665:6:2","nodeType":"VariableDeclaration","scope":195,"src":"2638:33:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$186_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":189,"nodeType":"UserDefinedTypeName","pathNode":{"id":188,"name":"ExactOutputParams","nodeType":"IdentifierPath","referencedDeclaration":186,"src":"2638:17:2"},"referencedDeclaration":186,"src":"2638:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$186_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:2"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:2","nodeType":"VariableDeclaration","scope":195,"src":"2699:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:2"},"scope":196,"src":"2617:100:2","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":197,"src":"280:2439:2","usedErrors":[]}],"src":"45:2675:2"},"id":2},"contracts/UniswapV3DEXIntegration.sol":{"ast":{"absolutePath":"contracts/UniswapV3DEXIntegration.sol","exportedSymbols":{"IDEXIntegration":[902],"IERC20":[987],"ISwapRouter":[196],"IUniswapV3Factory":[82],"IUniswapV3StaticQuoter":[1051],"IUniswapV3SwapCallback":[96],"Lockable":[770],"TransferHelper":[1211],"UniswapV3Integration":[743]},"id":744,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":198,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:3"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":199,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":744,"sourceUnit":83,"src":"71:69:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":200,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":744,"sourceUnit":197,"src":"141:68:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/TransferHelper.sol","file":"./libraries/TransferHelper.sol","id":201,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":744,"sourceUnit":1212,"src":"211:40:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":744,"sourceUnit":988,"src":"252:33:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDEXIntegration.sol","file":"./interfaces/IDEXIntegration.sol","id":203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":744,"sourceUnit":903,"src":"286:42:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IUniswapV3StaticQuoter.sol","file":"./interfaces/IUniswapV3StaticQuoter.sol","id":204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":744,"sourceUnit":1052,"src":"329:49:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/base/Lockable.sol","file":"./base/Lockable.sol","id":205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":744,"sourceUnit":771,"src":"379:29:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":206,"name":"IDEXIntegration","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"443:15:3"},"id":207,"nodeType":"InheritanceSpecifier","src":"443:15:3"},{"baseName":{"id":208,"name":"Lockable","nodeType":"IdentifierPath","referencedDeclaration":770,"src":"460:8:3"},"id":209,"nodeType":"InheritanceSpecifier","src":"460:8:3"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":743,"linearizedBaseContracts":[743,770,902],"name":"UniswapV3Integration","nameLocation":"419:20:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c45a0155","id":211,"mutability":"immutable","name":"factory","nameLocation":"500:7:3","nodeType":"VariableDeclaration","scope":743,"src":"475:32:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c6bbd5a7","id":213,"mutability":"immutable","name":"quoter","nameLocation":"538:6:3","nodeType":"VariableDeclaration","scope":743,"src":"513:31:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f887ea40","id":215,"mutability":"immutable","name":"router","nameLocation":"632:6:3","nodeType":"VariableDeclaration","scope":743,"src":"607:31:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"607:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"230ed44a","id":218,"mutability":"mutable","name":"feeTiers","nameLocation":"660:8:3","nodeType":"VariableDeclaration","scope":743,"src":"644:24:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[]"},"typeName":{"baseType":{"id":216,"name":"uint24","nodeType":"ElementaryTypeName","src":"644:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":217,"nodeType":"ArrayTypeName","src":"644:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"public"},{"body":{"id":263,"nodeType":"Block","src":"739:202:3","statements":[{"expression":{"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":227,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"749:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":228,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"759:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"749:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":230,"nodeType":"ExpressionStatement","src":"749:18:3"},{"expression":{"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":231,"name":"quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"777:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":232,"name":"_quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"786:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"777:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":234,"nodeType":"ExpressionStatement","src":"777:16:3"},{"expression":{"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":235,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"803:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":236,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"812:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"803:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":238,"nodeType":"ExpressionStatement","src":"803:16:3"},{"expression":{"arguments":[{"hexValue":"313030","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:3:3","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"expression":{"id":239,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"829:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"829:13:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint24_$dyn_storage_ptr_$_t_uint24_$returns$__$bound_to$_t_array$_t_uint24_$dyn_storage_ptr_$","typeString":"function (uint24[] storage pointer,uint24)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"829:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"829:18:3"},{"expression":{"arguments":[{"hexValue":"353030","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"871:3:3","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"}],"expression":{"id":245,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"857:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"857:13:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint24_$dyn_storage_ptr_$_t_uint24_$returns$__$bound_to$_t_array$_t_uint24_$dyn_storage_ptr_$","typeString":"function (uint24[] storage pointer,uint24)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"857:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"857:18:3"},{"expression":{"arguments":[{"hexValue":"33303030","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"899:4:3","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"id":251,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"885:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"885:13:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint24_$dyn_storage_ptr_$_t_uint24_$returns$__$bound_to$_t_array$_t_uint24_$dyn_storage_ptr_$","typeString":"function (uint24[] storage pointer,uint24)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"885:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"885:19:3"},{"expression":{"arguments":[{"hexValue":"3130303030","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:5:3","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}],"expression":{"id":257,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"914:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"914:13:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint24_$dyn_storage_ptr_$_t_uint24_$returns$__$bound_to$_t_array$_t_uint24_$dyn_storage_ptr_$","typeString":"function (uint24[] storage pointer,uint24)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"914:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":262,"nodeType":"ExpressionStatement","src":"914:20:3"}]},"id":264,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"_factory","nameLocation":"695:8:3","nodeType":"VariableDeclaration","scope":264,"src":"687:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"687:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"_quoter","nameLocation":"713:7:3","nodeType":"VariableDeclaration","scope":264,"src":"705:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"705:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"_router","nameLocation":"730:7:3","nodeType":"VariableDeclaration","scope":264,"src":"722:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"686:52:3"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[],"src":"739:0:3"},"scope":743,"src":"675:266:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":309,"nodeType":"Block","src":"1079:247:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":275,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1106:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":276,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"1117:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1106:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":278,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1128:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1147:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1139:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"1139:7:3","typeDescriptions":{}}},"id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1128:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1106:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":285,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"1153:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1172:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1164:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1164:7:3","typeDescriptions":{}}},"id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1164:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1153:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1106:68:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":308,"nodeType":"IfStatement","src":"1089:231:3","trueBody":{"id":307,"nodeType":"Block","src":"1185:135:3","statements":[{"expression":{"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":292,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"1200:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":293,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1208:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":294,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1199:16:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":295,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1218:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":296,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"1228:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1218:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":301,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"1292:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":302,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1301:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1291:18:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1218:91:3","trueExpression":{"components":[{"id":298,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1255:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":299,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"1264:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1254:18:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"src":"1199:110:3","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"ExpressionStatement","src":"1199:110:3"}]}}]},"id":310,"implemented":true,"kind":"function","modifiers":[],"name":"_sortTokens","nameLocation":"956:11:3","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"_tokenA","nameLocation":"985:7:3","nodeType":"VariableDeclaration","scope":310,"src":"977:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"_tokenB","nameLocation":"1010:7:3","nodeType":"VariableDeclaration","scope":310,"src":"1002:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:56:3"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"token0","nameLocation":"1055:6:3","nodeType":"VariableDeclaration","scope":310,"src":"1047:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"token1","nameLocation":"1071:6:3","nodeType":"VariableDeclaration","scope":310,"src":"1063:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"1063:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1046:32:3"},"scope":743,"src":"947:379:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[868],"body":{"id":376,"nodeType":"Block","src":"1451:491:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":320,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"1465:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":321,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1477:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1465:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":326,"nodeType":"IfStatement","src":"1461:64:3","trueBody":{"id":325,"nodeType":"Block","src":"1488:37:3","statements":[{"expression":{"hexValue":"66616c7365","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1509:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":319,"id":324,"nodeType":"Return","src":"1502:12:3"}]}},{"assignments":[331],"declarations":[{"constant":false,"id":331,"mutability":"mutable","name":"_feeTiers","nameLocation":"1550:9:3","nodeType":"VariableDeclaration","scope":376,"src":"1534:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":329,"name":"uint24","nodeType":"ElementaryTypeName","src":"1534:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":330,"nodeType":"ArrayTypeName","src":"1534:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"}],"id":333,"initialValue":{"id":332,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1562:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1534:36:3"},{"assignments":[335],"declarations":[{"constant":false,"id":335,"mutability":"mutable","name":"_factory","nameLocation":"1588:8:3","nodeType":"VariableDeclaration","scope":376,"src":"1580:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1580:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":337,"initialValue":{"id":336,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"1599:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1580:26:3"},{"body":{"id":372,"nodeType":"Block","src":"1661:253:3","statements":[{"assignments":[350],"declarations":[{"constant":false,"id":350,"mutability":"mutable","name":"pool","nameLocation":"1683:4:3","nodeType":"VariableDeclaration","scope":372,"src":"1675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":361,"initialValue":{"arguments":[{"id":355,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"1743:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":356,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1769:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":357,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"1796:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":359,"indexExpression":{"id":358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1806:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1796:12:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"arguments":[{"id":352,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"1708:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":351,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1690:17:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$82_$","typeString":"type(contract IUniswapV3Factory)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1690:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$82","typeString":"contract IUniswapV3Factory"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":55,"src":"1690:35:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1690:132:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1675:147:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"1840:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1856:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1848:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"1848:7:3","typeDescriptions":{}}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1848:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1840:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":371,"nodeType":"IfStatement","src":"1836:68:3","trueBody":{"id":370,"nodeType":"Block","src":"1860:44:3","statements":[{"expression":{"hexValue":"74727565","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1885:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":319,"id":369,"nodeType":"Return","src":"1878:11:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1634:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":343,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"1638:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1638:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1634:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"initializationExpression":{"assignments":[339],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"i","nameLocation":"1627:1:3","nodeType":"VariableDeclaration","scope":373,"src":"1621:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":338,"name":"uint8","nodeType":"ElementaryTypeName","src":"1621:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":341,"initialValue":{"hexValue":"30","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1631:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1621:11:3"},"loopExpression":{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1656:3:3","subExpression":{"id":346,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1656:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":348,"nodeType":"ExpressionStatement","src":"1656:3:3"},"nodeType":"ForStatement","src":"1616:298:3"},{"expression":{"hexValue":"66616c7365","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1930:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":319,"id":375,"nodeType":"Return","src":"1923:12:3"}]},"functionSelector":"b88c5f91","id":377,"implemented":true,"kind":"function","modifiers":[],"name":"validatePair","nameLocation":"1341:12:3","nodeType":"FunctionDefinition","overrides":{"id":316,"nodeType":"OverrideSpecifier","overrides":[],"src":"1427:8:3"},"parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"_tokenIn","nameLocation":"1371:8:3","nodeType":"VariableDeclaration","scope":377,"src":"1363:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"1363:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"_tokenOut","nameLocation":"1397:9:3","nodeType":"VariableDeclaration","scope":377,"src":"1389:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"1389:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1353:59:3"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":377,"src":"1445:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":317,"name":"bool","nodeType":"ElementaryTypeName","src":"1445:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1444:6:3"},"scope":743,"src":"1332:610:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":466,"nodeType":"Block","src":"2111:919:3","statements":[{"assignments":[394],"declarations":[{"constant":false,"id":394,"mutability":"mutable","name":"_feeTiers","nameLocation":"2137:9:3","nodeType":"VariableDeclaration","scope":466,"src":"2121:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":392,"name":"uint24","nodeType":"ElementaryTypeName","src":"2121:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":393,"nodeType":"ArrayTypeName","src":"2121:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"}],"id":396,"initialValue":{"id":395,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2149:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2121:36:3"},{"assignments":[398],"declarations":[{"constant":false,"id":398,"mutability":"mutable","name":"_quoter","nameLocation":"2175:7:3","nodeType":"VariableDeclaration","scope":466,"src":"2167:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"2167:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":400,"initialValue":{"id":399,"name":"quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2185:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2167:24:3"},{"body":{"id":464,"nodeType":"Block","src":"2246:778:3","statements":[{"assignments":[413],"declarations":[{"constant":false,"id":413,"mutability":"mutable","name":"tempAmountOut","nameLocation":"2268:13:3","nodeType":"VariableDeclaration","scope":464,"src":"2260:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":414,"nodeType":"VariableDeclarationStatement","src":"2260:21:3"},{"clauses":[{"block":{"id":437,"nodeType":"Block","src":"2737:50:3","statements":[{"expression":{"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":433,"name":"tempAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2755:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":434,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2771:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2755:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":436,"nodeType":"ExpressionStatement","src":"2755:17:3"}]},"errorName":"","id":438,"nodeType":"TryCatchClause","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"t","nameLocation":"2734:1:3","nodeType":"VariableDeclaration","scope":438,"src":"2726:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"2726:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2725:11:3"},"src":"2717:70:3"},{"block":{"id":446,"nodeType":"Block","src":"2826:50:3","statements":[{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":442,"name":"tempAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2844:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2860:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2844:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":445,"nodeType":"ExpressionStatement","src":"2844:17:3"}]},"errorName":"","id":447,"nodeType":"TryCatchClause","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"2795:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":439,"name":"bytes","nodeType":"ElementaryTypeName","src":"2795:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2794:31:3"},"src":"2788:88:3"}],"externalCall":{"arguments":[{"arguments":[{"id":421,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2476:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":422,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2520:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":423,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2565:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":424,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2605:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":426,"indexExpression":{"id":425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2615:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2605:12:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"hexValue":"30","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2662:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":419,"name":"IUniswapV3StaticQuoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2390:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3StaticQuoter_$1051_$","typeString":"type(contract IUniswapV3StaticQuoter)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"QuoteExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"2390:50:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_QuoteExactInputSingleParams_$1011_storage_ptr_$","typeString":"type(struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams storage pointer)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","amountIn","fee","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"2390:296:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams memory"}],"expression":{"arguments":[{"id":416,"name":"_quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2338:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"IUniswapV3StaticQuoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2315:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3StaticQuoter_$1051_$","typeString":"type(contract IUniswapV3StaticQuoter)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2315:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3StaticQuoter_$1051","typeString":"contract IUniswapV3StaticQuoter"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"quoteExactInputSingle","nodeType":"MemberAccess","referencedDeclaration":1020,"src":"2315:53:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams memory) view external returns (uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2315:389:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":448,"nodeType":"TryStatement","src":"2295:581:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":449,"name":"tempAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2893:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":450,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2909:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2893:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"IfStatement","src":"2889:125:3","trueBody":{"id":462,"nodeType":"Block","src":"2920:94:3","statements":[{"expression":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":452,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2938:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":453,"name":"tempAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2950:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2938:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":455,"nodeType":"ExpressionStatement","src":"2938:25:3"},{"expression":{"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":456,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2981:3:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":457,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2987:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":459,"indexExpression":{"id":458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2997:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2987:12:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"2981:18:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":461,"nodeType":"ExpressionStatement","src":"2981:18:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2219:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":406,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2223:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2223:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2219:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":465,"initializationExpression":{"assignments":[402],"declarations":[{"constant":false,"id":402,"mutability":"mutable","name":"i","nameLocation":"2212:1:3","nodeType":"VariableDeclaration","scope":465,"src":"2206:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":401,"name":"uint8","nodeType":"ElementaryTypeName","src":"2206:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":404,"initialValue":{"hexValue":"30","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2216:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2206:11:3"},"loopExpression":{"expression":{"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2241:3:3","subExpression":{"id":409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2241:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":411,"nodeType":"ExpressionStatement","src":"2241:3:3"},"nodeType":"ForStatement","src":"2201:823:3"}]},"id":467,"implemented":true,"kind":"function","modifiers":[],"name":"_getAmountOut","nameLocation":"1957:13:3","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"_tokenIn","nameLocation":"1988:8:3","nodeType":"VariableDeclaration","scope":467,"src":"1980:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"1980:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"_tokenOut","nameLocation":"2014:9:3","nodeType":"VariableDeclaration","scope":467,"src":"2006:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"2006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"_amountIn","nameLocation":"2041:9:3","nodeType":"VariableDeclaration","scope":467,"src":"2033:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1970:86:3"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"amountOut","nameLocation":"2088:9:3","nodeType":"VariableDeclaration","scope":467,"src":"2080:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"fee","nameLocation":"2106:3:3","nodeType":"VariableDeclaration","scope":467,"src":"2099:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":387,"name":"uint24","nodeType":"ElementaryTypeName","src":"2099:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2079:31:3"},"scope":743,"src":"1948:1082:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":560,"nodeType":"Block","src":"3198:933:3","statements":[{"assignments":[484],"declarations":[{"constant":false,"id":484,"mutability":"mutable","name":"_feeTiers","nameLocation":"3224:9:3","nodeType":"VariableDeclaration","scope":560,"src":"3208:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":482,"name":"uint24","nodeType":"ElementaryTypeName","src":"3208:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":483,"nodeType":"ArrayTypeName","src":"3208:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"}],"id":486,"initialValue":{"id":485,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3236:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3208:36:3"},{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"_quoter","nameLocation":"3262:7:3","nodeType":"VariableDeclaration","scope":560,"src":"3254:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"3254:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":490,"initialValue":{"id":489,"name":"quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3272:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3254:24:3"},{"body":{"id":558,"nodeType":"Block","src":"3333:792:3","statements":[{"assignments":[503],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"tempAmountIn","nameLocation":"3355:12:3","nodeType":"VariableDeclaration","scope":558,"src":"3347:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"3347:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":504,"nodeType":"VariableDeclarationStatement","src":"3347:20:3"},{"clauses":[{"block":{"id":527,"nodeType":"Block","src":"3824:49:3","statements":[{"expression":{"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":523,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3842:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":524,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3857:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":526,"nodeType":"ExpressionStatement","src":"3842:16:3"}]},"errorName":"","id":528,"nodeType":"TryCatchClause","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"t","nameLocation":"3821:1:3","nodeType":"VariableDeclaration","scope":528,"src":"3813:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3813:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3812:11:3"},"src":"3804:69:3"},{"block":{"id":536,"nodeType":"Block","src":"3912:49:3","statements":[{"expression":{"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":532,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3930:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3945:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3930:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":535,"nodeType":"ExpressionStatement","src":"3930:16:3"}]},"errorName":"","id":537,"nodeType":"TryCatchClause","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"3881:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":529,"name":"bytes","nodeType":"ElementaryTypeName","src":"3881:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3880:31:3"},"src":"3874:87:3"}],"externalCall":{"arguments":[{"arguments":[{"id":511,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3564:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3608:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":513,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"3651:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":514,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"3692:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":516,"indexExpression":{"id":515,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3702:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3692:12:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"hexValue":"30","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3749:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":509,"name":"IUniswapV3StaticQuoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"3477:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3StaticQuoter_$1051_$","typeString":"type(contract IUniswapV3StaticQuoter)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"QuoteExactOutputSingleParams","nodeType":"MemberAccess","referencedDeclaration":1041,"src":"3477:51:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_QuoteExactOutputSingleParams_$1041_storage_ptr_$","typeString":"type(struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams storage pointer)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","amount","fee","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"3477:296:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams memory"}],"expression":{"arguments":[{"id":506,"name":"_quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3424:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"IUniswapV3StaticQuoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"3401:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3StaticQuoter_$1051_$","typeString":"type(contract IUniswapV3StaticQuoter)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3401:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3StaticQuoter_$1051","typeString":"contract IUniswapV3StaticQuoter"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"quoteExactOutputSingle","nodeType":"MemberAccess","referencedDeclaration":1050,"src":"3401:54:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams memory) view external returns (uint256)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3401:390:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":538,"nodeType":"TryStatement","src":"3381:580:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3978:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3993:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3978:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":542,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3998:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":543,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"4013:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3998:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3978:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":557,"nodeType":"IfStatement","src":"3974:141:3","trueBody":{"id":556,"nodeType":"Block","src":"4023:92:3","statements":[{"expression":{"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":546,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"4041:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":547,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4052:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4041:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":549,"nodeType":"ExpressionStatement","src":"4041:23:3"},{"expression":{"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":550,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4082:3:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":551,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"4088:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":553,"indexExpression":{"id":552,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4098:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4088:12:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"4082:18:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":555,"nodeType":"ExpressionStatement","src":"4082:18:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3306:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":496,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"3310:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3310:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3306:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":559,"initializationExpression":{"assignments":[492],"declarations":[{"constant":false,"id":492,"mutability":"mutable","name":"i","nameLocation":"3299:1:3","nodeType":"VariableDeclaration","scope":559,"src":"3293:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":491,"name":"uint8","nodeType":"ElementaryTypeName","src":"3293:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":494,"initialValue":{"hexValue":"30","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3303:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3293:11:3"},"loopExpression":{"expression":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3328:3:3","subExpression":{"id":499,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3328:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":501,"nodeType":"ExpressionStatement","src":"3328:3:3"},"nodeType":"ForStatement","src":"3288:837:3"}]},"id":561,"implemented":true,"kind":"function","modifiers":[],"name":"_getAmountIn","nameLocation":"3045:12:3","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"_tokenIn","nameLocation":"3075:8:3","nodeType":"VariableDeclaration","scope":561,"src":"3067:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"3067:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"_tokenOut","nameLocation":"3101:9:3","nodeType":"VariableDeclaration","scope":561,"src":"3093:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"_amountOut","nameLocation":"3128:10:3","nodeType":"VariableDeclaration","scope":561,"src":"3120:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3120:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3057:87:3"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"amountIn","nameLocation":"3176:8:3","nodeType":"VariableDeclaration","scope":561,"src":"3168:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3168:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"fee","nameLocation":"3193:3:3","nodeType":"VariableDeclaration","scope":561,"src":"3186:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":477,"name":"uint24","nodeType":"ElementaryTypeName","src":"3186:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3167:30:3"},"scope":743,"src":"3036:1095:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[879],"body":{"id":582,"nodeType":"Block","src":"4296:78:3","statements":[{"expression":{"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":573,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"4307:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":574,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4306:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$","typeString":"tuple(uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":576,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4336:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"4346:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":578,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"4357:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":575,"name":"_getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4322:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint24_$","typeString":"function (address,address,uint256) view returns (uint256,uint24)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4322:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint24_$","typeString":"tuple(uint256,uint24)"}},"src":"4306:61:3","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"4306:61:3"}]},"functionSelector":"4aa06652","id":583,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"4146:12:3","nodeType":"FunctionDefinition","overrides":{"id":569,"nodeType":"OverrideSpecifier","overrides":[],"src":"4259:8:3"},"parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"_tokenIn","nameLocation":"4176:8:3","nodeType":"VariableDeclaration","scope":583,"src":"4168:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"4168:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"_tokenOut","nameLocation":"4202:9:3","nodeType":"VariableDeclaration","scope":583,"src":"4194:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"4194:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"_amountIn","nameLocation":"4229:9:3","nodeType":"VariableDeclaration","scope":583,"src":"4221:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"4221:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4158:86:3"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"amountOut","nameLocation":"4285:9:3","nodeType":"VariableDeclaration","scope":583,"src":"4277:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4277:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4276:19:3"},"scope":743,"src":"4137:237:3","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[890],"body":{"id":604,"nodeType":"Block","src":"4538:77:3","statements":[{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":595,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4549:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":596,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4548:12:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$","typeString":"tuple(uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":598,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4576:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":599,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"4586:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"4597:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":597,"name":"_getAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4563:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint24_$","typeString":"function (address,address,uint256) view returns (uint256,uint24)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4563:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint24_$","typeString":"tuple(uint256,uint24)"}},"src":"4548:60:3","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"4548:60:3"}]},"functionSelector":"53b609b5","id":605,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"4389:11:3","nodeType":"FunctionDefinition","overrides":{"id":591,"nodeType":"OverrideSpecifier","overrides":[],"src":"4502:8:3"},"parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"_tokenIn","nameLocation":"4418:8:3","nodeType":"VariableDeclaration","scope":605,"src":"4410:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"4410:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"_tokenOut","nameLocation":"4444:9:3","nodeType":"VariableDeclaration","scope":605,"src":"4436:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"4436:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"_amountOut","nameLocation":"4471:10:3","nodeType":"VariableDeclaration","scope":605,"src":"4463:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"4463:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4400:87:3"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"amountIn","nameLocation":"4528:8:3","nodeType":"VariableDeclaration","scope":605,"src":"4520:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"4520:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4519:18:3"},"scope":743,"src":"4380:235:3","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[901],"body":{"id":741,"nodeType":"Block","src":"4766:1189:3","statements":[{"assignments":[620],"declarations":[{"constant":false,"id":620,"mutability":"mutable","name":"amountIn","nameLocation":"4784:8:3","nodeType":"VariableDeclaration","scope":741,"src":"4776:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"4776:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":630,"initialValue":{"arguments":[{"arguments":[{"id":627,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4830:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_UniswapV3Integration_$743","typeString":"contract UniswapV3Integration"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniswapV3Integration_$743","typeString":"contract UniswapV3Integration"}],"id":626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4822:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"4822:7:3","typeDescriptions":{}}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4822:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":622,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"4802:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":621,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"4795:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$987_$","typeString":"type(contract IERC20)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4795:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$987","typeString":"contract IERC20"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":931,"src":"4795:26:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4795:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4776:60:3"},{"assignments":[632],"declarations":[{"constant":false,"id":632,"mutability":"mutable","name":"fee","nameLocation":"4853:3:3","nodeType":"VariableDeclaration","scope":741,"src":"4846:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":631,"name":"uint24","nodeType":"ElementaryTypeName","src":"4846:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"id":633,"nodeType":"VariableDeclarationStatement","src":"4846:10:3"},{"expression":{"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":634,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4867:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":635,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4878:3:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"id":636,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4866:16:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint24_$","typeString":"tuple(uint256,uint24)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":638,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"4899:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4909:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4920:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":637,"name":"_getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4885:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint24_$","typeString":"function (address,address,uint256) view returns (uint256,uint24)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4885:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint24_$","typeString":"tuple(uint256,uint24)"}},"src":"4866:63:3","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"4866:63:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":645,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4960:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4972:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4960:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4977:3:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4983:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4977:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4960:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e69737761705633496e746567726174696f6e3a20494e53554646494349454e545f4f55545055545f414d4f554e54","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4998:50:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d33c7d656a37e2d51096a86bf4fdd989ace91e4e1b9601a9f565b11d348b32ff","typeString":"literal_string \"UniswapV3Integration: INSUFFICIENT_OUTPUT_AMOUNT\""},"value":"UniswapV3Integration: INSUFFICIENT_OUTPUT_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d33c7d656a37e2d51096a86bf4fdd989ace91e4e1b9601a9f565b11d348b32ff","typeString":"literal_string \"UniswapV3Integration: INSUFFICIENT_OUTPUT_AMOUNT\""}],"id":644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4939:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4939:119:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"4939:119:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5136:3:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5151:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5143:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5143:7:3","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5143:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5136:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":668,"nodeType":"IfStatement","src":"5132:42:3","trueBody":{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":661,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5155:3:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":664,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5169:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_UniswapV3Integration_$743","typeString":"contract UniswapV3Integration"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniswapV3Integration_$743","typeString":"contract UniswapV3Integration"}],"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5161:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"5161:7:3","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5161:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5155:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":667,"nodeType":"ExpressionStatement","src":"5155:19:3"}},{"assignments":[670],"declarations":[{"constant":false,"id":670,"mutability":"mutable","name":"_router","nameLocation":"5193:7:3","nodeType":"VariableDeclaration","scope":741,"src":"5185:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"5185:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":672,"initialValue":{"id":671,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"5203:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5185:24:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":679,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5258:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_UniswapV3Integration_$743","typeString":"contract UniswapV3Integration"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniswapV3Integration_$743","typeString":"contract UniswapV3Integration"}],"id":678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5250:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"5250:7:3","typeDescriptions":{}}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5250:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"5265:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":674,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"5230:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":673,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5223:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$987_$","typeString":"type(contract IERC20)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5223:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$987","typeString":"contract IERC20"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":940,"src":"5223:26:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5223:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5277:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5223:55:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":698,"nodeType":"IfStatement","src":"5219:150:3","trueBody":{"id":697,"nodeType":"Block","src":"5280:89:3","statements":[{"expression":{"arguments":[{"id":688,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"5321:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":689,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"5331:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5345:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"5345:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":690,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5340:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5340:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5340:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":685,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"5294:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$1211_$","typeString":"type(library TransferHelper)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":1096,"src":"5294:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5294:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"5294:64:3"}]}},{"assignments":[700],"declarations":[{"constant":false,"id":700,"mutability":"mutable","name":"initialBalance","nameLocation":"5387:14:3","nodeType":"VariableDeclaration","scope":741,"src":"5379:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"5379:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":707,"initialValue":{"arguments":[{"id":705,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5432:3:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":702,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5411:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":701,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5404:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$987_$","typeString":"type(contract IERC20)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$987","typeString":"contract IERC20"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":931,"src":"5404:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5379:57:3"},{"expression":{"arguments":[{"arguments":[{"id":714,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"5559:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":715,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5595:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5627:3:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":717,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5659:3:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":718,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5690:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5690:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":720,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5733:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5777:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5815:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":712,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"5497:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$196_$","typeString":"type(contract ISwapRouter)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":120,"src":"5497:34:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$120_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"5497:334:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$120_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$120_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"arguments":[{"id":709,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"5458:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"5446:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$196_$","typeString":"type(contract ISwapRouter)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5446:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$196","typeString":"contract ISwapRouter"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":129,"src":"5446:37:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$120_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5446:395:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":725,"nodeType":"ExpressionStatement","src":"5446:395:3"},{"assignments":[727],"declarations":[{"constant":false,"id":727,"mutability":"mutable","name":"balance","nameLocation":"5860:7:3","nodeType":"VariableDeclaration","scope":741,"src":"5852:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"5852:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":734,"initialValue":{"arguments":[{"id":732,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5898:3:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":729,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5877:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":728,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5870:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$987_$","typeString":"type(contract IERC20)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5870:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$987","typeString":"contract IERC20"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":931,"src":"5870:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5870:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5852:50:3"},{"expression":{"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":735,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"5912:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5924:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":737,"name":"initialBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"5934:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5924:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5912:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":740,"nodeType":"ExpressionStatement","src":"5912:36:3"}]},"functionSelector":"93316212","id":742,"implemented":true,"kind":"function","modifiers":[{"id":615,"kind":"modifierInvocation","modifierName":{"id":614,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":769,"src":"4733:4:3"},"nodeType":"ModifierInvocation","src":"4733:4:3"}],"name":"swap","nameLocation":"4630:4:3","nodeType":"FunctionDefinition","overrides":{"id":613,"nodeType":"OverrideSpecifier","overrides":[],"src":"4724:8:3"},"parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"_tokenIn","nameLocation":"4652:8:3","nodeType":"VariableDeclaration","scope":742,"src":"4644:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"4644:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"_tokenOut","nameLocation":"4678:9:3","nodeType":"VariableDeclaration","scope":742,"src":"4670:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"_to","nameLocation":"4705:3:3","nodeType":"VariableDeclaration","scope":742,"src":"4697:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"4697:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4634:80:3"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"amountOut","nameLocation":"4755:9:3","nodeType":"VariableDeclaration","scope":742,"src":"4747:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4746:19:3"},"scope":743,"src":"4621:1334:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":744,"src":"410:5547:3","usedErrors":[750]}],"src":"45:5913:3"},"id":3},"contracts/base/Lockable.sol":{"ast":{"absolutePath":"contracts/base/Lockable.sol","exportedSymbols":{"Lockable":[770]},"id":771,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":745,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":770,"linearizedBaseContracts":[770],"name":"Lockable","nameLocation":"80:8:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":748,"mutability":"mutable","name":"unlocked","nameLocation":"111:8:4","nodeType":"VariableDeclaration","scope":770,"src":"95:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"95:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":750,"name":"Locked","nameLocation":"136:6:4","nodeType":"ErrorDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"142:2:4"},"src":"130:15:4"},{"body":{"id":768,"nodeType":"Block","src":"167:106:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":752,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"181:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"193:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"181:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":758,"nodeType":"IfStatement","src":"177:34:4","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":755,"name":"Locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"203:6:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"203:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"RevertStatement","src":"196:15:4"}},{"expression":{"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":759,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"221:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"232:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"221:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":762,"nodeType":"ExpressionStatement","src":"221:12:4"},{"id":763,"nodeType":"PlaceholderStatement","src":"243:1:4"},{"expression":{"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":764,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"254:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"265:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"254:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":767,"nodeType":"ExpressionStatement","src":"254:12:4"}]},"id":769,"name":"lock","nameLocation":"160:4:4","nodeType":"ModifierDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"164:2:4"},"src":"151:122:4","virtual":false,"visibility":"internal"}],"scope":771,"src":"71:204:4","usedErrors":[750]}],"src":"45:231:4"},"id":4},"contracts/interfaces/IDEXAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IDEXAggregator.sol","exportedSymbols":{"IDEXAggregator":[857]},"id":858,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":772,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":857,"linearizedBaseContracts":[857],"name":"IDEXAggregator","nameLocation":"81:14:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6338a7c0","id":779,"implemented":false,"kind":"function","modifiers":[],"name":"dexes","nameLocation":"111:5:5","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"117:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:9:5"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"149:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"149:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"148:9:5"},"scope":857,"src":"102:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"88a02f23","id":786,"implemented":false,"kind":"function","modifiers":[],"name":"dexNames","nameLocation":"173:8:5","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"182:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"182:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"181:9:5"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"214:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":783,"name":"string","nodeType":"ElementaryTypeName","src":"214:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"213:15:5"},"scope":857,"src":"164:65:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f54d1ce","id":793,"implemented":false,"kind":"function","modifiers":[],"name":"dexIndex","nameLocation":"244:8:5","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"253:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"253:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"252:9:5"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"285:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"285:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"284:9:5"},"scope":857,"src":"235:59:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"52041b5f","id":798,"implemented":false,"kind":"function","modifiers":[],"name":"dexLength","nameLocation":"309:9:5","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"318:2:5"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":798,"src":"344:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"343:9:5"},"scope":857,"src":"300:53:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"af0d9479","id":809,"implemented":false,"kind":"function","modifiers":[],"name":"validatePair","nameLocation":"368:12:5","nodeType":"FunctionDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"_dex","nameLocation":"398:4:5","nodeType":"VariableDeclaration","scope":809,"src":"390:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"_tokenIn","nameLocation":"420:8:5","nodeType":"VariableDeclaration","scope":809,"src":"412:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"412:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"_tokenOut","nameLocation":"446:9:5","nodeType":"VariableDeclaration","scope":809,"src":"438:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"380:81:5"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":809,"src":"485:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":806,"name":"bool","nodeType":"ElementaryTypeName","src":"485:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"484:6:5"},"scope":857,"src":"359:132:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ec278309","id":824,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"506:11:5","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"_dex","nameLocation":"535:4:5","nodeType":"VariableDeclaration","scope":824,"src":"527:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"_tokenIn","nameLocation":"557:8:5","nodeType":"VariableDeclaration","scope":824,"src":"549:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"_tokenOut","nameLocation":"583:9:5","nodeType":"VariableDeclaration","scope":824,"src":"575:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"575:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"_amountOut","nameLocation":"610:10:5","nodeType":"VariableDeclaration","scope":824,"src":"602:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:109:5"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"amountIn","nameLocation":"658:8:5","nodeType":"VariableDeclaration","scope":824,"src":"650:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"650:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"dex","nameLocation":"676:3:5","nodeType":"VariableDeclaration","scope":824,"src":"668:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"649:31:5"},"scope":857,"src":"497:184:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d7176ca9","id":839,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"696:12:5","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"_dex","nameLocation":"726:4:5","nodeType":"VariableDeclaration","scope":839,"src":"718:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"_tokenIn","nameLocation":"748:8:5","nodeType":"VariableDeclaration","scope":839,"src":"740:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"_tokenOut","nameLocation":"774:9:5","nodeType":"VariableDeclaration","scope":839,"src":"766:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"_amountIn","nameLocation":"801:9:5","nodeType":"VariableDeclaration","scope":839,"src":"793:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"708:108:5"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"amountOut","nameLocation":"848:9:5","nodeType":"VariableDeclaration","scope":839,"src":"840:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"dex","nameLocation":"867:3:5","nodeType":"VariableDeclaration","scope":839,"src":"859:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"839:32:5"},"scope":857,"src":"687:185:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"677fdac8","id":856,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"887:4:5","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"_dex","nameLocation":"909:4:5","nodeType":"VariableDeclaration","scope":856,"src":"901:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"_tokenIn","nameLocation":"931:8:5","nodeType":"VariableDeclaration","scope":856,"src":"923:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"923:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"_tokenOut","nameLocation":"957:9:5","nodeType":"VariableDeclaration","scope":856,"src":"949:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"949:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"_minAmountOut","nameLocation":"984:13:5","nodeType":"VariableDeclaration","scope":856,"src":"976:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"_to","nameLocation":"1015:3:5","nodeType":"VariableDeclaration","scope":856,"src":"1007:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"891:133:5"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"amountOut","nameLocation":"1051:9:5","nodeType":"VariableDeclaration","scope":856,"src":"1043:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"dex","nameLocation":"1070:3:5","nodeType":"VariableDeclaration","scope":856,"src":"1062:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"1062:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1042:32:5"},"scope":857,"src":"878:197:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":858,"src":"71:1006:5","usedErrors":[]}],"src":"45:1033:5"},"id":5},"contracts/interfaces/IDEXIntegration.sol":{"ast":{"absolutePath":"contracts/interfaces/IDEXIntegration.sol","exportedSymbols":{"IDEXIntegration":[902]},"id":903,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":859,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IDEXIntegration","nameLocation":"81:15:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b88c5f91","id":868,"implemented":false,"kind":"function","modifiers":[],"name":"validatePair","nameLocation":"112:12:6","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"_tokenIn","nameLocation":"142:8:6","nodeType":"VariableDeclaration","scope":868,"src":"134:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"_tokenOut","nameLocation":"168:9:6","nodeType":"VariableDeclaration","scope":868,"src":"160:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"160:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"124:59:6"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"207:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":865,"name":"bool","nodeType":"ElementaryTypeName","src":"207:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"206:6:6"},"scope":902,"src":"103:110:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4aa06652","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"228:12:6","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"_tokenIn","nameLocation":"258:8:6","nodeType":"VariableDeclaration","scope":879,"src":"250:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"_tokenOut","nameLocation":"284:9:6","nodeType":"VariableDeclaration","scope":879,"src":"276:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"276:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"_amountIn","nameLocation":"311:9:6","nodeType":"VariableDeclaration","scope":879,"src":"303:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"303:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"240:86:6"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"350:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:9:6"},"scope":902,"src":"219:140:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"53b609b5","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"374:11:6","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"_tokenIn","nameLocation":"403:8:6","nodeType":"VariableDeclaration","scope":890,"src":"395:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":883,"mutability":"mutable","name":"_tokenOut","nameLocation":"429:9:6","nodeType":"VariableDeclaration","scope":890,"src":"421:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"421:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"_amountOut","nameLocation":"456:10:6","nodeType":"VariableDeclaration","scope":890,"src":"448:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"385:87:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"496:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"495:9:6"},"scope":902,"src":"365:140:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"93316212","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"520:4:6","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"_tokenIn","nameLocation":"542:8:6","nodeType":"VariableDeclaration","scope":901,"src":"534:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"_tokenOut","nameLocation":"568:9:6","nodeType":"VariableDeclaration","scope":901,"src":"560:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"560:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"_to","nameLocation":"595:3:6","nodeType":"VariableDeclaration","scope":901,"src":"587:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"524:80:6"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"623:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"622:9:6"},"scope":902,"src":"511:121:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"71:563:6","usedErrors":[]}],"src":"45:590:6"},"id":6},"contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[987]},"id":988,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":987,"linearizedBaseContracts":[987],"name":"IERC20","nameLocation":"81:6:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"06fdde03","id":909,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"103:4:7","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[],"src":"107:2:7"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"133:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":906,"name":"string","nodeType":"ElementaryTypeName","src":"133:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"132:15:7"},"scope":987,"src":"94:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":914,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"163:6:7","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"169:2:7"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"195:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":911,"name":"string","nodeType":"ElementaryTypeName","src":"195:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"194:15:7"},"scope":987,"src":"154:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":919,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"225:8:7","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"233:2:7"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":919,"src":"259:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":916,"name":"uint8","nodeType":"ElementaryTypeName","src":"259:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"258:7:7"},"scope":987,"src":"216:50:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":924,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"281:11:7","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[],"src":"292:2:7"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"318:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:9:7"},"scope":987,"src":"272:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":931,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"342:9:7","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"352:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"352:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"351:9:7"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"384:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"384:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"383:9:7"},"scope":987,"src":"333:60:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":940,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"408:9:7","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"_owner","nameLocation":"435:6:7","nodeType":"VariableDeclaration","scope":940,"src":"427:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"_spender","nameLocation":"459:8:7","nodeType":"VariableDeclaration","scope":940,"src":"451:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"417:56:7"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"497:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:7"},"scope":987,"src":"399:107:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":949,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"521:7:7","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"_spender","nameLocation":"537:8:7","nodeType":"VariableDeclaration","scope":949,"src":"529:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"_value","nameLocation":"555:6:7","nodeType":"VariableDeclaration","scope":949,"src":"547:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:34:7"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"581:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":946,"name":"bool","nodeType":"ElementaryTypeName","src":"581:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"580:6:7"},"scope":987,"src":"512:75:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":958,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"602:8:7","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"_to","nameLocation":"619:3:7","nodeType":"VariableDeclaration","scope":958,"src":"611:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"_value","nameLocation":"632:6:7","nodeType":"VariableDeclaration","scope":958,"src":"624:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:29:7"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":958,"src":"658:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":955,"name":"bool","nodeType":"ElementaryTypeName","src":"658:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"657:6:7"},"scope":987,"src":"593:71:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":969,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"679:12:7","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"_from","nameLocation":"709:5:7","nodeType":"VariableDeclaration","scope":969,"src":"701:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"_to","nameLocation":"732:3:7","nodeType":"VariableDeclaration","scope":969,"src":"724:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"_value","nameLocation":"753:6:7","nodeType":"VariableDeclaration","scope":969,"src":"745:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"691:74:7"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":969,"src":"784:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":966,"name":"bool","nodeType":"ElementaryTypeName","src":"784:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"783:6:7"},"scope":987,"src":"670:120:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":986,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"805:6:7","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"_owner","nameLocation":"829:6:7","nodeType":"VariableDeclaration","scope":986,"src":"821:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"_spender","nameLocation":"853:8:7","nodeType":"VariableDeclaration","scope":986,"src":"845:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"_value","nameLocation":"879:6:7","nodeType":"VariableDeclaration","scope":986,"src":"871:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"_deadline","nameLocation":"903:9:7","nodeType":"VariableDeclaration","scope":986,"src":"895:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"_v","nameLocation":"928:2:7","nodeType":"VariableDeclaration","scope":986,"src":"922:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":978,"name":"uint8","nodeType":"ElementaryTypeName","src":"922:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"_r","nameLocation":"948:2:7","nodeType":"VariableDeclaration","scope":986,"src":"940:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"940:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"_s","nameLocation":"968:2:7","nodeType":"VariableDeclaration","scope":986,"src":"960:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"960:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"811:165:7"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"985:0:7"},"scope":987,"src":"796:190:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":988,"src":"71:917:7","usedErrors":[]}],"src":"45:944:7"},"id":7},"contracts/interfaces/IUniswapV3StaticQuoter.sol":{"ast":{"absolutePath":"contracts/interfaces/IUniswapV3StaticQuoter.sol","exportedSymbols":{"IUniswapV3StaticQuoter":[1051]},"id":1052,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":989,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:8"},{"id":990,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1051,"linearizedBaseContracts":[1051],"name":"IUniswapV3StaticQuoter","nameLocation":"101:22:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"130:319:8","text":"@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received"},"functionSelector":"cdca1753","id":1000,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactInput","nameLocation":"463:15:8","nodeType":"FunctionDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"path","nameLocation":"501:4:8","nodeType":"VariableDeclaration","scope":1000,"src":"488:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":992,"name":"bytes","nodeType":"ElementaryTypeName","src":"488:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"amountIn","nameLocation":"523:8:8","nodeType":"VariableDeclaration","scope":1000,"src":"515:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"478:59:8"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"amountOut","nameLocation":"569:9:8","nodeType":"VariableDeclaration","scope":1000,"src":"561:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"561:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"560:19:8"},"scope":1051,"src":"454:126:8","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IUniswapV3StaticQuoter.QuoteExactInputSingleParams","id":1011,"members":[{"constant":false,"id":1002,"mutability":"mutable","name":"tokenIn","nameLocation":"639:7:8","nodeType":"VariableDeclaration","scope":1011,"src":"631:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"tokenOut","nameLocation":"664:8:8","nodeType":"VariableDeclaration","scope":1011,"src":"656:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"amountIn","nameLocation":"690:8:8","nodeType":"VariableDeclaration","scope":1011,"src":"682:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"fee","nameLocation":"715:3:8","nodeType":"VariableDeclaration","scope":1011,"src":"708:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1007,"name":"uint24","nodeType":"ElementaryTypeName","src":"708:6:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"736:17:8","nodeType":"VariableDeclaration","scope":1011,"src":"728:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1009,"name":"uint160","nodeType":"ElementaryTypeName","src":"728:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"QuoteExactInputSingleParams","nameLocation":"593:27:8","nodeType":"StructDefinition","scope":1051,"src":"586:174:8","visibility":"public"},{"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"766:545:8","text":"@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountIn The desired input amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received"},"functionSelector":"c6a5026a","id":1020,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactInputSingle","nameLocation":"1325:21:8","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"params","nameLocation":"1391:6:8","nodeType":"VariableDeclaration","scope":1020,"src":"1356:41:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams"},"typeName":{"id":1014,"nodeType":"UserDefinedTypeName","pathNode":{"id":1013,"name":"QuoteExactInputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":1011,"src":"1356:27:8"},"referencedDeclaration":1011,"src":"1356:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactInputSingleParams_$1011_storage_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams"}},"visibility":"internal"}],"src":"1346:57:8"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"amountOut","nameLocation":"1435:9:8","nodeType":"VariableDeclaration","scope":1020,"src":"1427:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1426:19:8"},"scope":1051,"src":"1316:130:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"1452:317:8","text":"@notice Returns the amount in needed for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountOut The amount of the last token that would be received\n @return amountIn The amount of the first token to swap"},"functionSelector":"2f80bb1d","id":1030,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactOutput","nameLocation":"1783:16:8","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"path","nameLocation":"1822:4:8","nodeType":"VariableDeclaration","scope":1030,"src":"1809:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1022,"name":"bytes","nodeType":"ElementaryTypeName","src":"1809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"amountOut","nameLocation":"1844:9:8","nodeType":"VariableDeclaration","scope":1030,"src":"1836:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1799:60:8"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"amountIn","nameLocation":"1891:8:8","nodeType":"VariableDeclaration","scope":1030,"src":"1883:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1882:18:8"},"scope":1051,"src":"1774:127:8","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams","id":1041,"members":[{"constant":false,"id":1032,"mutability":"mutable","name":"tokenIn","nameLocation":"1961:7:8","nodeType":"VariableDeclaration","scope":1041,"src":"1953:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"tokenOut","nameLocation":"1986:8:8","nodeType":"VariableDeclaration","scope":1041,"src":"1978:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"amount","nameLocation":"2012:6:8","nodeType":"VariableDeclaration","scope":1041,"src":"2004:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2004:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"fee","nameLocation":"2035:3:8","nodeType":"VariableDeclaration","scope":1041,"src":"2028:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1037,"name":"uint24","nodeType":"ElementaryTypeName","src":"2028:6:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"2056:17:8","nodeType":"VariableDeclaration","scope":1041,"src":"2048:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1039,"name":"uint160","nodeType":"ElementaryTypeName","src":"2048:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"QuoteExactOutputSingleParams","nameLocation":"1914:28:8","nodeType":"StructDefinition","scope":1051,"src":"1907:173:8","visibility":"public"},{"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"2086:542:8","text":"@notice Returns the amount in needed for a given exact output but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountOut The desired output amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount of `tokenIn` that would be needed"},"functionSelector":"bd21704a","id":1050,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactOutputSingle","nameLocation":"2642:22:8","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"params","nameLocation":"2710:6:8","nodeType":"VariableDeclaration","scope":1050,"src":"2674:42:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams"},"typeName":{"id":1044,"nodeType":"UserDefinedTypeName","pathNode":{"id":1043,"name":"QuoteExactOutputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":1041,"src":"2674:28:8"},"referencedDeclaration":1041,"src":"2674:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactOutputSingleParams_$1041_storage_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams"}},"visibility":"internal"}],"src":"2664:58:8"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"amountIn","nameLocation":"2754:8:8","nodeType":"VariableDeclaration","scope":1050,"src":"2746:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"2746:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2745:18:8"},"scope":1051,"src":"2633:131:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1052,"src":"91:2675:8","usedErrors":[]}],"src":"45:2721:8"},"id":8},"contracts/libraries/TransferHelper.sol":{"ast":{"absolutePath":"contracts/libraries/TransferHelper.sol","exportedSymbols":{"TransferHelper":[1211]},"id":1212,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1053,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1211,"linearizedBaseContracts":[1211],"name":"TransferHelper","nameLocation":"190:14:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1095,"nodeType":"Block","src":"286:357:9","statements":[{"assignments":[1063,1065],"declarations":[{"constant":false,"id":1063,"mutability":"mutable","name":"success","nameLocation":"367:7:9","nodeType":"VariableDeclaration","scope":1095,"src":"362:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1062,"name":"bool","nodeType":"ElementaryTypeName","src":"362:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"data","nameLocation":"389:4:9","nodeType":"VariableDeclaration","scope":1095,"src":"376:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1064,"name":"bytes","nodeType":"ElementaryTypeName","src":"376:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1075,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783039356561376233","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"445:10:9","typeDescriptions":{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},"value":"0x095ea7b3"},{"id":1071,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"457:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1072,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"462:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1068,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"422:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"422:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"422:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1066,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"397:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"397:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"397:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"361:118:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1077,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"510:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1078,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"522:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"522:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"537:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"522:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1084,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"553:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"560:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1085,"name":"bool","nodeType":"ElementaryTypeName","src":"560:4:9","typeDescriptions":{}}}],"id":1087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"559:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1082,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"542:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"542:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"542:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"522:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1090,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"521:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"510:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"581:45:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""},"value":"TransferHelper::safeApprove: approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""}],"id":1076,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"489:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"489:147:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"ExpressionStatement","src":"489:147:9"}]},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"220:11:9","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"_token","nameLocation":"240:6:9","nodeType":"VariableDeclaration","scope":1096,"src":"232:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"232:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"_to","nameLocation":"256:3:9","nodeType":"VariableDeclaration","scope":1096,"src":"248:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"_value","nameLocation":"269:6:9","nodeType":"VariableDeclaration","scope":1096,"src":"261:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"231:45:9"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"286:0:9"},"scope":1211,"src":"211:432:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"755:360:9","statements":[{"assignments":[1106,1108],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"success","nameLocation":"837:7:9","nodeType":"VariableDeclaration","scope":1138,"src":"832:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1105,"name":"bool","nodeType":"ElementaryTypeName","src":"832:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"data","nameLocation":"859:4:9","nodeType":"VariableDeclaration","scope":1138,"src":"846:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1107,"name":"bytes","nodeType":"ElementaryTypeName","src":"846:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1118,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30786139303539636262","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:10:9","typeDescriptions":{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},"value":"0xa9059cbb"},{"id":1114,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"927:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"932:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1111,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"892:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"892:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"892:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1109,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"867:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"867:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"867:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"831:118:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"980:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1121,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"992:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"992:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1007:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"992:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1127,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"1023:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1030:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1128,"name":"bool","nodeType":"ElementaryTypeName","src":"1030:4:9","typeDescriptions":{}}}],"id":1130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1029:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1125,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1012:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1012:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1012:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"992:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"991:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"980:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1051:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""},"value":"TransferHelper::safeTransfer: transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""}],"id":1119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"959:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"959:149:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"ExpressionStatement","src":"959:149:9"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"658:12:9","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"_token","nameLocation":"688:6:9","nodeType":"VariableDeclaration","scope":1139,"src":"680:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"_to","nameLocation":"712:3:9","nodeType":"VariableDeclaration","scope":1139,"src":"704:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"704:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"_value","nameLocation":"733:6:9","nodeType":"VariableDeclaration","scope":1139,"src":"725:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"725:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"670:75:9"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[],"src":"755:0:9"},"scope":1211,"src":"649:466:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1184,"nodeType":"Block","src":"1254:383:9","statements":[{"assignments":[1151,1153],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"success","nameLocation":"1348:7:9","nodeType":"VariableDeclaration","scope":1184,"src":"1343:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"1343:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"data","nameLocation":"1370:4:9","nodeType":"VariableDeclaration","scope":1184,"src":"1357:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1152,"name":"bytes","nodeType":"ElementaryTypeName","src":"1357:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1164,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783233623837326464","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1426:10:9","typeDescriptions":{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},"value":"0x23b872dd"},{"id":1159,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"1438:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"1445:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1161,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"1450:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1156,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1403:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1403:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1403:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1154,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"1378:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1378:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1378:89:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1342:125:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"1498:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1167,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1510:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1510:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1525:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1510:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1173,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1541:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1548:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1174,"name":"bool","nodeType":"ElementaryTypeName","src":"1548:4:9","typeDescriptions":{}}}],"id":1176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1547:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1171,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1530:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1530:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1530:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1510:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1509:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1498:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1569:51:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""},"value":"TransferHelper::transferFrom: transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""}],"id":1165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1477:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1477:153:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"1477:153:9"}]},"id":1185,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1130:16:9","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"_token","nameLocation":"1164:6:9","nodeType":"VariableDeclaration","scope":1185,"src":"1156:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"_from","nameLocation":"1188:5:9","nodeType":"VariableDeclaration","scope":1185,"src":"1180:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"_to","nameLocation":"1211:3:9","nodeType":"VariableDeclaration","scope":1185,"src":"1203:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"_value","nameLocation":"1232:6:9","nodeType":"VariableDeclaration","scope":1185,"src":"1224:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1146:98:9"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"1254:0:9"},"scope":1211,"src":"1121:516:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1209,"nodeType":"Block","src":"1706:189:9","statements":[{"assignments":[1193,null],"declarations":[{"constant":false,"id":1193,"mutability":"mutable","name":"success","nameLocation":"1722:7:9","nodeType":"VariableDeclaration","scope":1209,"src":"1717:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1192,"name":"bool","nodeType":"ElementaryTypeName","src":"1717:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1203,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1759:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1198,"name":"bytes","nodeType":"ElementaryTypeName","src":"1763:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1759:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1194,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1735:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1735:8:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1196,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"1751:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1735:23:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1735:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1716:56:9"},{"expression":{"arguments":[{"id":1205,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1803:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1824:54:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""},"value":"TransferHelper::safeTransferETH: ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""}],"id":1204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1782:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1782:106:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1208,"nodeType":"ExpressionStatement","src":"1782:106:9"}]},"id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"1652:15:9","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"_to","nameLocation":"1676:3:9","nodeType":"VariableDeclaration","scope":1210,"src":"1668:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"_value","nameLocation":"1689:6:9","nodeType":"VariableDeclaration","scope":1210,"src":"1681:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1667:29:9"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[],"src":"1706:0:9"},"scope":1211,"src":"1643:252:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1212,"src":"182:1715:9","usedErrors":[]}],"src":"45:1853:9"},"id":9}},"contracts":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"params":{"fee":"The enabled fee, denominated in hundredths of a bip","tickSpacing":"The minimum number of ticks between initialized ticks for pools created with the given fee"}},"OwnerChanged(address,address)":{"params":{"newOwner":"The owner after the owner was changed","oldOwner":"The owner before the owner was changed"}},"PoolCreated(address,address,uint24,int24,address)":{"params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","pool":"The address of the created pool","tickSpacing":"The minimum number of ticks between initialized ticks","token0":"The first token of the pool by address sort order","token1":"The second token of the pool by address sort order"}}},"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"enableFeeAmount(uint24,int24)":{"details":"Fee amounts may never be removed once enabled","params":{"fee":"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)","tickSpacing":"The spacing between ticks to be enforced for all pools created with the given fee amount"}},"feeAmountTickSpacing(uint24)":{"details":"A fee amount can never be removed, so this value should be hard coded or cached in the calling context","params":{"fee":"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},"returns":{"_0":"The tick spacing"}},"getPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"owner()":{"details":"Can be changed by the current owner via setOwner","returns":{"_0":"The address of the factory owner"}},"setOwner(address)":{"details":"Must be called by the current owner","params":{"_owner":"The new owner of the factory"}}},"title":"The interface for the Uniswap V3 Factory","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"notice":"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{"notice":"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{"notice":"Emitted when a pool is created"}},"kind":"user","methods":{"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{"notice":"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{"notice":"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{"notice":"Returns the current owner of the factory"},"setOwner(address)":{"notice":"Updates the owner of the factory"}},"notice":"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees","version":1}}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Callback for IUniswapV3PoolActions#swap","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Any contract that calls IUniswapV3PoolActions#swap must implement this interface","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactOutput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Router token swapping functionality","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps `amountIn` of one token for as much as possible of another along the specified path"},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps `amountIn` of one token for as much as possible of another token"},"exactOutput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps as little as possible of one token for `amountOut` of another token"},"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Functions for swapping tokens via Uniswap V3","version":1}}},"contracts/UniswapV3DEXIntegration.sol":{"UniswapV3Integration":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_quoter","type":"address"},{"internalType":"address","name":"_router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Locked","type":"error"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"feeTiers","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"}],"name":"validatePair","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_264":{"entryPoint":null,"id":264,"parameterSlots":3,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":302,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":330,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:576:10","statements":[{"nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:10","statements":[{"nodeType":"YulAssignment","src":"84:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:10"},"nodeType":"YulFunctionCall","src":"93:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:10"}]},{"body":{"nodeType":"YulBlock","src":"169:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:10"},"nodeType":"YulFunctionCall","src":"171:12:10"},"nodeType":"YulExpressionStatement","src":"171:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:10"},"nodeType":"YulFunctionCall","src":"150:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:10"},"nodeType":"YulFunctionCall","src":"146:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:10"},"nodeType":"YulFunctionCall","src":"135:31:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:10"},"nodeType":"YulFunctionCall","src":"125:42:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:10"},"nodeType":"YulFunctionCall","src":"118:50:10"},"nodeType":"YulIf","src":"115:70:10"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:10","type":""}],"src":"14:177:10"},{"body":{"nodeType":"YulBlock","src":"311:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:10"},"nodeType":"YulFunctionCall","src":"359:12:10"},"nodeType":"YulExpressionStatement","src":"359:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:10"},"nodeType":"YulFunctionCall","src":"328:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:10"},"nodeType":"YulFunctionCall","src":"324:32:10"},"nodeType":"YulIf","src":"321:52:10"},{"nodeType":"YulAssignment","src":"382:50:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:10"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:10"},"nodeType":"YulFunctionCall","src":"392:40:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:10"}]},{"nodeType":"YulAssignment","src":"441:59:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:10"},"nodeType":"YulFunctionCall","src":"481:18:10"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"451:29:10"},"nodeType":"YulFunctionCall","src":"451:49:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:10"}]},{"nodeType":"YulAssignment","src":"509:59:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"564:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:10"},"nodeType":"YulFunctionCall","src":"549:18:10"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"519:29:10"},"nodeType":"YulFunctionCall","src":"519:49:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"509:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:10","type":""}],"src":"196:378:10"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e0604052600160005534801561001557600080fd5b506040516111ab3803806111ab8339810160408190526100349161014a565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c0526001805480820182556000829052600a8082047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69081018054600394849006850261010090810a6064810262ffffff91820219909316929092179092558554808701875584810484018054918690068702840a6101f48102908402199092169190911790558554808701875584810484018054918690068702840a610bb8810290840219909216919091179055855480870190965583860490920180549390950690930290920a61271081029202191617905561018d565b80516001600160a01b038116811461014557600080fd5b919050565b60008060006060848603121561015f57600080fd5b6101688461012e565b92506101766020850161012e565b91506101846040850161012e565b90509250925092565b60805160601c60a05160601c60c05160601c610fca6101e16000396000818161018e015261036d0152600081816101670152818161087c0152610a9501526000818161012801526106ca0152610fca6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b88c5f911161005b578063b88c5f9114610100578063c45a015514610123578063c6bbd5a714610162578063f887ea401461018957600080fd5b8063230ed44a1461008d5780634aa06652146100b957806353b609b5146100da57806393316212146100ed575b600080fd5b6100a061009b366004610e63565b6101b0565b60405162ffffff90911681526020015b60405180910390f35b6100cc6100c7366004610e00565b6101e9565b6040519081526020016100b0565b6100cc6100e8366004610e00565b6101ff565b6100cc6100fb366004610db5565b61020c565b61011361010e366004610d7c565b610623565b60405190151581526020016100b0565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100b0565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106101c057600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b60006101f68484846107f6565b50949350505050565b60006101f6848484610a0f565b60008054600114610230576040516303cb96db60e21b815260040160405180910390fd5b60008080556040516370a0823160e01b81523060048201526001600160a01b038616906370a082319060240160206040518083038186803b15801561027457600080fd5b505afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac9190610e7c565b905060006102bb8686846107f6565b909350905082158015906102d4575060008162ffffff16115b61033e5760405162461bcd60e51b815260206004820152603060248201527f556e69737761705633496e746567726174696f6e3a20494e535546464943494560448201526f139517d3d55514155517d05353d5539560821b60648201526084015b60405180910390fd5b6001600160a01b038416610350573093505b604051636eb1769f60e11b81523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008181166024840152919088169063dd62ed3e9060440160206040518083038186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f29190610e7c565b610403576104038782600019610c29565b6040516370a0823160e01b81526001600160a01b038681166004830152600091908816906370a082319060240160206040518083038186803b15801561044857600080fd5b505afa15801561045c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104809190610e7c565b60408051610100810182526001600160a01b038b811682528a81166020830190815262ffffff8881168486019081528c841660608601908152426080870190815260a087018d8152600060c0890181815260e08a01918252995163414bf38960e01b81529851881660048a0152955187166024890152925190931660448701525184166064860152905160848501525160a4840152925160c48301529151821660e482015291925083169063414bf3899061010401602060405180830381600087803b15801561054f57600080fd5b505af1158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190610e7c565b506040516370a0823160e01b81526001600160a01b038781166004830152600091908916906370a082319060240160206040518083038186803b1580156105cd57600080fd5b505afa1580156105e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106059190610e7c565b90506106118282610f19565b60016000559998505050505050505050565b6000816001600160a01b0316836001600160a01b03161415610647575060006107f0565b600060018054806020026020016040519081016040528092919081815260200182805480156106bf57602002820191906000526020600020906000905b82829054906101000a900462ffffff1662ffffff16815260200190600301906020826002010492830192600103820291508084116106845790505b5050505050905060007f0000000000000000000000000000000000000000000000000000000000000000905060005b82518160ff1610156107e8576000826001600160a01b0316631698ee828888878660ff168151811061072257610722610f66565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff16604482015260640160206040518083038186803b15801561077f57600080fd5b505afa158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190610d58565b90506001600160a01b038116156107d55760019450505050506107f0565b50806107e081610f30565b9150506106ee565b506000925050505b92915050565b6000806000600180548060200260200160405190810160405280929190818152602001828054801561087157602002820191906000526020600020906000905b82829054906101000a900462ffffff1662ffffff16815260200190600301906020826002010492830192600103820291508084116108365790505b5050505050905060007f0000000000000000000000000000000000000000000000000000000000000000905060005b82518160ff161015610a04576000826001600160a01b031663c6a5026a6040518060a001604052808c6001600160a01b031681526020018b6001600160a01b031681526020018a8152602001878660ff168151811061090157610901610f66565b602002602001015162ffffff16815260200160006001600160a01b03168152506040518263ffffffff1660e01b815260040161093d9190610ed0565b60206040518083038186803b15801561095557600080fd5b505afa925050508015610985575060408051601f3d908101601f1916820190925261098291810190610e7c565b60015b6109c3573d8080156109b3576040519150601f19603f3d011682016040523d82523d6000602084013e6109b8565b606091505b5060009150506109c6565b90505b858111156109f157809550838260ff16815181106109e6576109e6610f66565b602002602001015194505b50806109fc81610f30565b9150506108a0565b505050935093915050565b60008060006001805480602002602001604051908101604052809291908181526020018280548015610a8a57602002820191906000526020600020906000905b82829054906101000a900462ffffff1662ffffff1681526020019060030190602082600201049283019260010382029150808411610a4f5790505b5050505050905060007f0000000000000000000000000000000000000000000000000000000000000000905060005b82518160ff161015610a04576000826001600160a01b031663bd21704a6040518060a001604052808c6001600160a01b031681526020018b6001600160a01b031681526020018a8152602001878660ff1681518110610b1a57610b1a610f66565b602002602001015162ffffff16815260200160006001600160a01b03168152506040518263ffffffff1660e01b8152600401610b569190610ed0565b60206040518083038186803b158015610b6e57600080fd5b505afa925050508015610b9e575060408051601f3d908101601f19168201909252610b9b91810190610e7c565b60015b610bdc573d808015610bcc576040519150601f19603f3d011682016040523d82523d6000602084013e610bd1565b606091505b506000915050610bdf565b90505b600081118015610bee57508581105b15610c1657809550838260ff1681518110610c0b57610c0b610f66565b602002602001015194505b5080610c2181610f30565b915050610ab9565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691610c859190610e95565b6000604051808303816000865af19150503d8060008114610cc2576040519150601f19603f3d011682016040523d82523d6000602084013e610cc7565b606091505b5091509150818015610cf1575080511580610cf1575080806020019051810190610cf19190610e41565b610d515760405162461bcd60e51b815260206004820152602b60248201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060448201526a1c9bdd994819985a5b195960aa1b6064820152608401610335565b5050505050565b600060208284031215610d6a57600080fd5b8151610d7581610f7c565b9392505050565b60008060408385031215610d8f57600080fd5b8235610d9a81610f7c565b91506020830135610daa81610f7c565b809150509250929050565b600080600060608486031215610dca57600080fd5b8335610dd581610f7c565b92506020840135610de581610f7c565b91506040840135610df581610f7c565b809150509250925092565b600080600060608486031215610e1557600080fd5b8335610e2081610f7c565b92506020840135610e3081610f7c565b929592945050506040919091013590565b600060208284031215610e5357600080fd5b81518015158114610d7557600080fd5b600060208284031215610e7557600080fd5b5035919050565b600060208284031215610e8e57600080fd5b5051919050565b6000825160005b81811015610eb65760208186018101518583015201610e9c565b81811115610ec5576000828501525b509190910192915050565b60a081016107f0828480516001600160a01b0390811683526020808301518216908401526040808301519084015260608083015162ffffff169084015260809182015116910152565b600082821015610f2b57610f2b610f50565b500390565b600060ff821660ff811415610f4757610f47610f50565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114610f9157600080fd5b5056fea2646970667358221220533b0487639072a75bbeb57224c5a3e46d2c2a3fd19375452e757ebd7107720864736f6c63430008070033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x11AB CODESIZE SUB DUP1 PUSH2 0x11AB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x34 SWAP2 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP4 DUP5 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP2 DUP4 SHL DUP3 AND PUSH1 0xA0 MSTORE SWAP1 SWAP2 SHL AND PUSH1 0xC0 MSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 DUP3 SWAP1 MSTORE PUSH1 0xA DUP1 DUP3 DIV PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x3 SWAP5 DUP5 SWAP1 MOD DUP6 MUL PUSH2 0x100 SWAP1 DUP2 EXP PUSH1 0x64 DUP2 MUL PUSH3 0xFFFFFF SWAP2 DUP3 MUL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE DUP6 SLOAD DUP1 DUP8 ADD DUP8 SSTORE DUP5 DUP2 DIV DUP5 ADD DUP1 SLOAD SWAP2 DUP7 SWAP1 MOD DUP8 MUL DUP5 EXP PUSH2 0x1F4 DUP2 MUL SWAP1 DUP5 MUL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP6 SLOAD DUP1 DUP8 ADD DUP8 SSTORE DUP5 DUP2 DIV DUP5 ADD DUP1 SLOAD SWAP2 DUP7 SWAP1 MOD DUP8 MUL DUP5 EXP PUSH2 0xBB8 DUP2 MUL SWAP1 DUP5 MUL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP6 SLOAD DUP1 DUP8 ADD SWAP1 SWAP7 SSTORE DUP4 DUP7 DIV SWAP1 SWAP3 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP6 MOD SWAP1 SWAP4 MUL SWAP1 SWAP3 EXP PUSH2 0x2710 DUP2 MUL SWAP3 MUL NOT AND OR SWAP1 SSTORE PUSH2 0x18D JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP5 PUSH2 0x12E JUMP JUMPDEST SWAP3 POP PUSH2 0x176 PUSH1 0x20 DUP6 ADD PUSH2 0x12E JUMP JUMPDEST SWAP2 POP PUSH2 0x184 PUSH1 0x40 DUP6 ADD PUSH2 0x12E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH2 0xFCA PUSH2 0x1E1 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x18E ADD MSTORE PUSH2 0x36D ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x167 ADD MSTORE DUP2 DUP2 PUSH2 0x87C ADD MSTORE PUSH2 0xA95 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x128 ADD MSTORE PUSH2 0x6CA ADD MSTORE PUSH2 0xFCA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB88C5F91 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB88C5F91 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC6BBD5A7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x230ED44A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x53B609B5 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x93316212 EQ PUSH2 0xED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xCC PUSH2 0xE8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0xCC PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x20C JUMP JUMPDEST PUSH2 0x113 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x3 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6 DUP5 DUP5 DUP5 PUSH2 0x7F6 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6 DUP5 DUP5 DUP5 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 EQ PUSH2 0x230 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3CB96DB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x288 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BB DUP7 DUP7 DUP5 PUSH2 0x7F6 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2D4 JUMPI POP PUSH1 0x0 DUP2 PUSH3 0xFFFFFF AND GT JUMPDEST PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705633496E746567726174696F6E3A20494E5355464649434945 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x139517D3D55514155517D05353D55395 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x350 JUMPI ADDRESS SWAP4 POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP2 SWAP1 DUP9 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x403 JUMPI PUSH2 0x403 DUP8 DUP3 PUSH1 0x0 NOT PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE DUP11 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH3 0xFFFFFF DUP9 DUP2 AND DUP5 DUP7 ADD SWAP1 DUP2 MSTORE DUP13 DUP5 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP14 DUP2 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xE0 DUP11 ADD SWAP2 DUP3 MSTORE SWAP10 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP9 MLOAD DUP9 AND PUSH1 0x4 DUP11 ADD MSTORE SWAP6 MLOAD DUP8 AND PUSH1 0x24 DUP10 ADD MSTORE SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x44 DUP8 ADD MSTORE MLOAD DUP5 AND PUSH1 0x64 DUP7 ADD MSTORE SWAP1 MLOAD PUSH1 0x84 DUP6 ADD MSTORE MLOAD PUSH1 0xA4 DUP5 ADD MSTORE SWAP3 MLOAD PUSH1 0xC4 DUP4 ADD MSTORE SWAP2 MLOAD DUP3 AND PUSH1 0xE4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP4 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0x611 DUP3 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x647 JUMPI POP PUSH1 0x0 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6BF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x3 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x684 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1698EE82 DUP9 DUP9 DUP8 DUP7 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x722 JUMPI PUSH2 0x722 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x793 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x7F0 JUMP JUMPDEST POP DUP1 PUSH2 0x7E0 DUP2 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6EE JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x871 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x3 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x836 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xA04 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC6A5026A PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP7 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x901 JUMPI PUSH2 0x901 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x985 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x982 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9C3 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 DUP2 GT ISZERO PUSH2 0x9F1 JUMPI DUP1 SWAP6 POP DUP4 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP5 POP JUMPDEST POP DUP1 PUSH2 0x9FC DUP2 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A0 JUMP JUMPDEST POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA8A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x3 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0xA4F JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xA04 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD21704A PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP7 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xB1A JUMPI PUSH2 0xB1A PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB9E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB9B SWAP2 DUP2 ADD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBDC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP PUSH2 0xBDF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xBEE JUMPI POP DUP6 DUP2 LT JUMPDEST ISZERO PUSH2 0xC16 JUMPI DUP1 SWAP6 POP DUP4 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xC0B JUMPI PUSH2 0xC0B PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP5 POP JUMPDEST POP DUP1 PUSH2 0xC21 DUP2 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xCF1 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xCF1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A73616665417070726F76653A20617070 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1C9BDD994819985A5B1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x335 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD75 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD9A DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xDAA DUP2 PUSH2 0xF7C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xDD5 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xDE5 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xDF5 DUP2 PUSH2 0xF7C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE20 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xE30 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xE9C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x7F0 DUP3 DUP5 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF2B JUMPI PUSH2 0xF2B PUSH2 0xF50 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0xF47 JUMPI PUSH2 0xF47 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 EXTCODESIZE DIV DUP8 PUSH4 0x9072A75B 0xBE 0xB5 PUSH19 0x24C5A3E46D2C2A3FD19375452E757EBD710772 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"410:5547:3:-:0;;;122:1:4;95:28;;675:266:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;749:18:3;;;;;;;;777:16;;;;;;;803;;;;;;829:8;:18;;;;;;;-1:-1:-1;829:18:3;;;;;;;;;;;;;;;;;;;;;;;;843:3;829:18;;;;;;;;;;;;;;;;;857;;;;;;;;;;;;;;;;;;;;;;871:3;857:18;;;;;;;;;;;;;;;885:19;;;;;;;;;;;;;;;;;;;;;;899:4;885:19;;;;;;;;;;;;;;;914:20;;;;;;;;;;;;;;;;;;;;;;;;;;928:5;914:20;;;;;;;;;410:5547;;14:177:10;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;410:5547:3;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_getAmountIn_561":{"entryPoint":2575,"id":561,"parameterSlots":3,"returnSlots":2},"@_getAmountOut_467":{"entryPoint":2038,"id":467,"parameterSlots":3,"returnSlots":2},"@factory_211":{"entryPoint":null,"id":211,"parameterSlots":0,"returnSlots":0},"@feeTiers_218":{"entryPoint":432,"id":218,"parameterSlots":0,"returnSlots":0},"@getAmountIn_605":{"entryPoint":511,"id":605,"parameterSlots":3,"returnSlots":1},"@getAmountOut_583":{"entryPoint":489,"id":583,"parameterSlots":3,"returnSlots":1},"@quoter_213":{"entryPoint":null,"id":213,"parameterSlots":0,"returnSlots":0},"@router_215":{"entryPoint":null,"id":215,"parameterSlots":0,"returnSlots":0},"@safeApprove_1096":{"entryPoint":3113,"id":1096,"parameterSlots":3,"returnSlots":0},"@swap_742":{"entryPoint":524,"id":742,"parameterSlots":3,"returnSlots":1},"@validatePair_377":{"entryPoint":1571,"id":377,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":3416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3452,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_address":{"entryPoint":3509,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3584,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_QuoteExactInputSingleParams":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d33c7d656a37e2d51096a86bf4fdd989ace91e4e1b9601a9f565b11d348b32ff__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExactInputSingleParams_$120_memory_ptr__to_t_struct$_ExactInputSingleParams_$120_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr__to_t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr__fromStack_reversed":{"entryPoint":3792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr__to_t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3865,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint8":{"entryPoint":3888,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3920,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3942,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":3964,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7884:10","statements":[{"nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:170:10","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:10"},"nodeType":"YulFunctionCall","src":"143:12:10"},"nodeType":"YulExpressionStatement","src":"143:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:10"},"nodeType":"YulFunctionCall","src":"112:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:10"},"nodeType":"YulFunctionCall","src":"108:32:10"},"nodeType":"YulIf","src":"105:52:10"},{"nodeType":"YulVariableDeclaration","src":"166:29:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:10"},"nodeType":"YulFunctionCall","src":"179:16:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:10","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"204:24:10"},"nodeType":"YulFunctionCall","src":"204:31:10"},"nodeType":"YulExpressionStatement","src":"204:31:10"},{"nodeType":"YulAssignment","src":"244:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"254:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"244:6:10"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:10","type":""}],"src":"14:251:10"},{"body":{"nodeType":"YulBlock","src":"357:301:10","statements":[{"body":{"nodeType":"YulBlock","src":"403:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"415:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"405:6:10"},"nodeType":"YulFunctionCall","src":"405:12:10"},"nodeType":"YulExpressionStatement","src":"405:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"378:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"387:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"374:3:10"},"nodeType":"YulFunctionCall","src":"374:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"399:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"370:3:10"},"nodeType":"YulFunctionCall","src":"370:32:10"},"nodeType":"YulIf","src":"367:52:10"},{"nodeType":"YulVariableDeclaration","src":"428:36:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"441:12:10"},"nodeType":"YulFunctionCall","src":"441:23:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"432:5:10","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"473:24:10"},"nodeType":"YulFunctionCall","src":"473:31:10"},"nodeType":"YulExpressionStatement","src":"473:31:10"},{"nodeType":"YulAssignment","src":"513:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"523:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"513:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"537:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"569:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"580:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"565:3:10"},"nodeType":"YulFunctionCall","src":"565:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"552:12:10"},"nodeType":"YulFunctionCall","src":"552:32:10"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"541:7:10","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"618:7:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"593:24:10"},"nodeType":"YulFunctionCall","src":"593:33:10"},"nodeType":"YulExpressionStatement","src":"593:33:10"},{"nodeType":"YulAssignment","src":"635:17:10","value":{"name":"value_1","nodeType":"YulIdentifier","src":"645:7:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"635:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"315:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"326:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"338:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"346:6:10","type":""}],"src":"270:388:10"},{"body":{"nodeType":"YulBlock","src":"767:425:10","statements":[{"body":{"nodeType":"YulBlock","src":"813:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"822:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"825:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"815:6:10"},"nodeType":"YulFunctionCall","src":"815:12:10"},"nodeType":"YulExpressionStatement","src":"815:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"788:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"797:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"784:3:10"},"nodeType":"YulFunctionCall","src":"784:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"809:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"780:3:10"},"nodeType":"YulFunctionCall","src":"780:32:10"},"nodeType":"YulIf","src":"777:52:10"},{"nodeType":"YulVariableDeclaration","src":"838:36:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"864:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"851:12:10"},"nodeType":"YulFunctionCall","src":"851:23:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"842:5:10","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"908:5:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"883:24:10"},"nodeType":"YulFunctionCall","src":"883:31:10"},"nodeType":"YulExpressionStatement","src":"883:31:10"},{"nodeType":"YulAssignment","src":"923:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"933:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"923:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"947:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:10"},"nodeType":"YulFunctionCall","src":"975:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"962:12:10"},"nodeType":"YulFunctionCall","src":"962:32:10"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"951:7:10","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1028:7:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1003:24:10"},"nodeType":"YulFunctionCall","src":"1003:33:10"},"nodeType":"YulExpressionStatement","src":"1003:33:10"},{"nodeType":"YulAssignment","src":"1045:17:10","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1055:7:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1045:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"1071:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1103:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1114:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1099:3:10"},"nodeType":"YulFunctionCall","src":"1099:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1086:12:10"},"nodeType":"YulFunctionCall","src":"1086:32:10"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1075:7:10","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1152:7:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1127:24:10"},"nodeType":"YulFunctionCall","src":"1127:33:10"},"nodeType":"YulExpressionStatement","src":"1127:33:10"},{"nodeType":"YulAssignment","src":"1169:17:10","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1179:7:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1169:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"717:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"728:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"740:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"748:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"756:6:10","type":""}],"src":"663:529:10"},{"body":{"nodeType":"YulBlock","src":"1301:352:10","statements":[{"body":{"nodeType":"YulBlock","src":"1347:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1356:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1359:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1349:6:10"},"nodeType":"YulFunctionCall","src":"1349:12:10"},"nodeType":"YulExpressionStatement","src":"1349:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1322:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1331:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1318:3:10"},"nodeType":"YulFunctionCall","src":"1318:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1343:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1314:3:10"},"nodeType":"YulFunctionCall","src":"1314:32:10"},"nodeType":"YulIf","src":"1311:52:10"},{"nodeType":"YulVariableDeclaration","src":"1372:36:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1385:12:10"},"nodeType":"YulFunctionCall","src":"1385:23:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1376:5:10","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1442:5:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1417:24:10"},"nodeType":"YulFunctionCall","src":"1417:31:10"},"nodeType":"YulExpressionStatement","src":"1417:31:10"},{"nodeType":"YulAssignment","src":"1457:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1467:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1457:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"1481:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1513:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1509:3:10"},"nodeType":"YulFunctionCall","src":"1509:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1496:12:10"},"nodeType":"YulFunctionCall","src":"1496:32:10"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1485:7:10","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1562:7:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1537:24:10"},"nodeType":"YulFunctionCall","src":"1537:33:10"},"nodeType":"YulExpressionStatement","src":"1537:33:10"},{"nodeType":"YulAssignment","src":"1579:17:10","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1589:7:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1579:6:10"}]},{"nodeType":"YulAssignment","src":"1605:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1632:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1643:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1628:3:10"},"nodeType":"YulFunctionCall","src":"1628:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1615:12:10"},"nodeType":"YulFunctionCall","src":"1615:32:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1605:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1251:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1262:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1274:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1282:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1290:6:10","type":""}],"src":"1197:456:10"},{"body":{"nodeType":"YulBlock","src":"1736:199:10","statements":[{"body":{"nodeType":"YulBlock","src":"1782:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1784:6:10"},"nodeType":"YulFunctionCall","src":"1784:12:10"},"nodeType":"YulExpressionStatement","src":"1784:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1757:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1766:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1753:3:10"},"nodeType":"YulFunctionCall","src":"1753:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1778:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1749:3:10"},"nodeType":"YulFunctionCall","src":"1749:32:10"},"nodeType":"YulIf","src":"1746:52:10"},{"nodeType":"YulVariableDeclaration","src":"1807:29:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1826:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1820:5:10"},"nodeType":"YulFunctionCall","src":"1820:16:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1811:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1889:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1898:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1901:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1891:6:10"},"nodeType":"YulFunctionCall","src":"1891:12:10"},"nodeType":"YulExpressionStatement","src":"1891:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1858:5:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1879:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1872:6:10"},"nodeType":"YulFunctionCall","src":"1872:13:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1865:6:10"},"nodeType":"YulFunctionCall","src":"1865:21:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1855:2:10"},"nodeType":"YulFunctionCall","src":"1855:32:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1848:6:10"},"nodeType":"YulFunctionCall","src":"1848:40:10"},"nodeType":"YulIf","src":"1845:60:10"},{"nodeType":"YulAssignment","src":"1914:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1924:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1914:6:10"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1702:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1713:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1725:6:10","type":""}],"src":"1658:277:10"},{"body":{"nodeType":"YulBlock","src":"2010:110:10","statements":[{"body":{"nodeType":"YulBlock","src":"2056:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2065:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2068:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2058:6:10"},"nodeType":"YulFunctionCall","src":"2058:12:10"},"nodeType":"YulExpressionStatement","src":"2058:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2031:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2040:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2027:3:10"},"nodeType":"YulFunctionCall","src":"2027:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2052:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2023:3:10"},"nodeType":"YulFunctionCall","src":"2023:32:10"},"nodeType":"YulIf","src":"2020:52:10"},{"nodeType":"YulAssignment","src":"2081:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2104:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2091:12:10"},"nodeType":"YulFunctionCall","src":"2091:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2081:6:10"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1976:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1987:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1999:6:10","type":""}],"src":"1940:180:10"},{"body":{"nodeType":"YulBlock","src":"2206:103:10","statements":[{"body":{"nodeType":"YulBlock","src":"2252:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2261:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2264:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2254:6:10"},"nodeType":"YulFunctionCall","src":"2254:12:10"},"nodeType":"YulExpressionStatement","src":"2254:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2227:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2236:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2223:3:10"},"nodeType":"YulFunctionCall","src":"2223:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2248:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2219:3:10"},"nodeType":"YulFunctionCall","src":"2219:32:10"},"nodeType":"YulIf","src":"2216:52:10"},{"nodeType":"YulAssignment","src":"2277:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2293:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2287:5:10"},"nodeType":"YulFunctionCall","src":"2287:16:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2277:6:10"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2172:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2183:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2195:6:10","type":""}],"src":"2125:184:10"},{"body":{"nodeType":"YulBlock","src":"2385:345:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2395:29:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2413:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2418:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2409:3:10"},"nodeType":"YulFunctionCall","src":"2409:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"2422:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2405:3:10"},"nodeType":"YulFunctionCall","src":"2405:19:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2399:2:10","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2440:3:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2455:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2449:5:10"},"nodeType":"YulFunctionCall","src":"2449:12:10"},{"name":"_1","nodeType":"YulIdentifier","src":"2463:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2445:3:10"},"nodeType":"YulFunctionCall","src":"2445:21:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2433:6:10"},"nodeType":"YulFunctionCall","src":"2433:34:10"},"nodeType":"YulExpressionStatement","src":"2433:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2487:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2492:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:10"},"nodeType":"YulFunctionCall","src":"2483:14:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2513:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2520:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2509:3:10"},"nodeType":"YulFunctionCall","src":"2509:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2503:5:10"},"nodeType":"YulFunctionCall","src":"2503:23:10"},{"name":"_1","nodeType":"YulIdentifier","src":"2528:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2499:3:10"},"nodeType":"YulFunctionCall","src":"2499:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2476:6:10"},"nodeType":"YulFunctionCall","src":"2476:56:10"},"nodeType":"YulExpressionStatement","src":"2476:56:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2552:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2557:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2548:3:10"},"nodeType":"YulFunctionCall","src":"2548:14:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2574:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2581:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2570:3:10"},"nodeType":"YulFunctionCall","src":"2570:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2564:5:10"},"nodeType":"YulFunctionCall","src":"2564:23:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2541:6:10"},"nodeType":"YulFunctionCall","src":"2541:47:10"},"nodeType":"YulExpressionStatement","src":"2541:47:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2608:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2613:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2604:3:10"},"nodeType":"YulFunctionCall","src":"2604:14:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2634:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2630:3:10"},"nodeType":"YulFunctionCall","src":"2630:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2624:5:10"},"nodeType":"YulFunctionCall","src":"2624:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2649:8:10","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2620:3:10"},"nodeType":"YulFunctionCall","src":"2620:38:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2597:6:10"},"nodeType":"YulFunctionCall","src":"2597:62:10"},"nodeType":"YulExpressionStatement","src":"2597:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2679:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2684:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2675:3:10"},"nodeType":"YulFunctionCall","src":"2675:14:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2705:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2712:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2701:3:10"},"nodeType":"YulFunctionCall","src":"2701:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2695:5:10"},"nodeType":"YulFunctionCall","src":"2695:23:10"},{"name":"_1","nodeType":"YulIdentifier","src":"2720:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2691:3:10"},"nodeType":"YulFunctionCall","src":"2691:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2668:6:10"},"nodeType":"YulFunctionCall","src":"2668:56:10"},"nodeType":"YulExpressionStatement","src":"2668:56:10"}]},"name":"abi_encode_struct_QuoteExactInputSingleParams","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2369:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2376:3:10","type":""}],"src":"2314:416:10"},{"body":{"nodeType":"YulBlock","src":"2872:289:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2882:27:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2902:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2896:5:10"},"nodeType":"YulFunctionCall","src":"2896:13:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2886:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2918:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2927:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2922:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2989:77:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3014:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"3019:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3010:3:10"},"nodeType":"YulFunctionCall","src":"3010:11:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3037:6:10"},{"name":"i","nodeType":"YulIdentifier","src":"3045:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3033:3:10"},"nodeType":"YulFunctionCall","src":"3033:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"3049:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3029:3:10"},"nodeType":"YulFunctionCall","src":"3029:25:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3023:5:10"},"nodeType":"YulFunctionCall","src":"3023:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3003:6:10"},"nodeType":"YulFunctionCall","src":"3003:53:10"},"nodeType":"YulExpressionStatement","src":"3003:53:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2948:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"2951:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2945:2:10"},"nodeType":"YulFunctionCall","src":"2945:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2959:21:10","statements":[{"nodeType":"YulAssignment","src":"2961:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2970:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"2973:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2966:3:10"},"nodeType":"YulFunctionCall","src":"2966:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2961:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"2941:3:10","statements":[]},"src":"2937:129:10"},{"body":{"nodeType":"YulBlock","src":"3092:31:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3105:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3110:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:10"},"nodeType":"YulFunctionCall","src":"3101:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"3119:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3094:6:10"},"nodeType":"YulFunctionCall","src":"3094:27:10"},"nodeType":"YulExpressionStatement","src":"3094:27:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3081:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"3084:6:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3078:2:10"},"nodeType":"YulFunctionCall","src":"3078:13:10"},"nodeType":"YulIf","src":"3075:48:10"},{"nodeType":"YulAssignment","src":"3132:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3143:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3148:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3139:3:10"},"nodeType":"YulFunctionCall","src":"3139:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3132:3:10"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2848:3:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2853:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2864:3:10","type":""}],"src":"2735:426:10"},{"body":{"nodeType":"YulBlock","src":"3267:102:10","statements":[{"nodeType":"YulAssignment","src":"3277:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3289:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3300:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3285:3:10"},"nodeType":"YulFunctionCall","src":"3285:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3277:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3319:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3334:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3350:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3355:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3346:3:10"},"nodeType":"YulFunctionCall","src":"3346:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"3359:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3342:3:10"},"nodeType":"YulFunctionCall","src":"3342:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3330:3:10"},"nodeType":"YulFunctionCall","src":"3330:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3312:6:10"},"nodeType":"YulFunctionCall","src":"3312:51:10"},"nodeType":"YulExpressionStatement","src":"3312:51:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3236:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3247:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3258:4:10","type":""}],"src":"3166:203:10"},{"body":{"nodeType":"YulBlock","src":"3503:175:10","statements":[{"nodeType":"YulAssignment","src":"3513:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3525:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3536:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3521:3:10"},"nodeType":"YulFunctionCall","src":"3521:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3513:4:10"}]},{"nodeType":"YulVariableDeclaration","src":"3548:29:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3566:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3571:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3562:3:10"},"nodeType":"YulFunctionCall","src":"3562:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"3575:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3558:3:10"},"nodeType":"YulFunctionCall","src":"3558:19:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3552:2:10","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3593:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3608:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"3616:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3604:3:10"},"nodeType":"YulFunctionCall","src":"3604:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3586:6:10"},"nodeType":"YulFunctionCall","src":"3586:34:10"},"nodeType":"YulExpressionStatement","src":"3586:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3640:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3651:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3636:3:10"},"nodeType":"YulFunctionCall","src":"3636:18:10"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3660:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"3668:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3656:3:10"},"nodeType":"YulFunctionCall","src":"3656:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3629:6:10"},"nodeType":"YulFunctionCall","src":"3629:43:10"},"nodeType":"YulExpressionStatement","src":"3629:43:10"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3464:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3475:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3483:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3494:4:10","type":""}],"src":"3374:304:10"},{"body":{"nodeType":"YulBlock","src":"3838:233:10","statements":[{"nodeType":"YulAssignment","src":"3848:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3860:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3871:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3856:3:10"},"nodeType":"YulFunctionCall","src":"3856:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3848:4:10"}]},{"nodeType":"YulVariableDeclaration","src":"3883:29:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3901:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3906:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3897:3:10"},"nodeType":"YulFunctionCall","src":"3897:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"3910:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3893:3:10"},"nodeType":"YulFunctionCall","src":"3893:19:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3887:2:10","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3943:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"3951:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3939:3:10"},"nodeType":"YulFunctionCall","src":"3939:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3921:6:10"},"nodeType":"YulFunctionCall","src":"3921:34:10"},"nodeType":"YulExpressionStatement","src":"3921:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3975:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3986:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3971:3:10"},"nodeType":"YulFunctionCall","src":"3971:18:10"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3995:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"4003:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3991:3:10"},"nodeType":"YulFunctionCall","src":"3991:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3964:6:10"},"nodeType":"YulFunctionCall","src":"3964:43:10"},"nodeType":"YulExpressionStatement","src":"3964:43:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4027:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4038:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4023:3:10"},"nodeType":"YulFunctionCall","src":"4023:18:10"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4047:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4055:8:10","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4043:3:10"},"nodeType":"YulFunctionCall","src":"4043:21:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4016:6:10"},"nodeType":"YulFunctionCall","src":"4016:49:10"},"nodeType":"YulExpressionStatement","src":"4016:49:10"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3791:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3802:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3810:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3818:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3829:4:10","type":""}],"src":"3683:388:10"},{"body":{"nodeType":"YulBlock","src":"4205:145:10","statements":[{"nodeType":"YulAssignment","src":"4215:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4227:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4238:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4223:3:10"},"nodeType":"YulFunctionCall","src":"4223:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4215:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4257:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4272:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4288:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4293:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4284:3:10"},"nodeType":"YulFunctionCall","src":"4284:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4280:3:10"},"nodeType":"YulFunctionCall","src":"4280:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4268:3:10"},"nodeType":"YulFunctionCall","src":"4268:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4250:6:10"},"nodeType":"YulFunctionCall","src":"4250:51:10"},"nodeType":"YulExpressionStatement","src":"4250:51:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4321:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4332:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4317:3:10"},"nodeType":"YulFunctionCall","src":"4317:18:10"},{"name":"value1","nodeType":"YulIdentifier","src":"4337:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4310:6:10"},"nodeType":"YulFunctionCall","src":"4310:34:10"},"nodeType":"YulExpressionStatement","src":"4310:34:10"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4166:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4177:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4185:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4196:4:10","type":""}],"src":"4076:274:10"},{"body":{"nodeType":"YulBlock","src":"4450:92:10","statements":[{"nodeType":"YulAssignment","src":"4460:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4472:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4483:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4468:3:10"},"nodeType":"YulFunctionCall","src":"4468:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4460:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4502:9:10"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4527:6:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4520:6:10"},"nodeType":"YulFunctionCall","src":"4520:14:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4513:6:10"},"nodeType":"YulFunctionCall","src":"4513:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4495:6:10"},"nodeType":"YulFunctionCall","src":"4495:41:10"},"nodeType":"YulExpressionStatement","src":"4495:41:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4419:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4430:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4441:4:10","type":""}],"src":"4355:187:10"},{"body":{"nodeType":"YulBlock","src":"4721:233:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4738:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4749:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4731:6:10"},"nodeType":"YulFunctionCall","src":"4731:21:10"},"nodeType":"YulExpressionStatement","src":"4731:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4772:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4783:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4768:3:10"},"nodeType":"YulFunctionCall","src":"4768:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"4788:2:10","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4761:6:10"},"nodeType":"YulFunctionCall","src":"4761:30:10"},"nodeType":"YulExpressionStatement","src":"4761:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4811:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4822:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4807:3:10"},"nodeType":"YulFunctionCall","src":"4807:18:10"},{"hexValue":"5472616e7366657248656c7065723a3a73616665417070726f76653a20617070","kind":"string","nodeType":"YulLiteral","src":"4827:34:10","type":"","value":"TransferHelper::safeApprove: app"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4800:6:10"},"nodeType":"YulFunctionCall","src":"4800:62:10"},"nodeType":"YulExpressionStatement","src":"4800:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4882:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4893:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4878:3:10"},"nodeType":"YulFunctionCall","src":"4878:18:10"},{"hexValue":"726f7665206661696c6564","kind":"string","nodeType":"YulLiteral","src":"4898:13:10","type":"","value":"rove failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4871:6:10"},"nodeType":"YulFunctionCall","src":"4871:41:10"},"nodeType":"YulExpressionStatement","src":"4871:41:10"},{"nodeType":"YulAssignment","src":"4921:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4933:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4944:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4929:3:10"},"nodeType":"YulFunctionCall","src":"4929:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4921:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4698:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4712:4:10","type":""}],"src":"4547:407:10"},{"body":{"nodeType":"YulBlock","src":"5133:238:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5150:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5161:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5143:6:10"},"nodeType":"YulFunctionCall","src":"5143:21:10"},"nodeType":"YulExpressionStatement","src":"5143:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5184:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5195:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5180:3:10"},"nodeType":"YulFunctionCall","src":"5180:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"5200:2:10","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5173:6:10"},"nodeType":"YulFunctionCall","src":"5173:30:10"},"nodeType":"YulExpressionStatement","src":"5173:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5223:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5234:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5219:3:10"},"nodeType":"YulFunctionCall","src":"5219:18:10"},{"hexValue":"556e69737761705633496e746567726174696f6e3a20494e5355464649434945","kind":"string","nodeType":"YulLiteral","src":"5239:34:10","type":"","value":"UniswapV3Integration: INSUFFICIE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5212:6:10"},"nodeType":"YulFunctionCall","src":"5212:62:10"},"nodeType":"YulExpressionStatement","src":"5212:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5294:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5305:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5290:3:10"},"nodeType":"YulFunctionCall","src":"5290:18:10"},{"hexValue":"4e545f4f55545055545f414d4f554e54","kind":"string","nodeType":"YulLiteral","src":"5310:18:10","type":"","value":"NT_OUTPUT_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5283:6:10"},"nodeType":"YulFunctionCall","src":"5283:46:10"},"nodeType":"YulExpressionStatement","src":"5283:46:10"},{"nodeType":"YulAssignment","src":"5338:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5350:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5361:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5346:3:10"},"nodeType":"YulFunctionCall","src":"5346:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5338:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_d33c7d656a37e2d51096a86bf4fdd989ace91e4e1b9601a9f565b11d348b32ff__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5110:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5124:4:10","type":""}],"src":"4959:412:10"},{"body":{"nodeType":"YulBlock","src":"5555:614:10","statements":[{"nodeType":"YulAssignment","src":"5565:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5577:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5588:3:10","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5573:3:10"},"nodeType":"YulFunctionCall","src":"5573:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5565:4:10"}]},{"nodeType":"YulVariableDeclaration","src":"5601:29:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5619:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5624:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5615:3:10"},"nodeType":"YulFunctionCall","src":"5615:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"5628:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5611:3:10"},"nodeType":"YulFunctionCall","src":"5611:19:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5605:2:10","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5646:9:10"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5667:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5661:5:10"},"nodeType":"YulFunctionCall","src":"5661:13:10"},{"name":"_1","nodeType":"YulIdentifier","src":"5676:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5657:3:10"},"nodeType":"YulFunctionCall","src":"5657:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5639:6:10"},"nodeType":"YulFunctionCall","src":"5639:41:10"},"nodeType":"YulExpressionStatement","src":"5639:41:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5700:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5711:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5696:3:10"},"nodeType":"YulFunctionCall","src":"5696:20:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5732:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5740:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5728:3:10"},"nodeType":"YulFunctionCall","src":"5728:17:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5722:5:10"},"nodeType":"YulFunctionCall","src":"5722:24:10"},{"name":"_1","nodeType":"YulIdentifier","src":"5748:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5718:3:10"},"nodeType":"YulFunctionCall","src":"5718:33:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5689:6:10"},"nodeType":"YulFunctionCall","src":"5689:63:10"},"nodeType":"YulExpressionStatement","src":"5689:63:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5772:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5783:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5768:3:10"},"nodeType":"YulFunctionCall","src":"5768:20:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5804:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5812:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5800:3:10"},"nodeType":"YulFunctionCall","src":"5800:17:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5794:5:10"},"nodeType":"YulFunctionCall","src":"5794:24:10"},{"kind":"number","nodeType":"YulLiteral","src":"5820:8:10","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5790:3:10"},"nodeType":"YulFunctionCall","src":"5790:39:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5761:6:10"},"nodeType":"YulFunctionCall","src":"5761:69:10"},"nodeType":"YulExpressionStatement","src":"5761:69:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5850:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5861:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5846:3:10"},"nodeType":"YulFunctionCall","src":"5846:20:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5882:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5890:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5878:3:10"},"nodeType":"YulFunctionCall","src":"5878:17:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5872:5:10"},"nodeType":"YulFunctionCall","src":"5872:24:10"},{"name":"_1","nodeType":"YulIdentifier","src":"5898:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5868:3:10"},"nodeType":"YulFunctionCall","src":"5868:33:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5839:6:10"},"nodeType":"YulFunctionCall","src":"5839:63:10"},"nodeType":"YulExpressionStatement","src":"5839:63:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5922:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5933:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5918:3:10"},"nodeType":"YulFunctionCall","src":"5918:20:10"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5950:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5958:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5946:3:10"},"nodeType":"YulFunctionCall","src":"5946:17:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5940:5:10"},"nodeType":"YulFunctionCall","src":"5940:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5911:6:10"},"nodeType":"YulFunctionCall","src":"5911:54:10"},"nodeType":"YulExpressionStatement","src":"5911:54:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5985:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5996:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5981:3:10"},"nodeType":"YulFunctionCall","src":"5981:20:10"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6013:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6021:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6009:3:10"},"nodeType":"YulFunctionCall","src":"6009:17:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6003:5:10"},"nodeType":"YulFunctionCall","src":"6003:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5974:6:10"},"nodeType":"YulFunctionCall","src":"5974:54:10"},"nodeType":"YulExpressionStatement","src":"5974:54:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6048:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6044:3:10"},"nodeType":"YulFunctionCall","src":"6044:20:10"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6076:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6084:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6072:3:10"},"nodeType":"YulFunctionCall","src":"6072:17:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6066:5:10"},"nodeType":"YulFunctionCall","src":"6066:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6037:6:10"},"nodeType":"YulFunctionCall","src":"6037:54:10"},"nodeType":"YulExpressionStatement","src":"6037:54:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6111:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6122:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6107:3:10"},"nodeType":"YulFunctionCall","src":"6107:20:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6143:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6151:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6139:3:10"},"nodeType":"YulFunctionCall","src":"6139:17:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6133:5:10"},"nodeType":"YulFunctionCall","src":"6133:24:10"},{"name":"_1","nodeType":"YulIdentifier","src":"6159:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6129:3:10"},"nodeType":"YulFunctionCall","src":"6129:33:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6100:6:10"},"nodeType":"YulFunctionCall","src":"6100:63:10"},"nodeType":"YulExpressionStatement","src":"6100:63:10"}]},"name":"abi_encode_tuple_t_struct$_ExactInputSingleParams_$120_memory_ptr__to_t_struct$_ExactInputSingleParams_$120_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5524:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5535:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5546:4:10","type":""}],"src":"5376:793:10"},{"body":{"nodeType":"YulBlock","src":"6365:116:10","statements":[{"nodeType":"YulAssignment","src":"6375:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6387:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6398:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6383:3:10"},"nodeType":"YulFunctionCall","src":"6383:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6375:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6457:6:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6465:9:10"}],"functionName":{"name":"abi_encode_struct_QuoteExactInputSingleParams","nodeType":"YulIdentifier","src":"6411:45:10"},"nodeType":"YulFunctionCall","src":"6411:64:10"},"nodeType":"YulExpressionStatement","src":"6411:64:10"}]},"name":"abi_encode_tuple_t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr__to_t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6334:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6345:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6356:4:10","type":""}],"src":"6174:307:10"},{"body":{"nodeType":"YulBlock","src":"6679:116:10","statements":[{"nodeType":"YulAssignment","src":"6689:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6701:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6712:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6697:3:10"},"nodeType":"YulFunctionCall","src":"6697:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6689:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6771:6:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6779:9:10"}],"functionName":{"name":"abi_encode_struct_QuoteExactInputSingleParams","nodeType":"YulIdentifier","src":"6725:45:10"},"nodeType":"YulFunctionCall","src":"6725:64:10"},"nodeType":"YulExpressionStatement","src":"6725:64:10"}]},"name":"abi_encode_tuple_t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr__to_t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6648:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6659:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6670:4:10","type":""}],"src":"6486:309:10"},{"body":{"nodeType":"YulBlock","src":"6899:91:10","statements":[{"nodeType":"YulAssignment","src":"6909:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6921:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6932:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:10"},"nodeType":"YulFunctionCall","src":"6917:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6909:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6951:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6966:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6974:8:10","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6962:3:10"},"nodeType":"YulFunctionCall","src":"6962:21:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6944:6:10"},"nodeType":"YulFunctionCall","src":"6944:40:10"},"nodeType":"YulExpressionStatement","src":"6944:40:10"}]},"name":"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6868:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6879:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6890:4:10","type":""}],"src":"6800:190:10"},{"body":{"nodeType":"YulBlock","src":"7096:76:10","statements":[{"nodeType":"YulAssignment","src":"7106:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7118:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7129:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7114:3:10"},"nodeType":"YulFunctionCall","src":"7114:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7106:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7148:9:10"},{"name":"value0","nodeType":"YulIdentifier","src":"7159:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7141:6:10"},"nodeType":"YulFunctionCall","src":"7141:25:10"},"nodeType":"YulExpressionStatement","src":"7141:25:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7065:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7076:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7087:4:10","type":""}],"src":"6995:177:10"},{"body":{"nodeType":"YulBlock","src":"7226:76:10","statements":[{"body":{"nodeType":"YulBlock","src":"7248:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7250:16:10"},"nodeType":"YulFunctionCall","src":"7250:18:10"},"nodeType":"YulExpressionStatement","src":"7250:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7242:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"7245:1:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7239:2:10"},"nodeType":"YulFunctionCall","src":"7239:8:10"},"nodeType":"YulIf","src":"7236:34:10"},{"nodeType":"YulAssignment","src":"7279:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7291:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"7294:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7287:3:10"},"nodeType":"YulFunctionCall","src":"7287:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7279:4:10"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7208:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"7211:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7217:4:10","type":""}],"src":"7177:125:10"},{"body":{"nodeType":"YulBlock","src":"7352:130:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7362:31:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7381:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"7388:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7377:3:10"},"nodeType":"YulFunctionCall","src":"7377:16:10"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7366:7:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"7423:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7425:16:10"},"nodeType":"YulFunctionCall","src":"7425:18:10"},"nodeType":"YulExpressionStatement","src":"7425:18:10"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7408:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"7417:4:10","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7405:2:10"},"nodeType":"YulFunctionCall","src":"7405:17:10"},"nodeType":"YulIf","src":"7402:43:10"},{"nodeType":"YulAssignment","src":"7454:22:10","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7465:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"7474:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:10"},"nodeType":"YulFunctionCall","src":"7461:15:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7454:3:10"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7334:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7344:3:10","type":""}],"src":"7307:175:10"},{"body":{"nodeType":"YulBlock","src":"7519:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7536:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7543:3:10","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7548:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7539:3:10"},"nodeType":"YulFunctionCall","src":"7539:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7529:6:10"},"nodeType":"YulFunctionCall","src":"7529:31:10"},"nodeType":"YulExpressionStatement","src":"7529:31:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7576:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7579:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7569:6:10"},"nodeType":"YulFunctionCall","src":"7569:15:10"},"nodeType":"YulExpressionStatement","src":"7569:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7600:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7603:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7593:6:10"},"nodeType":"YulFunctionCall","src":"7593:15:10"},"nodeType":"YulExpressionStatement","src":"7593:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7487:127:10"},{"body":{"nodeType":"YulBlock","src":"7651:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7668:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7675:3:10","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7680:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7671:3:10"},"nodeType":"YulFunctionCall","src":"7671:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7661:6:10"},"nodeType":"YulFunctionCall","src":"7661:31:10"},"nodeType":"YulExpressionStatement","src":"7661:31:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7708:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7711:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7701:6:10"},"nodeType":"YulFunctionCall","src":"7701:15:10"},"nodeType":"YulExpressionStatement","src":"7701:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7732:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7735:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7725:6:10"},"nodeType":"YulFunctionCall","src":"7725:15:10"},"nodeType":"YulExpressionStatement","src":"7725:15:10"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7619:127:10"},{"body":{"nodeType":"YulBlock","src":"7796:86:10","statements":[{"body":{"nodeType":"YulBlock","src":"7860:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7869:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7872:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7862:6:10"},"nodeType":"YulFunctionCall","src":"7862:12:10"},"nodeType":"YulExpressionStatement","src":"7862:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7819:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7830:5:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7845:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7850:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7841:3:10"},"nodeType":"YulFunctionCall","src":"7841:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"7854:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7837:3:10"},"nodeType":"YulFunctionCall","src":"7837:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7826:3:10"},"nodeType":"YulFunctionCall","src":"7826:31:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7816:2:10"},"nodeType":"YulFunctionCall","src":"7816:42:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7809:6:10"},"nodeType":"YulFunctionCall","src":"7809:50:10"},"nodeType":"YulIf","src":"7806:70:10"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7785:5:10","type":""}],"src":"7751:131:10"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_struct_QuoteExactInputSingleParams(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), 0xffffff))\n        mstore(add(pos, 0x80), and(mload(add(value, 0x80)), _1))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"TransferHelper::safeApprove: app\")\n        mstore(add(headStart, 96), \"rove failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d33c7d656a37e2d51096a86bf4fdd989ace91e4e1b9601a9f565b11d348b32ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"UniswapV3Integration: INSUFFICIE\")\n        mstore(add(headStart, 96), \"NT_OUTPUT_AMOUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$120_memory_ptr__to_t_struct$_ExactInputSingleParams_$120_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffff))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), and(mload(add(value0, 0xe0)), _1))\n    }\n    function abi_encode_tuple_t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr__to_t_struct$_QuoteExactInputSingleParams_$1011_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        abi_encode_struct_QuoteExactInputSingleParams(value0, headStart)\n    }\n    function abi_encode_tuple_t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr__to_t_struct$_QuoteExactOutputSingleParams_$1041_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        abi_encode_struct_QuoteExactInputSingleParams(value0, headStart)\n    }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"211":[{"length":32,"start":296},{"length":32,"start":1738}],"213":[{"length":32,"start":359},{"length":32,"start":2172},{"length":32,"start":2709}],"215":[{"length":32,"start":398},{"length":32,"start":877}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB88C5F91 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB88C5F91 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC6BBD5A7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x230ED44A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x53B609B5 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x93316212 EQ PUSH2 0xED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xCC PUSH2 0xE8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0xCC PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x20C JUMP JUMPDEST PUSH2 0x113 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x3 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6 DUP5 DUP5 DUP5 PUSH2 0x7F6 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6 DUP5 DUP5 DUP5 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 EQ PUSH2 0x230 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3CB96DB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x288 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BB DUP7 DUP7 DUP5 PUSH2 0x7F6 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2D4 JUMPI POP PUSH1 0x0 DUP2 PUSH3 0xFFFFFF AND GT JUMPDEST PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705633496E746567726174696F6E3A20494E5355464649434945 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x139517D3D55514155517D05353D55395 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x350 JUMPI ADDRESS SWAP4 POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP2 SWAP1 DUP9 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x403 JUMPI PUSH2 0x403 DUP8 DUP3 PUSH1 0x0 NOT PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE DUP11 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH3 0xFFFFFF DUP9 DUP2 AND DUP5 DUP7 ADD SWAP1 DUP2 MSTORE DUP13 DUP5 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP14 DUP2 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xE0 DUP11 ADD SWAP2 DUP3 MSTORE SWAP10 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP9 MLOAD DUP9 AND PUSH1 0x4 DUP11 ADD MSTORE SWAP6 MLOAD DUP8 AND PUSH1 0x24 DUP10 ADD MSTORE SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x44 DUP8 ADD MSTORE MLOAD DUP5 AND PUSH1 0x64 DUP7 ADD MSTORE SWAP1 MLOAD PUSH1 0x84 DUP6 ADD MSTORE MLOAD PUSH1 0xA4 DUP5 ADD MSTORE SWAP3 MLOAD PUSH1 0xC4 DUP4 ADD MSTORE SWAP2 MLOAD DUP3 AND PUSH1 0xE4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP4 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0x611 DUP3 DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x647 JUMPI POP PUSH1 0x0 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6BF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x3 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x684 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1698EE82 DUP9 DUP9 DUP8 DUP7 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x722 JUMPI PUSH2 0x722 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x793 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x7F0 JUMP JUMPDEST POP DUP1 PUSH2 0x7E0 DUP2 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6EE JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x871 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x3 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x836 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xA04 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC6A5026A PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP7 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x901 JUMPI PUSH2 0x901 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x985 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x982 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9C3 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 DUP2 GT ISZERO PUSH2 0x9F1 JUMPI DUP1 SWAP6 POP DUP4 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x9E6 JUMPI PUSH2 0x9E6 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP5 POP JUMPDEST POP DUP1 PUSH2 0x9FC DUP2 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A0 JUMP JUMPDEST POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA8A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x3 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0xA4F JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xA04 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD21704A PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP7 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xB1A JUMPI PUSH2 0xB1A PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB9E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB9B SWAP2 DUP2 ADD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBDC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP PUSH2 0xBDF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xBEE JUMPI POP DUP6 DUP2 LT JUMPDEST ISZERO PUSH2 0xC16 JUMPI DUP1 SWAP6 POP DUP4 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xC0B JUMPI PUSH2 0xC0B PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP5 POP JUMPDEST POP DUP1 PUSH2 0xC21 DUP2 PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xCF1 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xCF1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A73616665417070726F76653A20617070 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1C9BDD994819985A5B1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x335 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD75 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD9A DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xDAA DUP2 PUSH2 0xF7C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xDD5 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xDE5 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xDF5 DUP2 PUSH2 0xF7C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE20 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xE30 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xE9C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x7F0 DUP3 DUP5 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF2B JUMPI PUSH2 0xF2B PUSH2 0xF50 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0xF47 JUMPI PUSH2 0xF47 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 EXTCODESIZE DIV DUP8 PUSH4 0x9072A75B 0xBE 0xB5 PUSH19 0x24C5A3E46D2C2A3FD19375452E757EBD710772 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"410:5547:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:24;;;;;;:::i;:::-;;:::i;:::-;;;6974:8:10;6962:21;;;6944:40;;6932:2;6917:18;644:24:3;;;;;;;;4137:237;;;;;;:::i;:::-;;:::i;:::-;;;7141:25:10;;;7129:2;7114:18;4137:237:3;6995:177:10;4380:235:3;;;;;;:::i;:::-;;:::i;4621:1334::-;;;;;;:::i;:::-;;:::i;1332:610::-;;;;;;:::i;:::-;;:::i;:::-;;;4520:14:10;;4513:22;4495:41;;4483:2;4468:18;1332:610:3;4355:187:10;475:32:3;;;;;;;;-1:-1:-1;;;;;3330:32:10;;;3312:51;;3300:2;3285:18;475:32:3;3166:203:10;513:31:3;;;;;607;;;;;644:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4137:237::-;4277:17;4322:45;4336:8;4346:9;4357;4322:13;:45::i;:::-;-1:-1:-1;4306:61:3;4137:237;-1:-1:-1;;;;4137:237:3:o;4380:235::-;4520:16;4563:45;4576:8;4586:9;4597:10;4563:12;:45::i;4621:1334::-;4747:17;181:8:4;;193:1;181:13;177:34;;203:8;;-1:-1:-1;;;203:8:4;;;;;;;;;;;177:34;232:1;221:12;;;4795:41:3::1;::::0;-1:-1:-1;;;4795:41:3;;4830:4:::1;4795:41;::::0;::::1;3312:51:10::0;-1:-1:-1;;;;;4795:26:3;::::1;::::0;::::1;::::0;3285:18:10;;4795:41:3::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4776:60;;4846:10;4885:44;4899:8;4909:9;4920:8;4885:13;:44::i;:::-;4866:63:::0;;-1:-1:-1;4866:63:3;-1:-1:-1;4960:13:3;;;;;:24:::1;;;4983:1;4977:3;:7;;;4960:24;4939:119;;;::::0;-1:-1:-1;;;4939:119:3;;5161:2:10;4939:119:3::1;::::0;::::1;5143:21:10::0;5200:2;5180:18;;;5173:30;5239:34;5219:18;;;5212:62;-1:-1:-1;;;5290:18:10;;;5283:46;5346:19;;4939:119:3::1;;;;;;;;;-1:-1:-1::0;;;;;5136:17:3;::::1;5132:42;;5169:4;5155:19;;5132:42;5223:50;::::0;-1:-1:-1;;;5223:50:3;;5258:4:::1;5223:50;::::0;::::1;3586:34:10::0;-1:-1:-1;;;;;5203:6:3::1;3656:15:10::0;;;3636:18;;;3629:43;5203:6:3;5223:26;;::::1;::::0;::::1;::::0;3521:18:10;;5223:50:3::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5219:150;;5294:64;5321:8;5331:7;-1:-1:-1::0;;5294:26:3::1;:64::i;:::-;5404:32;::::0;-1:-1:-1;;;5404:32:3;;-1:-1:-1;;;;;3330:32:10;;;5404::3::1;::::0;::::1;3312:51:10::0;5379:22:3::1;::::0;5404:27;;::::1;::::0;::::1;::::0;3285:18:10;;5404:32:3::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5497:334;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;5497:334:3;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;5690:15:::1;5497:334:::0;;;;;;;;;;;;-1:-1:-1;5497:334:3;;;;;;;;;;;;5446:395;;-1:-1:-1;;;5446:395:3;;5661:13:10;;5657:22;;5446:395:3::1;::::0;::::1;5639:41:10::0;5722:24;;5718:33;;5696:20;;;5689:63;5794:24;;5790:39;;;5768:20;;;5761:69;5872:24;5868:33;;5846:20;;;5839:63;5940:24;;5918:20;;;5911:54;6003:24;5981:20;;;5974:54;6066:24;;6044:20;;;6037:54;6133:24;;6129:33;;6107:20;;;6100:63;5379:57:3;;-1:-1:-1;5446:37:3;::::1;::::0;::::1;::::0;5573:19:10;;5446:395:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5870:32:3::1;::::0;-1:-1:-1;;;5870:32:3;;-1:-1:-1;;;;;3330:32:10;;;5870::3::1;::::0;::::1;3312:51:10::0;5852:15:3::1;::::0;5870:27;;::::1;::::0;::::1;::::0;3285:18:10;;5870:32:3::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5852:50:::0;-1:-1:-1;5924:24:3::1;5934:14:::0;5852:50;5924:24:::1;:::i;:::-;265:1:4::0;254:8;:12;5912:36:3;4621:1334;-1:-1:-1;;;;;;;;;4621:1334:3:o;1332:610::-;1445:4;1477:9;-1:-1:-1;;;;;1465:21:3;:8;-1:-1:-1;;;;;1465:21:3;;1461:64;;;-1:-1:-1;1509:5:3;1502:12;;1461:64;1534:25;1562:8;1534:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1580:16;1599:7;1580:26;;1621:7;1616:298;1638:9;:16;1634:1;:20;;;1616:298;;;1675:12;1708:8;-1:-1:-1;;;;;1690:35:3;;1743:8;1769:9;1796;1806:1;1796:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;1690:132;;-1:-1:-1;;;;;;1690:132:3;;;;;;;-1:-1:-1;;;;;3939:15:10;;;1690:132:3;;;3921:34:10;3991:15;;;;3971:18;;;3964:43;4055:8;4043:21;4023:18;;;4016:49;3856:18;;1690:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1675:147;-1:-1:-1;;;;;;1840:18:3;;;1836:68;;1885:4;1878:11;;;;;;;;1836:68;-1:-1:-1;1656:3:3;;;;:::i;:::-;;;;1616:298;;;;1930:5;1923:12;;;;1332:610;;;;;:::o;1948:1082::-;2080:17;2099:10;2121:25;2149:8;2121:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2167:15;2185:6;2167:24;;2206:7;2201:823;2223:9;:16;2219:1;:20;;;2201:823;;;2260:21;2338:7;-1:-1:-1;;;;;2315:53:3;;2390:296;;;;;;;;2476:8;-1:-1:-1;;;;;2390:296:3;;;;;2520:9;-1:-1:-1;;;;;2390:296:3;;;;;2565:9;2390:296;;;;2605:9;2615:1;2605:12;;;;;;;;;;:::i;:::-;;;;;;;2390:296;;;;;;2662:1;-1:-1:-1;;;;;2390:296:3;;;;2315:389;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2315:389:3;;;;;;;;-1:-1:-1;;2315:389:3;;;;;;;;;;;;:::i;:::-;;;2295:581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2860:1;2844:17;;2788:88;2295:581;;;2771:1;-1:-1:-1;2295:581:3;2909:9;2893:13;:25;2889:125;;;2950:13;2938:25;;2987:9;2997:1;2987:12;;;;;;;;;;:::i;:::-;;;;;;;2981:18;;2889:125;-1:-1:-1;2241:3:3;;;;:::i;:::-;;;;2201:823;;;;2111:919;;1948:1082;;;;;;:::o;3036:1095::-;3168:16;3186:10;3208:25;3236:8;3208:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3254:15;3272:6;3254:24;;3293:7;3288:837;3310:9;:16;3306:1;:20;;;3288:837;;;3347:20;3424:7;-1:-1:-1;;;;;3401:54:3;;3477:296;;;;;;;;3564:8;-1:-1:-1;;;;;3477:296:3;;;;;3608:9;-1:-1:-1;;;;;3477:296:3;;;;;3651:10;3477:296;;;;3692:9;3702:1;3692:12;;;;;;;;;;:::i;:::-;;;;;;;3477:296;;;;;;3749:1;-1:-1:-1;;;;;3477:296:3;;;;3401:390;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3401:390:3;;;;;;;;-1:-1:-1;;3401:390:3;;;;;;;;;;;;:::i;:::-;;;3381:580;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3945:1;3930:16;;3874:87;3381:580;;;3857:1;-1:-1:-1;3381:580:3;3993:1;3978:12;:16;:43;;;;;4013:8;3998:12;:23;3978:43;3974:141;;;4052:12;4041:23;;4088:9;4098:1;4088:12;;;;;;;;;;:::i;:::-;;;;;;;4082:18;;3974:141;-1:-1:-1;3328:3:3;;;;:::i;:::-;;;;3288:837;;211:432:9;422:47;;;-1:-1:-1;;;;;4268:32:10;;;422:47:9;;;4250:51:10;4317:18;;;;4310:34;;;422:47:9;;;;;;;;;;4223:18:10;;;;422:47:9;;;;;;;-1:-1:-1;;;;;422:47:9;-1:-1:-1;;;422:47:9;;;397:82;;-1:-1:-1;;;;397:11:9;;;;:82;;422:47;397:82;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;361:118;;;;510:7;:57;;;;-1:-1:-1;522:11:9;;:16;;:44;;;553:4;542:24;;;;;;;;;;;;:::i;:::-;489:147;;;;-1:-1:-1;;;489:147:9;;4749:2:10;489:147:9;;;4731:21:10;4788:2;4768:18;;;4761:30;4827:34;4807:18;;;4800:62;-1:-1:-1;;;4878:18:10;;;4871:41;4929:19;;489:147:9;4547:407:10;489:147:9;286:357;;211:432;;;:::o;14:251:10:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;185:9;179:16;204:31;229:5;204:31;:::i;:::-;254:5;14:251;-1:-1:-1;;;14:251:10:o;270:388::-;338:6;346;399:2;387:9;378:7;374:23;370:32;367:52;;;415:1;412;405:12;367:52;454:9;441:23;473:31;498:5;473:31;:::i;:::-;523:5;-1:-1:-1;580:2:10;565:18;;552:32;593:33;552:32;593:33;:::i;:::-;645:7;635:17;;;270:388;;;;;:::o;663:529::-;740:6;748;756;809:2;797:9;788:7;784:23;780:32;777:52;;;825:1;822;815:12;777:52;864:9;851:23;883:31;908:5;883:31;:::i;:::-;933:5;-1:-1:-1;990:2:10;975:18;;962:32;1003:33;962:32;1003:33;:::i;:::-;1055:7;-1:-1:-1;1114:2:10;1099:18;;1086:32;1127:33;1086:32;1127:33;:::i;:::-;1179:7;1169:17;;;663:529;;;;;:::o;1197:456::-;1274:6;1282;1290;1343:2;1331:9;1322:7;1318:23;1314:32;1311:52;;;1359:1;1356;1349:12;1311:52;1398:9;1385:23;1417:31;1442:5;1417:31;:::i;:::-;1467:5;-1:-1:-1;1524:2:10;1509:18;;1496:32;1537:33;1496:32;1537:33;:::i;:::-;1197:456;;1589:7;;-1:-1:-1;;;1643:2:10;1628:18;;;;1615:32;;1197:456::o;1658:277::-;1725:6;1778:2;1766:9;1757:7;1753:23;1749:32;1746:52;;;1794:1;1791;1784:12;1746:52;1826:9;1820:16;1879:5;1872:13;1865:21;1858:5;1855:32;1845:60;;1901:1;1898;1891:12;1940:180;1999:6;2052:2;2040:9;2031:7;2027:23;2023:32;2020:52;;;2068:1;2065;2058:12;2020:52;-1:-1:-1;2091:23:10;;1940:180;-1:-1:-1;1940:180:10:o;2125:184::-;2195:6;2248:2;2236:9;2227:7;2223:23;2219:32;2216:52;;;2264:1;2261;2254:12;2216:52;-1:-1:-1;2287:16:10;;2125:184;-1:-1:-1;2125:184:10:o;2735:426::-;2864:3;2902:6;2896:13;2927:1;2937:129;2951:6;2948:1;2945:13;2937:129;;;3049:4;3033:14;;;3029:25;;3023:32;3010:11;;;3003:53;2966:12;2937:129;;;3084:6;3081:1;3078:13;3075:48;;;3119:1;3110:6;3105:3;3101:16;3094:27;3075:48;-1:-1:-1;3139:16:10;;;;;2735:426;-1:-1:-1;;2735:426:10:o;6174:307::-;6398:3;6383:19;;6411:64;6387:9;6457:6;2449:12;;-1:-1:-1;;;;;2445:21:10;;;2433:34;;2520:4;2509:16;;;2503:23;2499:32;;2483:14;;;2476:56;2581:4;2570:16;;;2564:23;2548:14;;;2541:47;2641:4;2630:16;;;2624:23;2649:8;2620:38;2604:14;;;2597:62;2712:4;2701:16;;;2695:23;2691:32;2675:14;;2668:56;2314:416;7177:125;7217:4;7245:1;7242;7239:8;7236:34;;;7250:18;;:::i;:::-;-1:-1:-1;7287:9:10;;7177:125::o;7307:175::-;7344:3;7388:4;7381:5;7377:16;7417:4;7408:7;7405:17;7402:43;;;7425:18;;:::i;:::-;7474:1;7461:15;;7307:175;-1:-1:-1;;7307:175:10:o;7487:127::-;7548:10;7543:3;7539:20;7536:1;7529:31;7579:4;7576:1;7569:15;7603:4;7600:1;7593:15;7619:127;7680:10;7675:3;7671:20;7668:1;7661:31;7711:4;7708:1;7701:15;7735:4;7732:1;7725:15;7751:131;-1:-1:-1;;;;;7826:31:10;;7816:42;;7806:70;;7872:1;7869;7862:12;7806:70;7751:131;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"808400","executionCost":"infinite","totalCost":"infinite"},"external":{"factory()":"infinite","feeTiers(uint256)":"6237","getAmountIn(address,address,uint256)":"infinite","getAmountOut(address,address,uint256)":"infinite","quoter()":"infinite","router()":"infinite","swap(address,address,address)":"infinite","validatePair(address,address)":"infinite"},"internal":{"_getAmountIn(address,address,uint256)":"infinite","_getAmountOut(address,address,uint256)":"infinite","_sortTokens(address,address)":"infinite"}},"methodIdentifiers":{"factory()":"c45a0155","feeTiers(uint256)":"230ed44a","getAmountIn(address,address,uint256)":"53b609b5","getAmountOut(address,address,uint256)":"4aa06652","quoter()":"c6bbd5a7","router()":"f887ea40","swap(address,address,address)":"93316212","validatePair(address,address)":"b88c5f91"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeTiers\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"validatePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV3DEXIntegration.sol\":\"UniswapV3Integration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"contracts/UniswapV3DEXIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\n\\nimport \\\"./libraries/TransferHelper.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IDEXIntegration.sol\\\";\\nimport \\\"./interfaces/IUniswapV3StaticQuoter.sol\\\";\\nimport \\\"./base/Lockable.sol\\\";\\n\\ncontract UniswapV3Integration is IDEXIntegration, Lockable {\\n    address public immutable factory;\\n    address public immutable quoter; // https://github.com/ultimexfi/uniswap-v3-static-quoter\\n    address public immutable router;\\n    uint24[] public feeTiers;\\n\\n    constructor(address _factory, address _quoter, address _router) {\\n        factory = _factory;\\n        quoter = _quoter;\\n        router = _router;\\n        feeTiers.push(100);\\n        feeTiers.push(500);\\n        feeTiers.push(3000);\\n        feeTiers.push(10000);\\n    }\\n\\n    function _sortTokens(\\n        address _tokenA,\\n        address _tokenB\\n    ) internal pure returns (address token0, address token1) {\\n        if (\\n            _tokenA != _tokenB && _tokenA != address(0) && _tokenB != address(0)\\n        ) {\\n            (token0, token1) = _tokenA < _tokenB\\n                ? (_tokenA, _tokenB)\\n                : (_tokenB, _tokenA);\\n        }\\n    }\\n\\n    function validatePair(\\n        address _tokenIn,\\n        address _tokenOut\\n    ) external view override returns (bool) {\\n        if (_tokenIn == _tokenOut) {\\n            return false;\\n        }\\n        uint24[] memory _feeTiers = feeTiers;\\n        address _factory = factory;\\n        for (uint8 i = 0; i < _feeTiers.length; i++) {\\n            address pool = IUniswapV3Factory(_factory).getPool(\\n                _tokenIn,\\n                _tokenOut,\\n                _feeTiers[i]\\n            );\\n            if (pool != address(0)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function _getAmountOut(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountIn\\n    ) internal view returns (uint256 amountOut, uint24 fee) {\\n        uint24[] memory _feeTiers = feeTiers;\\n        address _quoter = quoter;\\n        for (uint8 i = 0; i < _feeTiers.length; i++) {\\n            uint256 tempAmountOut;\\n            try\\n                IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(\\n                    IUniswapV3StaticQuoter.QuoteExactInputSingleParams({\\n                        tokenIn: _tokenIn,\\n                        tokenOut: _tokenOut,\\n                        amountIn: _amountIn,\\n                        fee: _feeTiers[i],\\n                        sqrtPriceLimitX96: 0\\n                    })\\n                )\\n            returns (uint256 t) {\\n                tempAmountOut = t;\\n            } catch (bytes memory /*lowLevelData*/) {\\n                tempAmountOut = 0;\\n            }\\n            if (tempAmountOut > amountOut) {\\n                amountOut = tempAmountOut;\\n                fee = _feeTiers[i];\\n            }\\n        }\\n    }\\n\\n    function _getAmountIn(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountOut\\n    ) internal view returns (uint256 amountIn, uint24 fee) {\\n        uint24[] memory _feeTiers = feeTiers;\\n        address _quoter = quoter;\\n        for (uint8 i = 0; i < _feeTiers.length; i++) {\\n            uint256 tempAmountIn;\\n            try\\n                IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(\\n                    IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({\\n                        tokenIn: _tokenIn,\\n                        tokenOut: _tokenOut,\\n                        amount: _amountOut,\\n                        fee: _feeTiers[i],\\n                        sqrtPriceLimitX96: 0\\n                    })\\n                )\\n            returns (uint256 t) {\\n                tempAmountIn = t;\\n            } catch (bytes memory /*lowLevelData*/) {\\n                tempAmountIn = 0;\\n            }\\n            if (tempAmountIn > 0 && tempAmountIn < amountIn) {\\n                amountIn = tempAmountIn;\\n                fee = _feeTiers[i];\\n            }\\n        }\\n    }\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountIn\\n    ) external view override returns (uint256 amountOut) {\\n        (amountOut, ) = _getAmountOut(_tokenIn, _tokenOut, _amountIn);\\n    }\\n\\n    function getAmountIn(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountOut\\n    ) external view override returns (uint256 amountIn) {\\n        (amountIn, ) = _getAmountIn(_tokenIn, _tokenOut, _amountOut);\\n    }\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _to\\n    ) external override lock returns (uint256 amountOut) {\\n        uint256 amountIn = IERC20(_tokenIn).balanceOf(address(this));\\n        uint24 fee;\\n        (amountOut, fee) = _getAmountOut(_tokenIn, _tokenOut, amountIn);\\n        require(\\n            amountOut > 0 && fee > 0,\\n            \\\"UniswapV3Integration: INSUFFICIENT_OUTPUT_AMOUNT\\\"\\n        );\\n\\n        // allow swapping to the router address with address 0\\n        if (_to == address(0)) _to = address(this);\\n\\n        address _router = router;\\n        if (IERC20(_tokenIn).allowance(address(this), _router) == 0) {\\n            TransferHelper.safeApprove(_tokenIn, _router, type(uint256).max);\\n        }\\n\\n        uint256 initialBalance = IERC20(_tokenOut).balanceOf(_to);\\n        ISwapRouter(_router).exactInputSingle(\\n            ISwapRouter.ExactInputSingleParams({\\n                tokenIn: _tokenIn,\\n                tokenOut: _tokenOut,\\n                fee: fee,\\n                recipient: _to,\\n                deadline: block.timestamp,\\n                amountIn: amountIn,\\n                amountOutMinimum: 0,\\n                sqrtPriceLimitX96: 0\\n            })\\n        );\\n\\n        uint256 balance = IERC20(_tokenOut).balanceOf(_to);\\n        amountOut = balance - initialBalance;\\n    }\\n}\\n\",\"keccak256\":\"0xf2b2485606a90818ea6a9593950ad5fcc5c3bb709fd40c1e9e7a8ab445171251\",\"license\":\"GPL-2.0-or-later\"},\"contracts/base/Lockable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ncontract Lockable {\\n    uint256 private unlocked = 1;\\n\\n    error Locked();\\n\\n    modifier lock() {\\n        if (unlocked != 1) revert Locked();\\n        unlocked = 0;\\n        _;\\n        unlocked = 1;\\n    }\\n}\\n\",\"keccak256\":\"0x51bad8a22e77a2611fc69518057a590b645033607e72076d43e66bb2591a89c2\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IDEXIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IDEXIntegration {\\n    function validatePair(\\n        address _tokenIn,\\n        address _tokenOut\\n    ) external view returns (bool);\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountIn\\n    ) external view returns (uint256);\\n\\n    function getAmountIn(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountOut\\n    ) external view returns (uint256);\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _to\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xdb59a456949a60735ad9a8af40701ced24cd467bf0513d9a548f896f44ff7182\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IUniswapV3StaticQuoter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\ninterface IUniswapV3StaticQuoter {\\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\\n    /// @param amountIn The amount of the first token to swap\\n    /// @return amountOut The amount of the last token that would be received\\n    function quoteExactInput(\\n        bytes memory path,\\n        uint256 amountIn\\n    ) external view returns (uint256 amountOut);\\n\\n    struct QuoteExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 amountIn;\\n        uint24 fee;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\\n    /// @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\\n    /// tokenIn The token being swapped in\\n    /// tokenOut The token being swapped out\\n    /// fee The fee of the token pool to consider for the pair\\n    /// amountIn The desired input amount\\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\\n    /// @return amountOut The amount of `tokenOut` that would be received\\n    function quoteExactInputSingle(\\n        QuoteExactInputSingleParams memory params\\n    ) external view returns (uint256 amountOut);\\n\\n    /// @notice Returns the amount in needed for a given exact output swap without executing the swap\\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\\n    /// @param amountOut The amount of the last token that would be received\\n    /// @return amountIn The amount of the first token to swap\\n    function quoteExactOutput(\\n        bytes memory path,\\n        uint256 amountOut\\n    ) external view returns (uint256 amountIn);\\n\\n    struct QuoteExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 amount;\\n        uint24 fee;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Returns the amount in needed for a given exact output but for a swap of a single pool\\n    /// @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\\n    /// tokenIn The token being swapped in\\n    /// tokenOut The token being swapped out\\n    /// fee The fee of the token pool to consider for the pair\\n    /// amountOut The desired output amount\\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\\n    /// @return amountIn The amount of `tokenIn` that would be needed\\n    function quoteExactOutputSingle(\\n        QuoteExactOutputSingleParams memory params\\n    ) external view returns (uint256 amountIn);\\n}\",\"keccak256\":\"0xac75d87dcb20505222561e784d5cb69e82841aee7fca8261b0e36cd242064d5a\",\"license\":\"GPL-2.0-or-later\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(address _token, address _to, uint256 _value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeApprove: approve failed\\\"\\n        );\\n    }\\n\\n    function safeTransfer(\\n        address _token,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeTransfer: transfer failed\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address _token,\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::transferFrom: transferFrom failed\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address _to, uint256 _value) internal {\\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\\n        require(\\n            success,\\n            \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":748,"contract":"contracts/UniswapV3DEXIntegration.sol:UniswapV3Integration","label":"unlocked","offset":0,"slot":"0","type":"t_uint256"},{"astId":218,"contract":"contracts/UniswapV3DEXIntegration.sol:UniswapV3Integration","label":"feeTiers","offset":0,"slot":"1","type":"t_array(t_uint24)dyn_storage"}],"types":{"t_array(t_uint24)dyn_storage":{"base":"t_uint24","encoding":"dynamic_array","label":"uint24[]","numberOfBytes":"32"},"t_uint24":{"encoding":"inplace","label":"uint24","numberOfBytes":"3"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/base/Lockable.sol":{"Lockable":{"abi":[{"inputs":[],"name":"Locked","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60806040526001600055348015601457600080fd5b50603f8060226000396000f3fe6080604052600080fdfea26469706673582212208bf86e24747a50e1d955aad6e724b27816fcc8804b2a64b0fec4877093aff8f864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x22 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xF8 PUSH15 0x24747A50E1D955AAD6E724B27816FC 0xC8 DUP1 0x4B 0x2A PUSH5 0xB0FEC48770 SWAP4 0xAF 0xF8 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"71:204:4:-:0;;;122:1;95:28;;71:204;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212208bf86e24747a50e1d955aad6e724b27816fcc8804b2a64b0fec4877093aff8f864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xF8 PUSH15 0x24747A50E1D955AAD6E724B27816FC 0xC8 DUP1 0x4B 0x2A PUSH5 0xB0FEC48770 SWAP4 0xAF 0xF8 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"71:204:4:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"22172","totalCost":"34772"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Lockable.sol\":\"Lockable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Lockable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ncontract Lockable {\\n    uint256 private unlocked = 1;\\n\\n    error Locked();\\n\\n    modifier lock() {\\n        if (unlocked != 1) revert Locked();\\n        unlocked = 0;\\n        _;\\n        unlocked = 1;\\n    }\\n}\\n\",\"keccak256\":\"0x51bad8a22e77a2611fc69518057a590b645033607e72076d43e66bb2591a89c2\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":748,"contract":"contracts/base/Lockable.sol:Lockable","label":"unlocked","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDEXAggregator.sol":{"IDEXAggregator":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"dexIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dexLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"dexNames","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"dexes","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_dex","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"dex","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_dex","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address","name":"dex","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_dex","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_minAmountOut","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address","name":"dex","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_dex","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"}],"name":"validatePair","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"dexIndex(address)":"4f54d1ce","dexLength()":"52041b5f","dexNames(uint256)":"88a02f23","dexes(uint256)":"6338a7c0","getAmountIn(address,address,address,uint256)":"ec278309","getAmountOut(address,address,address,uint256)":"d7176ca9","swap(address,address,address,uint256,address)":"677fdac8","validatePair(address,address,address)":"af0d9479"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dexIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dexNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dexes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"validatePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDEXAggregator.sol\":\"IDEXAggregator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDEXAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IDEXAggregator {\\n    function dexes(uint256) external view returns (address);\\n\\n    function dexNames(uint256) external view returns (string memory);\\n\\n    function dexIndex(address) external view returns (uint256);\\n\\n    function dexLength() external view returns (uint256);\\n\\n    function validatePair(\\n        address _dex,\\n        address _tokenIn,\\n        address _tokenOut\\n    ) external view returns (bool);\\n\\n    function getAmountIn(\\n        address _dex,\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountOut\\n    ) external view returns (uint256 amountIn, address dex);\\n\\n    function getAmountOut(\\n        address _dex,\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountIn\\n    ) external view returns (uint256 amountOut, address dex);\\n\\n    function swap(\\n        address _dex,\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _minAmountOut,\\n        address _to\\n    ) external returns (uint256 amountOut, address dex);\\n}\\n\",\"keccak256\":\"0x050436409ad725de56a178bc04f3af194c092e8819b68a74d3cff79c0e80b53b\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDEXIntegration.sol":{"IDEXIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"}],"name":"validatePair","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAmountIn(address,address,uint256)":"53b609b5","getAmountOut(address,address,uint256)":"4aa06652","swap(address,address,address)":"93316212","validatePair(address,address)":"b88c5f91"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"validatePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDEXIntegration.sol\":\"IDEXIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDEXIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IDEXIntegration {\\n    function validatePair(\\n        address _tokenIn,\\n        address _tokenOut\\n    ) external view returns (bool);\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountIn\\n    ) external view returns (uint256);\\n\\n    function getAmountIn(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountOut\\n    ) external view returns (uint256);\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _to\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xdb59a456949a60735ad9a8af40701ced24cd467bf0513d9a548f896f44ff7182\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IERC20.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"uint8","name":"_v","type":"uint8"},{"internalType":"bytes32","name":"_r","type":"bytes32"},{"internalType":"bytes32","name":"_s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IUniswapV3StaticQuoter.sol":{"IUniswapV3StaticQuoter":{"abi":[{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"quoteExactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams","name":"params","type":"tuple"}],"name":"quoteExactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"quoteExactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams","name":"params","type":"tuple"}],"name":"quoteExactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"quoteExactInput(bytes,uint256)":{"params":{"amountIn":"The amount of the first token to swap","path":"The path of the swap, i.e. each token pair and the pool fee"},"returns":{"amountOut":"The amount of the last token that would be received"}},"quoteExactInputSingle((address,address,uint256,uint24,uint160))":{"params":{"params":"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"},"returns":{"amountOut":"The amount of `tokenOut` that would be received"}},"quoteExactOutput(bytes,uint256)":{"params":{"amountOut":"The amount of the last token that would be received","path":"The path of the swap, i.e. each token pair and the pool fee"},"returns":{"amountIn":"The amount of the first token to swap"}},"quoteExactOutputSingle((address,address,uint256,uint24,uint160))":{"params":{"params":"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"},"returns":{"amountIn":"The amount of `tokenIn` that would be needed"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"quoteExactInput(bytes,uint256)":"cdca1753","quoteExactInputSingle((address,address,uint256,uint24,uint160))":"c6a5026a","quoteExactOutput(bytes,uint256)":"2f80bb1d","quoteExactOutputSingle((address,address,uint256,uint24,uint160))":"bd21704a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token that would be received\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountIn\":\"The amount of the first token to swap\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount of `tokenIn` that would be needed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in needed for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in needed for a given exact output but for a swap of a single pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV3StaticQuoter.sol\":\"IUniswapV3StaticQuoter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV3StaticQuoter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\ninterface IUniswapV3StaticQuoter {\\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\\n    /// @param amountIn The amount of the first token to swap\\n    /// @return amountOut The amount of the last token that would be received\\n    function quoteExactInput(\\n        bytes memory path,\\n        uint256 amountIn\\n    ) external view returns (uint256 amountOut);\\n\\n    struct QuoteExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 amountIn;\\n        uint24 fee;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\\n    /// @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\\n    /// tokenIn The token being swapped in\\n    /// tokenOut The token being swapped out\\n    /// fee The fee of the token pool to consider for the pair\\n    /// amountIn The desired input amount\\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\\n    /// @return amountOut The amount of `tokenOut` that would be received\\n    function quoteExactInputSingle(\\n        QuoteExactInputSingleParams memory params\\n    ) external view returns (uint256 amountOut);\\n\\n    /// @notice Returns the amount in needed for a given exact output swap without executing the swap\\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\\n    /// @param amountOut The amount of the last token that would be received\\n    /// @return amountIn The amount of the first token to swap\\n    function quoteExactOutput(\\n        bytes memory path,\\n        uint256 amountOut\\n    ) external view returns (uint256 amountIn);\\n\\n    struct QuoteExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 amount;\\n        uint24 fee;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Returns the amount in needed for a given exact output but for a swap of a single pool\\n    /// @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\\n    /// tokenIn The token being swapped in\\n    /// tokenOut The token being swapped out\\n    /// fee The fee of the token pool to consider for the pair\\n    /// amountOut The desired output amount\\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\\n    /// @return amountIn The amount of `tokenIn` that would be needed\\n    function quoteExactOutputSingle(\\n        QuoteExactOutputSingleParams memory params\\n    ) external view returns (uint256 amountIn);\\n}\",\"keccak256\":\"0xac75d87dcb20505222561e784d5cb69e82841aee7fca8261b0e36cd242064d5a\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"quoteExactInput(bytes,uint256)":{"notice":"Returns the amount out received for a given exact input swap without executing the swap"},"quoteExactInputSingle((address,address,uint256,uint24,uint160))":{"notice":"Returns the amount out received for a given exact input but for a swap of a single pool"},"quoteExactOutput(bytes,uint256)":{"notice":"Returns the amount in needed for a given exact output swap without executing the swap"},"quoteExactOutputSingle((address,address,uint256,uint24,uint160))":{"notice":"Returns the amount in needed for a given exact output but for a swap of a single pool"}},"version":1}}},"contracts/libraries/TransferHelper.sol":{"TransferHelper":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bb40d7028c79b4e53abf5874575e3f9add0fef64bba67e9970457bc4c5bb48f64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xB40D7028C79B4E53ABF58745 PUSH22 0xE3F9ADD0FEF64BBA67E9970457BC4C5BB48F64736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"182:1715:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;182:1715:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bb40d7028c79b4e53abf5874575e3f9add0fef64bba67e9970457bc4c5bb48f64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xB40D7028C79B4E53ABF58745 PUSH22 0xE3F9ADD0FEF64BBA67E9970457BC4C5BB48F64736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"182:1715:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"safeApprove(address,address,uint256)":"infinite","safeTransfer(address,address,uint256)":"infinite","safeTransferETH(address,uint256)":"infinite","safeTransferFrom(address,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(address _token, address _to, uint256 _value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeApprove: approve failed\\\"\\n        );\\n    }\\n\\n    function safeTransfer(\\n        address _token,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeTransfer: transfer failed\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address _token,\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::transferFrom: transferFrom failed\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address _to, uint256 _value) internal {\\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\\n        require(\\n            success,\\n            \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}