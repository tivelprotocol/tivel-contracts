{"id":"aeea21040bb5d5810ddfac810dd9cfdf","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"},"contracts/base/Lockable.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ncontract Lockable {\n    uint256 private unlocked = 1;\n\n    error Locked();\n\n    modifier lock() {\n        if (unlocked != 1) revert Locked();\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n}\n"},"contracts/interfaces/external/ISyncswapFactory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface ISyncswapFactory {\n    function getPool(\n        address _tokenA,\n        address _tokenB\n    ) external view returns (address);\n}\n"},"contracts/interfaces/external/ISyncswapPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface ISyncswapPool {\n    struct TokenAmount {\n        address token;\n        uint amount;\n    }\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves() external view returns (uint256, uint256);\n\n    function getSwapFee(\n        address _sender,\n        address _tokenIn,\n        address _tokenOut,\n        bytes memory data\n    ) external view returns (uint24);\n\n    function getAmountOut(\n        address _tokenIn,\n        uint256 _amountIn,\n        address _sender\n    ) external view returns (uint256 amountOut);\n\n    function getAmountIn(\n        address _tokenOut,\n        uint256 _amountOut,\n        address _sender\n    ) external view returns (uint256 amountIn);\n\n    function swap(\n        bytes calldata _data,\n        address _sender,\n        address _callback,\n        bytes calldata _callbackData\n    ) external returns (TokenAmount memory tokenAmount);\n}\n"},"contracts/interfaces/IDEXIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IDEXIntegration {\n    function validatePair(\n        address _tokenIn,\n        address _tokenOut\n    ) external view returns (bool);\n\n    function getAmountOut(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) external view returns (uint256);\n\n    function getAmountIn(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) external view returns (uint256);\n\n    function swap(\n        address _tokenIn,\n        address _tokenOut,\n        address _to\n    ) external returns (uint256);\n}\n"},"contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IERC20 {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address) external view returns (uint256);\n\n    function allowance(\n        address _owner,\n        address _spender\n    ) external view returns (uint256);\n\n    function approve(address _spender, uint256 _value) external returns (bool);\n\n    function transfer(address _to, uint256 _value) external returns (bool);\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) external returns (bool);\n\n    function permit(\n        address _owner,\n        address _spender,\n        uint256 _value,\n        uint256 _deadline,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    ) external;\n}\n"},"contracts/interfaces/IPriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IPriceFeedIntegration {\n    function PRECISION() external view returns (uint256);\n    \n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view returns (uint256);\n}\n"},"contracts/libraries/TransferHelper.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address _token, address _to, uint256 _value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeApprove: approve failed\"\n        );\n    }\n\n    function safeTransfer(\n        address _token,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address _token,\n        address _from,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address _to, uint256 _value) internal {\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"},"contracts/SyncswapClassicDEXIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"./libraries/TransferHelper.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IDEXIntegration.sol\";\nimport \"./interfaces/external/ISyncswapFactory.sol\";\nimport \"./interfaces/external/ISyncswapPool.sol\";\nimport \"./base/Lockable.sol\";\n\ncontract SyncswapClassicDEXIntegration is IDEXIntegration, Lockable {\n    address public immutable factory;\n\n    constructor(address _factory) {\n        factory = _factory;\n    }\n\n    function _getPair(\n        address _tokenIn,\n        address _tokenOut\n    ) internal view returns (address) {\n        return ISyncswapFactory(factory).getPool(_tokenIn, _tokenOut);\n    }\n\n    function validatePair(\n        address _tokenIn,\n        address _tokenOut\n    ) external view override returns (bool) {\n        if (_tokenIn == _tokenOut) {\n            return false;\n        }\n        address pool = _getPair(_tokenIn, _tokenOut);\n        if (pool != address(0)) {\n            return true;\n        }\n        return false;\n    }\n\n    function _getAmountOut(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) internal view returns (uint256 amountOut) {\n        address pool = _getPair(_tokenIn, _tokenOut);\n        if (pool != address(0)) {\n            amountOut = ISyncswapPool(pool).getAmountOut(\n                _tokenIn,\n                _amountIn,\n                address(this)\n            );\n        }\n    }\n\n    function _getAmountIn(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) internal view returns (uint256 amountIn) {\n        address pool = _getPair(_tokenIn, _tokenOut);\n        if (pool != address(0)) {\n            amountIn = ISyncswapPool(pool).getAmountIn(\n                _tokenOut,\n                _amountOut,\n                address(this)\n            );\n        }\n    }\n\n    function getAmountOut(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) external view override returns (uint256 amountOut) {\n        amountOut = _getAmountOut(_tokenIn, _tokenOut, _amountIn);\n    }\n\n    function getAmountIn(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) external view override returns (uint256 amountIn) {\n        amountIn = _getAmountIn(_tokenIn, _tokenOut, _amountOut);\n    }\n\n    function swap(\n        address _tokenIn,\n        address _tokenOut,\n        address _to\n    ) external override lock returns (uint256 amountOut) {\n        uint256 amountIn = IERC20(_tokenIn).balanceOf(address(this));\n        amountOut = _getAmountOut(_tokenIn, _tokenOut, amountIn);\n        require(\n            amountOut > 0,\n            \"SyncswapClassicIntegration: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        address pair = _getPair(_tokenIn, _tokenOut);\n        require(pair != address(0), \"SyncswapClassicIntegration: INVALID_PAIR\");\n        TransferHelper.safeTransfer(_tokenIn, pair, amountIn);\n\n        uint256 initialBalance = IERC20(_tokenOut).balanceOf(_to);\n        bytes memory data = abi.encode(_tokenIn, _to, 2);\n        ISyncswapPool(pair).swap(data, msg.sender, address(0), \"\");\n\n        uint256 balance = IERC20(_tokenOut).balanceOf(_to);\n        amountOut = balance - initialBalance;\n    }\n}\n"},"contracts/SyncswapClassicPriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"./interfaces/IPriceFeedIntegration.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/external/ISyncswapFactory.sol\";\nimport \"./interfaces/external/ISyncswapPool.sol\";\n\ncontract SyncswapClassicPriceFeedIntegration is IPriceFeedIntegration {\n    uint256 public constant override PRECISION = 1e30;\n    address public immutable factory;\n\n    constructor(address _factory) {\n        factory = _factory;\n    }\n\n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view override returns (uint256 price) {\n        if (_baseToken == _quoteToken) {\n            return PRECISION;\n        }\n\n        address pool = ISyncswapFactory(factory).getPool(\n            _baseToken,\n            _quoteToken\n        );\n        if (pool != address(0)) {\n            address token0 = ISyncswapPool(pool).token0();\n            (uint256 reserve0, uint256 reserve1) = ISyncswapPool(pool)\n                .getReserves();\n            (uint256 baseReserve, uint256 quoteReserve) = _baseToken == token0\n                ? (reserve0, reserve1)\n                : (reserve1, reserve0);\n            price = (quoteReserve * PRECISION) / baseReserve;\n        }\n\n        uint256 baseDecimals = IERC20(_baseToken).decimals();\n        uint256 quoteDecimals = IERC20(_quoteToken).decimals();\n        uint256 basePrec = 10 ** baseDecimals;\n        uint256 quotePrec = 10 ** quoteDecimals;\n        price = (price * basePrec) / quotePrec;\n    }\n}\n"},"contracts/SyncswapStablePriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"./interfaces/IPriceFeedIntegration.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/external/ISyncswapFactory.sol\";\nimport \"./interfaces/external/ISyncswapPool.sol\";\n\ncontract SyncswapStablePriceFeedIntegration is IPriceFeedIntegration {\n    uint256 public constant override PRECISION = 1e30;\n    address public immutable factory;\n\n    constructor(address _factory) {\n        factory = _factory;\n    }\n\n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view override returns (uint256 price) {\n        if (_baseToken == _quoteToken) {\n            return PRECISION;\n        }\n\n        address pool = ISyncswapFactory(factory).getPool(\n            _baseToken,\n            _quoteToken\n        );\n        if (pool != address(0)) {\n            uint24 swapFee = ISyncswapPool(pool).getSwapFee(\n                msg.sender,\n                _baseToken,\n                _quoteToken,\n                \"\"\n            );\n            uint256 amountIn = 100000;\n            uint256 amountOut = ISyncswapPool(pool).getAmountOut(\n                _baseToken,\n                amountIn,\n                msg.sender\n            );\n            amountOut = (amountOut * (100000 + swapFee)) / 100000;\n            price = (amountOut * PRECISION) / amountIn;\n        }\n\n        uint256 baseDecimals = IERC20(_baseToken).decimals();\n        uint256 quoteDecimals = IERC20(_quoteToken).decimals();\n        uint256 basePrec = 10 ** baseDecimals;\n        uint256 quotePrec = 10 ** quoteDecimals;\n        price = (price * basePrec) / quotePrec;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[82]},"id":83,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"71:163:0","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":82,"linearizedBaseContracts":[82],"name":"IUniswapV3Factory","nameLocation":"244:17:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"268:185:0","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"id":9,"name":"OwnerChanged","nameLocation":"464:12:0","nodeType":"EventDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"oldOwner","nameLocation":"493:8:0","nodeType":"VariableDeclaration","scope":9,"src":"477:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"519:8:0","nodeType":"VariableDeclaration","scope":9,"src":"503:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:0"},"src":"458:71:0"},{"anonymous":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"535:421:0","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"id":22,"name":"PoolCreated","nameLocation":"967:11:0","nodeType":"EventDefinition","parameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1004:6:0","nodeType":"VariableDeclaration","scope":22,"src":"988:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1036:6:0","nodeType":"VariableDeclaration","scope":22,"src":"1020:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1067:3:0","nodeType":"VariableDeclaration","scope":22,"src":"1052:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":15,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"1086:11:0","nodeType":"VariableDeclaration","scope":22,"src":"1080:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":17,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":20,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1115:4:0","nodeType":"VariableDeclaration","scope":22,"src":"1107:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:0"},"src":"961:165:0"},{"anonymous":false,"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"1132:275:0","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"id":29,"name":"FeeAmountEnabled","nameLocation":"1418:16:0","nodeType":"EventDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1450:3:0","nodeType":"VariableDeclaration","scope":29,"src":"1435:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":24,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":27,"indexed":true,"mutability":"mutable","name":"tickSpacing","nameLocation":"1469:11:0","nodeType":"VariableDeclaration","scope":29,"src":"1455:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":26,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:0"},"src":"1412:70:0"},{"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"1488:163:0","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":35,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1665:5:0","nodeType":"FunctionDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1670:2:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35,"src":"1696:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:0"},"scope":82,"src":"1656:49:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1711:348:0","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":43,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nameLocation":"2073:20:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"fee","nameLocation":"2101:3:0","nodeType":"VariableDeclaration","scope":43,"src":"2094:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":37,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:0"},"returnParameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43,"src":"2129:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":40,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:0"},"scope":82,"src":"2064:72:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"2142:471:0","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":55,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2627:7:0","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"tokenA","nameLocation":"2652:6:0","nodeType":"VariableDeclaration","scope":55,"src":"2644:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"tokenB","nameLocation":"2676:6:0","nodeType":"VariableDeclaration","scope":55,"src":"2668:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"fee","nameLocation":"2699:3:0","nodeType":"VariableDeclaration","scope":55,"src":"2692:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"pool","nameLocation":"2740:4:0","nodeType":"VariableDeclaration","scope":55,"src":"2732:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:0"},"scope":82,"src":"2618:128:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"2752:554:0","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":67,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3320:10:0","nodeType":"FunctionDefinition","parameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"tokenA","nameLocation":"3348:6:0","nodeType":"VariableDeclaration","scope":67,"src":"3340:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"tokenB","nameLocation":"3372:6:0","nodeType":"VariableDeclaration","scope":67,"src":"3364:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":62,"mutability":"mutable","name":"fee","nameLocation":"3395:3:0","nodeType":"VariableDeclaration","scope":67,"src":"3388:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:0"},"returnParameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"pool","nameLocation":"3431:4:0","nodeType":"VariableDeclaration","scope":67,"src":"3423:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:0"},"scope":82,"src":"3311:126:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"3443:144:0","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":73,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"3601:8:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"_owner","nameLocation":"3618:6:0","nodeType":"VariableDeclaration","scope":73,"src":"3610:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[],"src":"3634:0:0"},"scope":82,"src":"3592:43:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"3641:326:0","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":81,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nameLocation":"3981:15:0","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"fee","nameLocation":"4004:3:0","nodeType":"VariableDeclaration","scope":81,"src":"3997:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":75,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"tickSpacing","nameLocation":"4015:11:0","nodeType":"VariableDeclaration","scope":81,"src":"4009:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":77,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"4036:0:0"},"scope":82,"src":"3972:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":83,"src":"234:3805:0","usedErrors":[]}],"src":"45:3995:0"},"id":0},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","exportedSymbols":{"IUniswapV3Pool":[104],"IUniswapV3PoolActions":[200],"IUniswapV3PoolDerivedState":[231],"IUniswapV3PoolEvents":[350],"IUniswapV3PoolImmutables":[390],"IUniswapV3PoolOwnerActions":[416],"IUniswapV3PoolState":[524]},"id":105,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":84,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:1"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","file":"./pool/IUniswapV3PoolImmutables.sol","id":85,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":391,"src":"71:45:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","file":"./pool/IUniswapV3PoolState.sol","id":86,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":525,"src":"117:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","file":"./pool/IUniswapV3PoolDerivedState.sol","id":87,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":232,"src":"158:47:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","file":"./pool/IUniswapV3PoolActions.sol","id":88,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":201,"src":"206:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","file":"./pool/IUniswapV3PoolOwnerActions.sol","id":89,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":417,"src":"249:47:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","file":"./pool/IUniswapV3PoolEvents.sol","id":90,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":351,"src":"297:41:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":92,"name":"IUniswapV3PoolImmutables","nodeType":"IdentifierPath","referencedDeclaration":390,"src":"637:24:1"},"id":93,"nodeType":"InheritanceSpecifier","src":"637:24:1"},{"baseName":{"id":94,"name":"IUniswapV3PoolState","nodeType":"IdentifierPath","referencedDeclaration":524,"src":"667:19:1"},"id":95,"nodeType":"InheritanceSpecifier","src":"667:19:1"},{"baseName":{"id":96,"name":"IUniswapV3PoolDerivedState","nodeType":"IdentifierPath","referencedDeclaration":231,"src":"692:26:1"},"id":97,"nodeType":"InheritanceSpecifier","src":"692:26:1"},{"baseName":{"id":98,"name":"IUniswapV3PoolActions","nodeType":"IdentifierPath","referencedDeclaration":200,"src":"724:21:1"},"id":99,"nodeType":"InheritanceSpecifier","src":"724:21:1"},{"baseName":{"id":100,"name":"IUniswapV3PoolOwnerActions","nodeType":"IdentifierPath","referencedDeclaration":416,"src":"751:26:1"},"id":101,"nodeType":"InheritanceSpecifier","src":"751:26:1"},{"baseName":{"id":102,"name":"IUniswapV3PoolEvents","nodeType":"IdentifierPath","referencedDeclaration":350,"src":"783:20:1"},"id":103,"nodeType":"InheritanceSpecifier","src":"783:20:1"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"340:265:1","text":"@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"},"fullyImplemented":false,"id":104,"linearizedBaseContracts":[104,350,416,200,231,524,390],"name":"IUniswapV3Pool","nameLocation":"615:14:1","nodeType":"ContractDefinition","nodes":[],"scope":105,"src":"605:203:1","usedErrors":[]}],"src":"45:764:1"},"id":1},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","exportedSymbols":{"IUniswapV3PoolActions":[200]},"id":201,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":106,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"71:102:2","text":"@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"},"fullyImplemented":false,"id":200,"linearizedBaseContracts":[200],"name":"IUniswapV3PoolActions","nameLocation":"183:21:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"211:206:2","text":"@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"},"functionSelector":"f637731d","id":113,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"431:10:2","nodeType":"FunctionDefinition","parameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"450:12:2","nodeType":"VariableDeclaration","scope":113,"src":"442:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":109,"name":"uint160","nodeType":"ElementaryTypeName","src":"442:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"441:22:2"},"returnParameters":{"id":112,"nodeType":"ParameterList","parameters":[],"src":"472:0:2"},"scope":200,"src":"422:51:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":114,"nodeType":"StructuredDocumentation","src":"479:1029:2","text":"@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"},"functionSelector":"3c8a7d8d","id":131,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1522:4:2","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"recipient","nameLocation":"1544:9:2","nodeType":"VariableDeclaration","scope":131,"src":"1536:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"tickLower","nameLocation":"1569:9:2","nodeType":"VariableDeclaration","scope":131,"src":"1563:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":117,"name":"int24","nodeType":"ElementaryTypeName","src":"1563:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"tickUpper","nameLocation":"1594:9:2","nodeType":"VariableDeclaration","scope":131,"src":"1588:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":119,"name":"int24","nodeType":"ElementaryTypeName","src":"1588:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"amount","nameLocation":"1621:6:2","nodeType":"VariableDeclaration","scope":131,"src":"1613:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":121,"name":"uint128","nodeType":"ElementaryTypeName","src":"1613:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"data","nameLocation":"1652:4:2","nodeType":"VariableDeclaration","scope":131,"src":"1637:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":123,"name":"bytes","nodeType":"ElementaryTypeName","src":"1637:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1526:136:2"},"returnParameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"amount0","nameLocation":"1689:7:2","nodeType":"VariableDeclaration","scope":131,"src":"1681:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"amount1","nameLocation":"1706:7:2","nodeType":"VariableDeclaration","scope":131,"src":"1698:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1680:34:2"},"scope":200,"src":"1513:202:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1721:1053:2","text":"@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"4f1eb3d8","id":149,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nameLocation":"2788:7:2","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"recipient","nameLocation":"2813:9:2","nodeType":"VariableDeclaration","scope":149,"src":"2805:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"tickLower","nameLocation":"2838:9:2","nodeType":"VariableDeclaration","scope":149,"src":"2832:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":135,"name":"int24","nodeType":"ElementaryTypeName","src":"2832:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":138,"mutability":"mutable","name":"tickUpper","nameLocation":"2863:9:2","nodeType":"VariableDeclaration","scope":149,"src":"2857:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":137,"name":"int24","nodeType":"ElementaryTypeName","src":"2857:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"amount0Requested","nameLocation":"2890:16:2","nodeType":"VariableDeclaration","scope":149,"src":"2882:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":139,"name":"uint128","nodeType":"ElementaryTypeName","src":"2882:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"amount1Requested","nameLocation":"2924:16:2","nodeType":"VariableDeclaration","scope":149,"src":"2916:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":141,"name":"uint128","nodeType":"ElementaryTypeName","src":"2916:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2795:151:2"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"amount0","nameLocation":"2973:7:2","nodeType":"VariableDeclaration","scope":149,"src":"2965:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":144,"name":"uint128","nodeType":"ElementaryTypeName","src":"2965:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"amount1","nameLocation":"2990:7:2","nodeType":"VariableDeclaration","scope":149,"src":"2982:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":146,"name":"uint128","nodeType":"ElementaryTypeName","src":"2982:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2964:34:2"},"scope":200,"src":"2779:220:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"3005:631:2","text":"@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"},"functionSelector":"a34123a7","id":163,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"3650:4:2","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"tickLower","nameLocation":"3670:9:2","nodeType":"VariableDeclaration","scope":163,"src":"3664:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":151,"name":"int24","nodeType":"ElementaryTypeName","src":"3664:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"tickUpper","nameLocation":"3695:9:2","nodeType":"VariableDeclaration","scope":163,"src":"3689:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":153,"name":"int24","nodeType":"ElementaryTypeName","src":"3689:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"amount","nameLocation":"3722:6:2","nodeType":"VariableDeclaration","scope":163,"src":"3714:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":155,"name":"uint128","nodeType":"ElementaryTypeName","src":"3714:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3654:80:2"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"amount0","nameLocation":"3761:7:2","nodeType":"VariableDeclaration","scope":163,"src":"3753:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3753:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"amount1","nameLocation":"3778:7:2","nodeType":"VariableDeclaration","scope":163,"src":"3770:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3752:34:2"},"scope":200,"src":"3641:146:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"3793:1015:2","text":"@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"},"functionSelector":"128acb08","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"4822:4:2","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"recipient","nameLocation":"4844:9:2","nodeType":"VariableDeclaration","scope":181,"src":"4836:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"zeroForOne","nameLocation":"4868:10:2","nodeType":"VariableDeclaration","scope":181,"src":"4863:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":167,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"amountSpecified","nameLocation":"4895:15:2","nodeType":"VariableDeclaration","scope":181,"src":"4888:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":169,"name":"int256","nodeType":"ElementaryTypeName","src":"4888:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"4928:17:2","nodeType":"VariableDeclaration","scope":181,"src":"4920:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":171,"name":"uint160","nodeType":"ElementaryTypeName","src":"4920:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"data","nameLocation":"4970:4:2","nodeType":"VariableDeclaration","scope":181,"src":"4955:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":173,"name":"bytes","nodeType":"ElementaryTypeName","src":"4955:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4826:154:2"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"amount0","nameLocation":"5006:7:2","nodeType":"VariableDeclaration","scope":181,"src":"4999:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":176,"name":"int256","nodeType":"ElementaryTypeName","src":"4999:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"amount1","nameLocation":"5022:7:2","nodeType":"VariableDeclaration","scope":181,"src":"5015:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":178,"name":"int256","nodeType":"ElementaryTypeName","src":"5015:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4998:32:2"},"scope":200,"src":"4813:218:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"5037:657:2","text":"@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"},"functionSelector":"490e6cbc","id":193,"implemented":false,"kind":"function","modifiers":[],"name":"flash","nameLocation":"5708:5:2","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"recipient","nameLocation":"5731:9:2","nodeType":"VariableDeclaration","scope":193,"src":"5723:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"5723:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"amount0","nameLocation":"5758:7:2","nodeType":"VariableDeclaration","scope":193,"src":"5750:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"amount1","nameLocation":"5783:7:2","nodeType":"VariableDeclaration","scope":193,"src":"5775:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"5775:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"data","nameLocation":"5815:4:2","nodeType":"VariableDeclaration","scope":193,"src":"5800:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":189,"name":"bytes","nodeType":"ElementaryTypeName","src":"5800:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5713:112:2"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"5834:0:2"},"scope":200,"src":"5699:136:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"5841:367:2","text":"@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"},"functionSelector":"32148f67","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"increaseObservationCardinalityNext","nameLocation":"6222:34:2","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"6264:26:2","nodeType":"VariableDeclaration","scope":199,"src":"6257:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":195,"name":"uint16","nodeType":"ElementaryTypeName","src":"6257:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6256:35:2"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"6300:0:2"},"scope":200,"src":"6213:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":201,"src":"173:6130:2","usedErrors":[]}],"src":"45:6259:2"},"id":2},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","exportedSymbols":{"IUniswapV3PoolDerivedState":[231]},"id":232,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":202,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"71:222:3","text":"@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."},"fullyImplemented":false,"id":231,"linearizedBaseContracts":[231],"name":"IUniswapV3PoolDerivedState","nameLocation":"303:26:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"336:1045:3","text":"@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"},"functionSelector":"883bdbfd","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"observe","nameLocation":"1395:7:3","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"secondsAgos","nameLocation":"1421:11:3","nodeType":"VariableDeclaration","scope":216,"src":"1403:29:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":205,"name":"uint32","nodeType":"ElementaryTypeName","src":"1403:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":206,"nodeType":"ArrayTypeName","src":"1403:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"}],"src":"1402:31:3"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"tickCumulatives","nameLocation":"1496:15:3","nodeType":"VariableDeclaration","scope":216,"src":"1481:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[]"},"typeName":{"baseType":{"id":209,"name":"int56","nodeType":"ElementaryTypeName","src":"1481:5:3","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":210,"nodeType":"ArrayTypeName","src":"1481:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128s","nameLocation":"1530:34:3","nodeType":"VariableDeclaration","scope":216,"src":"1513:51:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[]"},"typeName":{"baseType":{"id":212,"name":"uint160","nodeType":"ElementaryTypeName","src":"1513:7:3","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":213,"nodeType":"ArrayTypeName","src":"1513:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}},"visibility":"internal"}],"src":"1480:85:3"},"scope":231,"src":"1386:180:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"1572:771:3","text":"@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"},"functionSelector":"a38807f2","id":230,"implemented":false,"kind":"function","modifiers":[],"name":"snapshotCumulativesInside","nameLocation":"2357:25:3","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"tickLower","nameLocation":"2389:9:3","nodeType":"VariableDeclaration","scope":230,"src":"2383:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":218,"name":"int24","nodeType":"ElementaryTypeName","src":"2383:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"tickUpper","nameLocation":"2406:9:3","nodeType":"VariableDeclaration","scope":230,"src":"2400:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":220,"name":"int24","nodeType":"ElementaryTypeName","src":"2400:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2382:34:3"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"tickCumulativeInside","nameLocation":"2483:20:3","nodeType":"VariableDeclaration","scope":230,"src":"2477:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":223,"name":"int56","nodeType":"ElementaryTypeName","src":"2477:5:3","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"secondsPerLiquidityInsideX128","nameLocation":"2525:29:3","nodeType":"VariableDeclaration","scope":230,"src":"2517:37:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":225,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:3","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"secondsInside","nameLocation":"2575:13:3","nodeType":"VariableDeclaration","scope":230,"src":"2568:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":227,"name":"uint32","nodeType":"ElementaryTypeName","src":"2568:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2463:135:3"},"scope":231,"src":"2348:251:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":232,"src":"293:2308:3","usedErrors":[]}],"src":"45:2557:3"},"id":3},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","exportedSymbols":{"IUniswapV3PoolEvents":[350]},"id":351,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":233,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"71:88:4","text":"@title Events emitted by a pool\n @notice Contains all events emitted by the pool"},"fullyImplemented":true,"id":350,"linearizedBaseContracts":[350],"name":"IUniswapV3PoolEvents","nameLocation":"169:20:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"196:344:4","text":"@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"},"id":241,"name":"Initialize","nameLocation":"551:10:4","nodeType":"EventDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"570:12:4","nodeType":"VariableDeclaration","scope":241,"src":"562:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":236,"name":"uint160","nodeType":"ElementaryTypeName","src":"562:7:4","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":239,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"590:4:4","nodeType":"VariableDeclaration","scope":241,"src":"584:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":238,"name":"int24","nodeType":"ElementaryTypeName","src":"584:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"561:34:4"},"src":"545:51:4"},{"anonymous":false,"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"602:551:4","text":"@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"},"id":258,"name":"Mint","nameLocation":"1164:4:4","nodeType":"EventDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1186:6:4","nodeType":"VariableDeclaration","scope":258,"src":"1178:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1218:5:4","nodeType":"VariableDeclaration","scope":258,"src":"1202:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":248,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1247:9:4","nodeType":"VariableDeclaration","scope":258,"src":"1233:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":247,"name":"int24","nodeType":"ElementaryTypeName","src":"1233:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":250,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"1280:9:4","nodeType":"VariableDeclaration","scope":258,"src":"1266:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":249,"name":"int24","nodeType":"ElementaryTypeName","src":"1266:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1307:6:4","nodeType":"VariableDeclaration","scope":258,"src":"1299:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":251,"name":"uint128","nodeType":"ElementaryTypeName","src":"1299:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1331:7:4","nodeType":"VariableDeclaration","scope":258,"src":"1323:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1356:7:4","nodeType":"VariableDeclaration","scope":258,"src":"1348:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1168:201:4"},"src":"1158:212:4"},{"anonymous":false,"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"1376:493:4","text":"@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"},"id":273,"name":"Collect","nameLocation":"1880:7:4","nodeType":"EventDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1913:5:4","nodeType":"VariableDeclaration","scope":273,"src":"1897:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"1936:9:4","nodeType":"VariableDeclaration","scope":273,"src":"1928:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":265,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1969:9:4","nodeType":"VariableDeclaration","scope":273,"src":"1955:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":264,"name":"int24","nodeType":"ElementaryTypeName","src":"1955:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":267,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2002:9:4","nodeType":"VariableDeclaration","scope":273,"src":"1988:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":266,"name":"int24","nodeType":"ElementaryTypeName","src":"1988:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":269,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2029:7:4","nodeType":"VariableDeclaration","scope":273,"src":"2021:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":268,"name":"uint128","nodeType":"ElementaryTypeName","src":"2021:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":271,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2054:7:4","nodeType":"VariableDeclaration","scope":273,"src":"2046:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":270,"name":"uint128","nodeType":"ElementaryTypeName","src":"2046:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1887:180:4"},"src":"1874:194:4"},{"anonymous":false,"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"2074:523:4","text":"@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"},"id":288,"name":"Burn","nameLocation":"2608:4:4","nodeType":"EventDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2638:5:4","nodeType":"VariableDeclaration","scope":288,"src":"2622:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2622:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":278,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"2667:9:4","nodeType":"VariableDeclaration","scope":288,"src":"2653:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":277,"name":"int24","nodeType":"ElementaryTypeName","src":"2653:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":280,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2700:9:4","nodeType":"VariableDeclaration","scope":288,"src":"2686:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":279,"name":"int24","nodeType":"ElementaryTypeName","src":"2686:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2727:6:4","nodeType":"VariableDeclaration","scope":288,"src":"2719:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":281,"name":"uint128","nodeType":"ElementaryTypeName","src":"2719:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":284,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2751:7:4","nodeType":"VariableDeclaration","scope":288,"src":"2743:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2776:7:4","nodeType":"VariableDeclaration","scope":288,"src":"2768:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:177:4"},"src":"2602:188:4"},{"anonymous":false,"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"2796:600:4","text":"@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"},"id":305,"name":"Swap","nameLocation":"3407:4:4","nodeType":"EventDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3437:6:4","nodeType":"VariableDeclaration","scope":305,"src":"3421:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"3421:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":293,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3469:9:4","nodeType":"VariableDeclaration","scope":305,"src":"3453:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"3453:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"3495:7:4","nodeType":"VariableDeclaration","scope":305,"src":"3488:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":294,"name":"int256","nodeType":"ElementaryTypeName","src":"3488:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":297,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"3519:7:4","nodeType":"VariableDeclaration","scope":305,"src":"3512:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":296,"name":"int256","nodeType":"ElementaryTypeName","src":"3512:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":299,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"3544:12:4","nodeType":"VariableDeclaration","scope":305,"src":"3536:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":298,"name":"uint160","nodeType":"ElementaryTypeName","src":"3536:7:4","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":301,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"3574:9:4","nodeType":"VariableDeclaration","scope":305,"src":"3566:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":300,"name":"uint128","nodeType":"ElementaryTypeName","src":"3566:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":303,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"3599:4:4","nodeType":"VariableDeclaration","scope":305,"src":"3593:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":302,"name":"int24","nodeType":"ElementaryTypeName","src":"3593:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3411:198:4"},"src":"3401:209:4"},{"anonymous":false,"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"3616:562:4","text":"@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"},"id":320,"name":"Flash","nameLocation":"4189:5:4","nodeType":"EventDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4220:6:4","nodeType":"VariableDeclaration","scope":320,"src":"4204:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":310,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4252:9:4","nodeType":"VariableDeclaration","scope":320,"src":"4236:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"4279:7:4","nodeType":"VariableDeclaration","scope":320,"src":"4271:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"4271:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"4304:7:4","nodeType":"VariableDeclaration","scope":320,"src":"4296:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4296:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":false,"mutability":"mutable","name":"paid0","nameLocation":"4329:5:4","nodeType":"VariableDeclaration","scope":320,"src":"4321:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"indexed":false,"mutability":"mutable","name":"paid1","nameLocation":"4352:5:4","nodeType":"VariableDeclaration","scope":320,"src":"4344:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4194:169:4"},"src":"4183:181:4"},{"anonymous":false,"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"4370:451:4","text":"@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"},"id":327,"name":"IncreaseObservationCardinalityNext","nameLocation":"4832:34:4","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextOld","nameLocation":"4883:29:4","nodeType":"VariableDeclaration","scope":327,"src":"4876:36:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":322,"name":"uint16","nodeType":"ElementaryTypeName","src":"4876:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextNew","nameLocation":"4929:29:4","nodeType":"VariableDeclaration","scope":327,"src":"4922:36:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":324,"name":"uint16","nodeType":"ElementaryTypeName","src":"4922:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4866:98:4"},"src":"4826:139:4"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"4971:370:4","text":"@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"},"id":338,"name":"SetFeeProtocol","nameLocation":"5352:14:4","nodeType":"EventDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":false,"mutability":"mutable","name":"feeProtocol0Old","nameLocation":"5373:15:4","nodeType":"VariableDeclaration","scope":338,"src":"5367:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":329,"name":"uint8","nodeType":"ElementaryTypeName","src":"5367:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":false,"mutability":"mutable","name":"feeProtocol1Old","nameLocation":"5396:15:4","nodeType":"VariableDeclaration","scope":338,"src":"5390:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":331,"name":"uint8","nodeType":"ElementaryTypeName","src":"5390:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":false,"mutability":"mutable","name":"feeProtocol0New","nameLocation":"5419:15:4","nodeType":"VariableDeclaration","scope":338,"src":"5413:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":333,"name":"uint8","nodeType":"ElementaryTypeName","src":"5413:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":336,"indexed":false,"mutability":"mutable","name":"feeProtocol1New","nameLocation":"5442:15:4","nodeType":"VariableDeclaration","scope":338,"src":"5436:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":335,"name":"uint8","nodeType":"ElementaryTypeName","src":"5436:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5366:92:4"},"src":"5346:113:4"},{"anonymous":false,"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"5465:384:4","text":"@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"},"id":349,"name":"CollectProtocol","nameLocation":"5860:15:4","nodeType":"EventDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5892:6:4","nodeType":"VariableDeclaration","scope":349,"src":"5876:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"5876:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"5916:9:4","nodeType":"VariableDeclaration","scope":349,"src":"5900:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":345,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"5935:7:4","nodeType":"VariableDeclaration","scope":349,"src":"5927:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":344,"name":"uint128","nodeType":"ElementaryTypeName","src":"5927:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":347,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"5952:7:4","nodeType":"VariableDeclaration","scope":349,"src":"5944:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":346,"name":"uint128","nodeType":"ElementaryTypeName","src":"5944:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5875:85:4"},"src":"5854:107:4"}],"scope":351,"src":"159:5804:4","usedErrors":[]}],"src":"45:5919:4"},"id":4},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","exportedSymbols":{"IUniswapV3PoolImmutables":[390]},"id":391,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":352,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"71:153:5","text":"@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"},"fullyImplemented":false,"id":390,"linearizedBaseContracts":[390],"name":"IUniswapV3PoolImmutables","nameLocation":"234:24:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"265:138:5","text":"@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"},"functionSelector":"c45a0155","id":359,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"417:7:5","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"424:2:5"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":359,"src":"450:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"449:9:5"},"scope":390,"src":"408:51:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"465:113:5","text":"@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"0dfe1681","id":365,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"592:6:5","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"598:2:5"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":365,"src":"624:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"623:9:5"},"scope":390,"src":"583:50:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"639:114:5","text":"@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"d21220a7","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"767:6:5","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[],"src":"773:2:5"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":371,"src":"799:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"798:9:5"},"scope":390,"src":"758:50:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"814:84:5","text":"@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"},"functionSelector":"ddca3f43","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"912:3:5","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"915:2:5"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":377,"src":"941:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":374,"name":"uint24","nodeType":"ElementaryTypeName","src":"941:6:5","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"940:8:5"},"scope":390,"src":"903:46:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"955:358:5","text":"@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"},"functionSelector":"d0c93a7c","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"tickSpacing","nameLocation":"1327:11:5","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"1338:2:5"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"1364:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":380,"name":"int24","nodeType":"ElementaryTypeName","src":"1364:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1363:7:5"},"scope":390,"src":"1318:53:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"1377:363:5","text":"@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"},"functionSelector":"70cf754a","id":389,"implemented":false,"kind":"function","modifiers":[],"name":"maxLiquidityPerTick","nameLocation":"1754:19:5","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"1773:2:5"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":389,"src":"1799:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":386,"name":"uint128","nodeType":"ElementaryTypeName","src":"1799:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1798:9:5"},"scope":390,"src":"1745:63:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":391,"src":"224:1586:5","usedErrors":[]}],"src":"45:1766:5"},"id":5},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","exportedSymbols":{"IUniswapV3PoolOwnerActions":[416]},"id":417,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":392,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"71:116:6","text":"@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"},"fullyImplemented":false,"id":416,"linearizedBaseContracts":[416],"name":"IUniswapV3PoolOwnerActions","nameLocation":"197:26:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"230:205:6","text":"@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"},"functionSelector":"8206a4d1","id":401,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeProtocol","nameLocation":"449:14:6","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"feeProtocol0","nameLocation":"470:12:6","nodeType":"VariableDeclaration","scope":401,"src":"464:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":395,"name":"uint8","nodeType":"ElementaryTypeName","src":"464:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"feeProtocol1","nameLocation":"490:12:6","nodeType":"VariableDeclaration","scope":401,"src":"484:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":397,"name":"uint8","nodeType":"ElementaryTypeName","src":"484:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"463:40:6"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"512:0:6"},"scope":416,"src":"440:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"519:483:6","text":"@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"},"functionSelector":"85b66729","id":415,"implemented":false,"kind":"function","modifiers":[],"name":"collectProtocol","nameLocation":"1016:15:6","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"recipient","nameLocation":"1049:9:6","nodeType":"VariableDeclaration","scope":415,"src":"1041:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"amount0Requested","nameLocation":"1076:16:6","nodeType":"VariableDeclaration","scope":415,"src":"1068:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":405,"name":"uint128","nodeType":"ElementaryTypeName","src":"1068:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"amount1Requested","nameLocation":"1110:16:6","nodeType":"VariableDeclaration","scope":415,"src":"1102:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":407,"name":"uint128","nodeType":"ElementaryTypeName","src":"1102:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1031:101:6"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"amount0","nameLocation":"1159:7:6","nodeType":"VariableDeclaration","scope":415,"src":"1151:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":410,"name":"uint128","nodeType":"ElementaryTypeName","src":"1151:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"amount1","nameLocation":"1176:7:6","nodeType":"VariableDeclaration","scope":415,"src":"1168:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":412,"name":"uint128","nodeType":"ElementaryTypeName","src":"1168:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1150:34:6"},"scope":416,"src":"1007:178:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":417,"src":"187:1000:6","usedErrors":[]}],"src":"45:1143:6"},"id":6},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","exportedSymbols":{"IUniswapV3PoolState":[524]},"id":525,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":418,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"71:169:7","text":"@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"},"fullyImplemented":false,"id":524,"linearizedBaseContracts":[524],"name":"IUniswapV3PoolState","nameLocation":"250:19:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"276:1140:7","text":"@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"},"functionSelector":"3850c7bd","id":437,"implemented":false,"kind":"function","modifiers":[],"name":"slot0","nameLocation":"1430:5:7","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"1435:2:7"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"1506:12:7","nodeType":"VariableDeclaration","scope":437,"src":"1498:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":422,"name":"uint160","nodeType":"ElementaryTypeName","src":"1498:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"tick","nameLocation":"1538:4:7","nodeType":"VariableDeclaration","scope":437,"src":"1532:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":424,"name":"int24","nodeType":"ElementaryTypeName","src":"1532:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"observationIndex","nameLocation":"1563:16:7","nodeType":"VariableDeclaration","scope":437,"src":"1556:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":426,"name":"uint16","nodeType":"ElementaryTypeName","src":"1556:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"observationCardinality","nameLocation":"1600:22:7","nodeType":"VariableDeclaration","scope":437,"src":"1593:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":428,"name":"uint16","nodeType":"ElementaryTypeName","src":"1593:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"1643:26:7","nodeType":"VariableDeclaration","scope":437,"src":"1636:33:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":430,"name":"uint16","nodeType":"ElementaryTypeName","src":"1636:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"feeProtocol","nameLocation":"1689:11:7","nodeType":"VariableDeclaration","scope":437,"src":"1683:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":432,"name":"uint8","nodeType":"ElementaryTypeName","src":"1683:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"unlocked","nameLocation":"1719:8:7","nodeType":"VariableDeclaration","scope":437,"src":"1714:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":434,"name":"bool","nodeType":"ElementaryTypeName","src":"1714:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1484:253:7"},"scope":524,"src":"1421:317:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1744:168:7","text":"@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"f3058399","id":443,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal0X128","nameLocation":"1926:20:7","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1946:2:7"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":443,"src":"1972:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1971:9:7"},"scope":524,"src":"1917:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"1987:168:7","text":"@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"46141319","id":449,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal1X128","nameLocation":"2169:20:7","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"2189:2:7"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"2215:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2215:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2214:9:7"},"scope":524,"src":"2160:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"2230:147:7","text":"@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"},"functionSelector":"1ad8b03b","id":457,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFees","nameLocation":"2391:12:7","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"2403:2:7"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"token0","nameLocation":"2437:6:7","nodeType":"VariableDeclaration","scope":457,"src":"2429:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":452,"name":"uint128","nodeType":"ElementaryTypeName","src":"2429:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"token1","nameLocation":"2453:6:7","nodeType":"VariableDeclaration","scope":457,"src":"2445:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":454,"name":"uint128","nodeType":"ElementaryTypeName","src":"2445:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2428:32:7"},"scope":524,"src":"2382:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"2467:150:7","text":"@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"},"functionSelector":"1a686502","id":463,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"2631:9:7","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"2640:2:7"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"2666:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":460,"name":"uint128","nodeType":"ElementaryTypeName","src":"2666:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2665:9:7"},"scope":524,"src":"2622:53:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"2681:1244:7","text":"@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."},"functionSelector":"f30dba93","id":485,"implemented":false,"kind":"function","modifiers":[],"name":"ticks","nameLocation":"3939:5:7","nodeType":"FunctionDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"tick","nameLocation":"3951:4:7","nodeType":"VariableDeclaration","scope":485,"src":"3945:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":465,"name":"int24","nodeType":"ElementaryTypeName","src":"3945:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3944:12:7"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"liquidityGross","nameLocation":"4025:14:7","nodeType":"VariableDeclaration","scope":485,"src":"4017:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":468,"name":"uint128","nodeType":"ElementaryTypeName","src":"4017:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"liquidityNet","nameLocation":"4060:12:7","nodeType":"VariableDeclaration","scope":485,"src":"4053:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":470,"name":"int128","nodeType":"ElementaryTypeName","src":"4053:6:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"feeGrowthOutside0X128","nameLocation":"4094:21:7","nodeType":"VariableDeclaration","scope":485,"src":"4086:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"4086:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"feeGrowthOutside1X128","nameLocation":"4137:21:7","nodeType":"VariableDeclaration","scope":485,"src":"4129:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"tickCumulativeOutside","nameLocation":"4178:21:7","nodeType":"VariableDeclaration","scope":485,"src":"4172:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":476,"name":"int56","nodeType":"ElementaryTypeName","src":"4172:5:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"secondsPerLiquidityOutsideX128","nameLocation":"4221:30:7","nodeType":"VariableDeclaration","scope":485,"src":"4213:38:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":478,"name":"uint160","nodeType":"ElementaryTypeName","src":"4213:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"secondsOutside","nameLocation":"4272:14:7","nodeType":"VariableDeclaration","scope":485,"src":"4265:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":480,"name":"uint32","nodeType":"ElementaryTypeName","src":"4265:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"initialized","nameLocation":"4305:11:7","nodeType":"VariableDeclaration","scope":485,"src":"4300:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"4300:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4003:323:7"},"scope":524,"src":"3930:397:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"4333:99:7","text":"@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"functionSelector":"5339c296","id":493,"implemented":false,"kind":"function","modifiers":[],"name":"tickBitmap","nameLocation":"4446:10:7","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"wordPosition","nameLocation":"4463:12:7","nodeType":"VariableDeclaration","scope":493,"src":"4457:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":487,"name":"int16","nodeType":"ElementaryTypeName","src":"4457:5:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"4456:20:7"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":493,"src":"4500:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"4500:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:9:7"},"scope":524,"src":"4437:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":494,"nodeType":"StructuredDocumentation","src":"4515:700:7","text":"@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"},"functionSelector":"514ea4bf","id":509,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nameLocation":"5229:9:7","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"key","nameLocation":"5247:3:7","nodeType":"VariableDeclaration","scope":509,"src":"5239:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5239:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5238:13:7"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"_liquidity","nameLocation":"5320:10:7","nodeType":"VariableDeclaration","scope":509,"src":"5312:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":498,"name":"uint128","nodeType":"ElementaryTypeName","src":"5312:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"feeGrowthInside0LastX128","nameLocation":"5352:24:7","nodeType":"VariableDeclaration","scope":509,"src":"5344:32:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"feeGrowthInside1LastX128","nameLocation":"5398:24:7","nodeType":"VariableDeclaration","scope":509,"src":"5390:32:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5390:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"tokensOwed0","nameLocation":"5444:11:7","nodeType":"VariableDeclaration","scope":509,"src":"5436:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":504,"name":"uint128","nodeType":"ElementaryTypeName","src":"5436:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"tokensOwed1","nameLocation":"5477:11:7","nodeType":"VariableDeclaration","scope":509,"src":"5469:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":506,"name":"uint128","nodeType":"ElementaryTypeName","src":"5469:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5298:200:7"},"scope":524,"src":"5220:279:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"5505:749:7","text":"@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"},"functionSelector":"252c09d7","id":523,"implemented":false,"kind":"function","modifiers":[],"name":"observations","nameLocation":"6268:12:7","nodeType":"FunctionDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"index","nameLocation":"6289:5:7","nodeType":"VariableDeclaration","scope":523,"src":"6281:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"6281:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6280:15:7"},"returnParameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"blockTimestamp","nameLocation":"6363:14:7","nodeType":"VariableDeclaration","scope":523,"src":"6356:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":514,"name":"uint32","nodeType":"ElementaryTypeName","src":"6356:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"tickCumulative","nameLocation":"6397:14:7","nodeType":"VariableDeclaration","scope":523,"src":"6391:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":516,"name":"int56","nodeType":"ElementaryTypeName","src":"6391:5:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nameLocation":"6433:33:7","nodeType":"VariableDeclaration","scope":523,"src":"6425:41:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":518,"name":"uint160","nodeType":"ElementaryTypeName","src":"6425:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"initialized","nameLocation":"6485:11:7","nodeType":"VariableDeclaration","scope":523,"src":"6480:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":520,"name":"bool","nodeType":"ElementaryTypeName","src":"6480:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6342:164:7"},"scope":524,"src":"6259:248:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":525,"src":"240:6269:7","usedErrors":[]}],"src":"45:6465:7"},"id":7},"contracts/SyncswapClassicDEXIntegration.sol":{"ast":{"absolutePath":"contracts/SyncswapClassicDEXIntegration.sol","exportedSymbols":{"IDEXIntegration":[1206],"IERC20":[1291],"ISyncswapFactory":[1320],"ISyncswapPool":[1394],"Lockable":[1161],"SyncswapClassicDEXIntegration":[842],"TransferHelper":[1554]},"id":843,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":526,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:8"},{"absolutePath":"contracts/libraries/TransferHelper.sol","file":"./libraries/TransferHelper.sol","id":527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":1555,"src":"71:40:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":1292,"src":"112:33:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDEXIntegration.sol","file":"./interfaces/IDEXIntegration.sol","id":529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":1207,"src":"146:42:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/external/ISyncswapFactory.sol","file":"./interfaces/external/ISyncswapFactory.sol","id":530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":1321,"src":"189:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/external/ISyncswapPool.sol","file":"./interfaces/external/ISyncswapPool.sol","id":531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":1395,"src":"242:49:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/base/Lockable.sol","file":"./base/Lockable.sol","id":532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":1162,"src":"292:29:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":533,"name":"IDEXIntegration","nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"365:15:8"},"id":534,"nodeType":"InheritanceSpecifier","src":"365:15:8"},{"baseName":{"id":535,"name":"Lockable","nodeType":"IdentifierPath","referencedDeclaration":1161,"src":"382:8:8"},"id":536,"nodeType":"InheritanceSpecifier","src":"382:8:8"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":842,"linearizedBaseContracts":[842,1161,1206],"name":"SyncswapClassicDEXIntegration","nameLocation":"332:29:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c45a0155","id":538,"mutability":"immutable","name":"factory","nameLocation":"422:7:8","nodeType":"VariableDeclaration","scope":842,"src":"397:32:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"397:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":547,"nodeType":"Block","src":"466:35:8","statements":[{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":543,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"476:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":544,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"486:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"476:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":546,"nodeType":"ExpressionStatement","src":"476:18:8"}]},"id":548,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"_factory","nameLocation":"456:8:8","nodeType":"VariableDeclaration","scope":548,"src":"448:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"447:18:8"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"466:0:8"},"scope":842,"src":"436:65:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":565,"nodeType":"Block","src":"616:78:8","statements":[{"expression":{"arguments":[{"id":561,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"667:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":562,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"677:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":558,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"650:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":557,"name":"ISyncswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"633:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapFactory_$1320_$","typeString":"type(contract ISyncswapFactory)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"633:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapFactory_$1320","typeString":"contract ISyncswapFactory"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":1319,"src":"633:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"633:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":556,"id":564,"nodeType":"Return","src":"626:61:8"}]},"id":566,"implemented":true,"kind":"function","modifiers":[],"name":"_getPair","nameLocation":"516:8:8","nodeType":"FunctionDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"_tokenIn","nameLocation":"542:8:8","nodeType":"VariableDeclaration","scope":566,"src":"534:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"_tokenOut","nameLocation":"568:9:8","nodeType":"VariableDeclaration","scope":566,"src":"560:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"560:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"524:59:8"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"607:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"607:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"606:9:8"},"scope":842,"src":"507:187:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1172],"body":{"id":602,"nodeType":"Block","src":"819:225:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":576,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"833:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":577,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"845:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"833:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"829:64:8","trueBody":{"id":581,"nodeType":"Block","src":"856:37:8","statements":[{"expression":{"hexValue":"66616c7365","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"877:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":575,"id":580,"nodeType":"Return","src":"870:12:8"}]}},{"assignments":[584],"declarations":[{"constant":false,"id":584,"mutability":"mutable","name":"pool","nameLocation":"910:4:8","nodeType":"VariableDeclaration","scope":602,"src":"902:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":589,"initialValue":{"arguments":[{"id":586,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"926:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"936:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":585,"name":"_getPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"917:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view returns (address)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"917:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"902:44:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":590,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"960:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"976:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"968:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:8","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"968:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"960:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"IfStatement","src":"956:60:8","trueBody":{"id":598,"nodeType":"Block","src":"980:36:8","statements":[{"expression":{"hexValue":"74727565","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1001:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":575,"id":597,"nodeType":"Return","src":"994:11:8"}]}},{"expression":{"hexValue":"66616c7365","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1032:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":575,"id":601,"nodeType":"Return","src":"1025:12:8"}]},"functionSelector":"b88c5f91","id":603,"implemented":true,"kind":"function","modifiers":[],"name":"validatePair","nameLocation":"709:12:8","nodeType":"FunctionDefinition","overrides":{"id":572,"nodeType":"OverrideSpecifier","overrides":[],"src":"795:8:8"},"parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"_tokenIn","nameLocation":"739:8:8","nodeType":"VariableDeclaration","scope":603,"src":"731:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"_tokenOut","nameLocation":"765:9:8","nodeType":"VariableDeclaration","scope":603,"src":"757:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"721:59:8"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":603,"src":"813:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":573,"name":"bool","nodeType":"ElementaryTypeName","src":"813:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"812:6:8"},"scope":842,"src":"700:344:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":643,"nodeType":"Block","src":"1201:261:8","statements":[{"assignments":[615],"declarations":[{"constant":false,"id":615,"mutability":"mutable","name":"pool","nameLocation":"1219:4:8","nodeType":"VariableDeclaration","scope":643,"src":"1211:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":620,"initialValue":{"arguments":[{"id":617,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"1235:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1245:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":616,"name":"_getPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"1226:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view returns (address)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1226:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1211:44:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"1269:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1277:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:8","typeDescriptions":{}}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1277:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1269:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":642,"nodeType":"IfStatement","src":"1265:191:8","trueBody":{"id":641,"nodeType":"Block","src":"1289:167:8","statements":[{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":627,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"1303:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":632,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"1365:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"1391:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":636,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1426:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SyncswapClassicDEXIntegration_$842","typeString":"contract SyncswapClassicDEXIntegration"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SyncswapClassicDEXIntegration_$842","typeString":"contract SyncswapClassicDEXIntegration"}],"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1418:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"1418:7:8","typeDescriptions":{}}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1418:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":629,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"1329:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"ISyncswapPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1315:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapPool_$1394_$","typeString":"type(contract ISyncswapPool)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1315:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapPool_$1394","typeString":"contract ISyncswapPool"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmountOut","nodeType":"MemberAccess","referencedDeclaration":1368,"src":"1315:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,address) view external returns (uint256)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1315:130:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1303:142:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"1303:142:8"}]}}]},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"_getAmountOut","nameLocation":"1059:13:8","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"_tokenIn","nameLocation":"1090:8:8","nodeType":"VariableDeclaration","scope":644,"src":"1082:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"_tokenOut","nameLocation":"1116:9:8","nodeType":"VariableDeclaration","scope":644,"src":"1108:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"1108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"_amountIn","nameLocation":"1143:9:8","nodeType":"VariableDeclaration","scope":644,"src":"1135:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1072:86:8"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"amountOut","nameLocation":"1190:9:8","nodeType":"VariableDeclaration","scope":644,"src":"1182:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1182:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1181:19:8"},"scope":842,"src":"1050:412:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"1618:261:8","statements":[{"assignments":[656],"declarations":[{"constant":false,"id":656,"mutability":"mutable","name":"pool","nameLocation":"1636:4:8","nodeType":"VariableDeclaration","scope":684,"src":"1628:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"1628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":661,"initialValue":{"arguments":[{"id":658,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"1652:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"1662:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":657,"name":"_getPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"1643:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view returns (address)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1643:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1628:44:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":662,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"1686:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1694:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"1694:7:8","typeDescriptions":{}}},"id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1694:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1686:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":683,"nodeType":"IfStatement","src":"1682:191:8","trueBody":{"id":682,"nodeType":"Block","src":"1706:167:8","statements":[{"expression":{"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":668,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"1720:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":673,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"1780:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"1807:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":677,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1843:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SyncswapClassicDEXIntegration_$842","typeString":"contract SyncswapClassicDEXIntegration"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SyncswapClassicDEXIntegration_$842","typeString":"contract SyncswapClassicDEXIntegration"}],"id":676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1835:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:8","typeDescriptions":{}}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1835:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":670,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"1745:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":669,"name":"ISyncswapPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1731:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapPool_$1394_$","typeString":"type(contract ISyncswapPool)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1731:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapPool_$1394","typeString":"contract ISyncswapPool"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmountIn","nodeType":"MemberAccess","referencedDeclaration":1379,"src":"1731:31:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,address) view external returns (uint256)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1731:131:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1720:142:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":681,"nodeType":"ExpressionStatement","src":"1720:142:8"}]}}]},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"_getAmountIn","nameLocation":"1477:12:8","nodeType":"FunctionDefinition","parameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"_tokenIn","nameLocation":"1507:8:8","nodeType":"VariableDeclaration","scope":685,"src":"1499:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"1499:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"_tokenOut","nameLocation":"1533:9:8","nodeType":"VariableDeclaration","scope":685,"src":"1525:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"_amountOut","nameLocation":"1560:10:8","nodeType":"VariableDeclaration","scope":685,"src":"1552:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1489:87:8"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"amountIn","nameLocation":"1608:8:8","nodeType":"VariableDeclaration","scope":685,"src":"1600:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1599:18:8"},"scope":842,"src":"1468:411:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1183],"body":{"id":705,"nodeType":"Block","src":"2044:74:8","statements":[{"expression":{"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":697,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"2054:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":699,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2080:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"2090:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"2101:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"name":"_getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"2066:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2066:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2054:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":704,"nodeType":"ExpressionStatement","src":"2054:57:8"}]},"functionSelector":"4aa06652","id":706,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"1894:12:8","nodeType":"FunctionDefinition","overrides":{"id":693,"nodeType":"OverrideSpecifier","overrides":[],"src":"2007:8:8"},"parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"_tokenIn","nameLocation":"1924:8:8","nodeType":"VariableDeclaration","scope":706,"src":"1916:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"1916:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"_tokenOut","nameLocation":"1950:9:8","nodeType":"VariableDeclaration","scope":706,"src":"1942:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1942:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"_amountIn","nameLocation":"1977:9:8","nodeType":"VariableDeclaration","scope":706,"src":"1969:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1969:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1906:86:8"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"amountOut","nameLocation":"2033:9:8","nodeType":"VariableDeclaration","scope":706,"src":"2025:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2025:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2024:19:8"},"scope":842,"src":"1885:233:8","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1194],"body":{"id":726,"nodeType":"Block","src":"2282:73:8","statements":[{"expression":{"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":718,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"2292:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":720,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2316:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"2326:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2337:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":719,"name":"_getAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2303:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2292:56:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":725,"nodeType":"ExpressionStatement","src":"2292:56:8"}]},"functionSelector":"53b609b5","id":727,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"2133:11:8","nodeType":"FunctionDefinition","overrides":{"id":714,"nodeType":"OverrideSpecifier","overrides":[],"src":"2246:8:8"},"parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"_tokenIn","nameLocation":"2162:8:8","nodeType":"VariableDeclaration","scope":727,"src":"2154:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"_tokenOut","nameLocation":"2188:9:8","nodeType":"VariableDeclaration","scope":727,"src":"2180:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"_amountOut","nameLocation":"2215:10:8","nodeType":"VariableDeclaration","scope":727,"src":"2207:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2144:87:8"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"amountIn","nameLocation":"2272:8:8","nodeType":"VariableDeclaration","scope":727,"src":"2264:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:18:8"},"scope":842,"src":"2124:231:8","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1205],"body":{"id":840,"nodeType":"Block","src":"2506:766:8","statements":[{"assignments":[742],"declarations":[{"constant":false,"id":742,"mutability":"mutable","name":"amountIn","nameLocation":"2524:8:8","nodeType":"VariableDeclaration","scope":840,"src":"2516:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"2516:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":752,"initialValue":{"arguments":[{"arguments":[{"id":749,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2570:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SyncswapClassicDEXIntegration_$842","typeString":"contract SyncswapClassicDEXIntegration"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SyncswapClassicDEXIntegration_$842","typeString":"contract SyncswapClassicDEXIntegration"}],"id":748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2562:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"2562:7:8","typeDescriptions":{}}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2562:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":744,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2542:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2535:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1291_$","typeString":"type(contract IERC20)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2535:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1291","typeString":"contract IERC20"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"2535:26:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2535:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2516:60:8"},{"expression":{"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":753,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"2586:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":755,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2612:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2622:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":757,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2633:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":754,"name":"_getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"2598:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2598:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2586:56:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ExpressionStatement","src":"2586:56:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"2673:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2685:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2673:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e6373776170436c6173736963496e746567726174696f6e3a20494e53554646494349454e545f4f55545055545f414d4f554e54","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2700:56:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_326e418174ed41afe1047de774986812b8438b4cd50895c151d78d4d29e87e3b","typeString":"literal_string \"SyncswapClassicIntegration: INSUFFICIENT_OUTPUT_AMOUNT\""},"value":"SyncswapClassicIntegration: INSUFFICIENT_OUTPUT_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_326e418174ed41afe1047de774986812b8438b4cd50895c151d78d4d29e87e3b","typeString":"literal_string \"SyncswapClassicIntegration: INSUFFICIENT_OUTPUT_AMOUNT\""}],"id":761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2652:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2652:114:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"ExpressionStatement","src":"2652:114:8"},{"assignments":[769],"declarations":[{"constant":false,"id":769,"mutability":"mutable","name":"pair","nameLocation":"2784:4:8","nodeType":"VariableDeclaration","scope":840,"src":"2776:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2776:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":774,"initialValue":{"arguments":[{"id":771,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2800:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2810:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":770,"name":"_getPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2791:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view returns (address)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2791:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2776:44:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":776,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"2838:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2854:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2846:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:8","typeDescriptions":{}}},"id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2846:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2838:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e6373776170436c6173736963496e746567726174696f6e3a20494e56414c49445f50414952","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2858:42:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_242e54d8e0a6f1ffa9816b6b145be3b6631dbcb1a44d02c3fbf29e990c24e561","typeString":"literal_string \"SyncswapClassicIntegration: INVALID_PAIR\""},"value":"SyncswapClassicIntegration: INVALID_PAIR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_242e54d8e0a6f1ffa9816b6b145be3b6631dbcb1a44d02c3fbf29e990c24e561","typeString":"literal_string \"SyncswapClassicIntegration: INVALID_PAIR\""}],"id":775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2830:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2830:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"2830:71:8"},{"expression":{"arguments":[{"id":788,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2939:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"2949:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2955:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":785,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2911:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$1554_$","typeString":"type(library TransferHelper)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1482,"src":"2911:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2911:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"2911:53:8"},{"assignments":[794],"declarations":[{"constant":false,"id":794,"mutability":"mutable","name":"initialBalance","nameLocation":"2983:14:8","nodeType":"VariableDeclaration","scope":840,"src":"2975:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2975:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"id":799,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"3028:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":796,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"3007:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":795,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"3000:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1291_$","typeString":"type(contract IERC20)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3000:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1291","typeString":"contract IERC20"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"3000:27:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3000:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2975:57:8"},{"assignments":[803],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"data","nameLocation":"3055:4:8","nodeType":"VariableDeclaration","scope":840,"src":"3042:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":802,"name":"bytes","nodeType":"ElementaryTypeName","src":"3042:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":810,"initialValue":{"arguments":[{"id":806,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"3073:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"3083:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"32","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3088:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"id":804,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3062:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3062:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3062:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3042:48:8"},{"expression":{"arguments":[{"id":815,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3125:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3131:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3131:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3151:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3143:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:8","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3143:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3155:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":812,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3114:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":811,"name":"ISyncswapPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"3100:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapPool_$1394_$","typeString":"type(contract ISyncswapPool)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3100:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapPool_$1394","typeString":"contract ISyncswapPool"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"3100:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_TokenAmount_$1327_memory_ptr_$","typeString":"function (bytes memory,address,address,bytes memory) external returns (struct ISyncswapPool.TokenAmount memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3100:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenAmount_$1327_memory_ptr","typeString":"struct ISyncswapPool.TokenAmount memory"}},"id":824,"nodeType":"ExpressionStatement","src":"3100:58:8"},{"assignments":[826],"declarations":[{"constant":false,"id":826,"mutability":"mutable","name":"balance","nameLocation":"3177:7:8","nodeType":"VariableDeclaration","scope":840,"src":"3169:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":833,"initialValue":{"arguments":[{"id":831,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"3215:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":828,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"3194:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":827,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"3187:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1291_$","typeString":"type(contract IERC20)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3187:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1291","typeString":"contract IERC20"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"3187:27:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3187:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3169:50:8"},{"expression":{"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":834,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"3229:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":835,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"3241:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":836,"name":"initialBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3251:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3241:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3229:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":839,"nodeType":"ExpressionStatement","src":"3229:36:8"}]},"functionSelector":"93316212","id":841,"implemented":true,"kind":"function","modifiers":[{"id":737,"kind":"modifierInvocation","modifierName":{"id":736,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":1160,"src":"2473:4:8"},"nodeType":"ModifierInvocation","src":"2473:4:8"}],"name":"swap","nameLocation":"2370:4:8","nodeType":"FunctionDefinition","overrides":{"id":735,"nodeType":"OverrideSpecifier","overrides":[],"src":"2464:8:8"},"parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"_tokenIn","nameLocation":"2392:8:8","nodeType":"VariableDeclaration","scope":841,"src":"2384:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"2384:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"_tokenOut","nameLocation":"2418:9:8","nodeType":"VariableDeclaration","scope":841,"src":"2410:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"2410:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"_to","nameLocation":"2445:3:8","nodeType":"VariableDeclaration","scope":841,"src":"2437:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"2437:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2374:80:8"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"amountOut","nameLocation":"2495:9:8","nodeType":"VariableDeclaration","scope":841,"src":"2487:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2486:19:8"},"scope":842,"src":"2361:911:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":843,"src":"323:2951:8","usedErrors":[1141]}],"src":"45:3230:8"},"id":8},"contracts/SyncswapClassicPriceFeedIntegration.sol":{"ast":{"absolutePath":"contracts/SyncswapClassicPriceFeedIntegration.sol","exportedSymbols":{"IERC20":[1291],"IPriceFeedIntegration":[1308],"ISyncswapFactory":[1320],"ISyncswapPool":[1394],"IUniswapV3Factory":[82],"IUniswapV3Pool":[104],"IUniswapV3PoolActions":[200],"IUniswapV3PoolDerivedState":[231],"IUniswapV3PoolEvents":[350],"IUniswapV3PoolImmutables":[390],"IUniswapV3PoolOwnerActions":[416],"IUniswapV3PoolState":[524],"SyncswapClassicPriceFeedIntegration":[984]},"id":985,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":844,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:9"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":985,"sourceUnit":83,"src":"71:69:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","id":846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":985,"sourceUnit":105,"src":"141:66:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","file":"./interfaces/IPriceFeedIntegration.sol","id":847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":985,"sourceUnit":1309,"src":"208:48:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":985,"sourceUnit":1292,"src":"257:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/external/ISyncswapFactory.sol","file":"./interfaces/external/ISyncswapFactory.sol","id":849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":985,"sourceUnit":1321,"src":"291:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/external/ISyncswapPool.sol","file":"./interfaces/external/ISyncswapPool.sol","id":850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":985,"sourceUnit":1395,"src":"344:49:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":851,"name":"IPriceFeedIntegration","nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"443:21:9"},"id":852,"nodeType":"InheritanceSpecifier","src":"443:21:9"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":984,"linearizedBaseContracts":[984,1308],"name":"SyncswapClassicPriceFeedIntegration","nameLocation":"404:35:9","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1298],"constant":true,"functionSelector":"aaf5eb68","id":856,"mutability":"constant","name":"PRECISION","nameLocation":"504:9:9","nodeType":"VariableDeclaration","overrides":{"id":854,"nodeType":"OverrideSpecifier","overrides":[],"src":"495:8:9"},"scope":984,"src":"471:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653330","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"516:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"value":"1e30"},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":858,"mutability":"immutable","name":"factory","nameLocation":"551:7:9","nodeType":"VariableDeclaration","scope":984,"src":"526:32:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":867,"nodeType":"Block","src":"595:35:9","statements":[{"expression":{"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":863,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"605:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":864,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"615:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"605:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":866,"nodeType":"ExpressionStatement","src":"605:18:9"}]},"id":868,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"_factory","nameLocation":"585:8:9","nodeType":"VariableDeclaration","scope":868,"src":"577:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"577:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"576:18:9"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"595:0:9"},"scope":984,"src":"565:65:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":982,"nodeType":"Block","src":"764:903:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"778:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":879,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"792:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"778:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":884,"nodeType":"IfStatement","src":"774:72:9","trueBody":{"id":883,"nodeType":"Block","src":"805:41:9","statements":[{"expression":{"id":881,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"826:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":877,"id":882,"nodeType":"Return","src":"819:16:9"}]}},{"assignments":[886],"declarations":[{"constant":false,"id":886,"mutability":"mutable","name":"pool","nameLocation":"864:4:9","nodeType":"VariableDeclaration","scope":982,"src":"856:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":894,"initialValue":{"arguments":[{"id":891,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"918:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"942:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":888,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"888:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":887,"name":"ISyncswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"871:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapFactory_$1320_$","typeString":"type(contract ISyncswapFactory)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"871:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapFactory_$1320","typeString":"contract ISyncswapFactory"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":1319,"src":"871:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"871:92:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"856:107:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":895,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"977:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"993:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"985:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"985:7:9","typeDescriptions":{}}},"id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"985:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"977:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":944,"nodeType":"IfStatement","src":"973:417:9","trueBody":{"id":943,"nodeType":"Block","src":"997:393:9","statements":[{"assignments":[902],"declarations":[{"constant":false,"id":902,"mutability":"mutable","name":"token0","nameLocation":"1019:6:9","nodeType":"VariableDeclaration","scope":943,"src":"1011:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":908,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":904,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1042:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":903,"name":"ISyncswapPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1028:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapPool_$1394_$","typeString":"type(contract ISyncswapPool)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1028:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapPool_$1394","typeString":"contract ISyncswapPool"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":1332,"src":"1028:26:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1028:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1011:45:9"},{"assignments":[910,912],"declarations":[{"constant":false,"id":910,"mutability":"mutable","name":"reserve0","nameLocation":"1079:8:9","nodeType":"VariableDeclaration","scope":943,"src":"1071:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1071:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"reserve1","nameLocation":"1097:8:9","nodeType":"VariableDeclaration","scope":943,"src":"1089:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1089:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":918,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":914,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1123:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":913,"name":"ISyncswapPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1109:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapPool_$1394_$","typeString":"type(contract ISyncswapPool)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1109:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapPool_$1394","typeString":"contract ISyncswapPool"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":1344,"src":"1109:48:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$_t_uint256_$","typeString":"function () view external returns (uint256,uint256)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1109:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1070:89:9"},{"assignments":[920,922],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"baseReserve","nameLocation":"1182:11:9","nodeType":"VariableDeclaration","scope":943,"src":"1174:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"quoteReserve","nameLocation":"1203:12:9","nodeType":"VariableDeclaration","scope":943,"src":"1195:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1195:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":933,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":923,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1219:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":924,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"1233:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1219:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":929,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"1298:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":930,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1308:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1297:20:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1219:98:9","trueExpression":{"components":[{"id":926,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1259:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":927,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"1269:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1258:20:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1173:144:9"},{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":934,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"1331:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":935,"name":"quoteReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1340:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":936,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"1355:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1339:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":939,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1368:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1339:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1331:48:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":942,"nodeType":"ExpressionStatement","src":"1331:48:9"}]}},{"assignments":[946],"declarations":[{"constant":false,"id":946,"mutability":"mutable","name":"baseDecimals","nameLocation":"1408:12:9","nodeType":"VariableDeclaration","scope":982,"src":"1400:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":952,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":948,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1430:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":947,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1423:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1291_$","typeString":"type(contract IERC20)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1423:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1291","typeString":"contract IERC20"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1223,"src":"1423:27:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1423:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"1400:52:9"},{"assignments":[954],"declarations":[{"constant":false,"id":954,"mutability":"mutable","name":"quoteDecimals","nameLocation":"1470:13:9","nodeType":"VariableDeclaration","scope":982,"src":"1462:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":960,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":956,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"1493:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":955,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1486:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1291_$","typeString":"type(contract IERC20)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1291","typeString":"contract IERC20"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1223,"src":"1486:28:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"1462:54:9"},{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"basePrec","nameLocation":"1534:8:9","nodeType":"VariableDeclaration","scope":982,"src":"1526:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":966,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1545:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":964,"name":"baseDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"1551:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1545:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1526:37:9"},{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"quotePrec","nameLocation":"1581:9:9","nodeType":"VariableDeclaration","scope":982,"src":"1573:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":972,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1593:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":970,"name":"quoteDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"1599:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1593:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1573:39:9"},{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":973,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"1622:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"1631:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":975,"name":"basePrec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1639:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1631:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1630:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":978,"name":"quotePrec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1651:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1630:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1622:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"1622:38:9"}]},"functionSelector":"ac41865a","id":983,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"645:8:9","nodeType":"FunctionDefinition","overrides":{"id":874,"nodeType":"OverrideSpecifier","overrides":[],"src":"731:8:9"},"parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"_baseToken","nameLocation":"671:10:9","nodeType":"VariableDeclaration","scope":983,"src":"663:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"663:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"_quoteToken","nameLocation":"699:11:9","nodeType":"VariableDeclaration","scope":983,"src":"691:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"691:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"653:63:9"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"price","nameLocation":"757:5:9","nodeType":"VariableDeclaration","scope":983,"src":"749:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"748:15:9"},"scope":984,"src":"636:1031:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":985,"src":"395:1274:9","usedErrors":[]}],"src":"45:1625:9"},"id":9},"contracts/SyncswapStablePriceFeedIntegration.sol":{"ast":{"absolutePath":"contracts/SyncswapStablePriceFeedIntegration.sol","exportedSymbols":{"IERC20":[1291],"IPriceFeedIntegration":[1308],"ISyncswapFactory":[1320],"ISyncswapPool":[1394],"IUniswapV3Factory":[82],"IUniswapV3Pool":[104],"IUniswapV3PoolActions":[200],"IUniswapV3PoolDerivedState":[231],"IUniswapV3PoolEvents":[350],"IUniswapV3PoolImmutables":[390],"IUniswapV3PoolOwnerActions":[416],"IUniswapV3PoolState":[524],"SyncswapStablePriceFeedIntegration":[1134]},"id":1135,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":986,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:10"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1135,"sourceUnit":83,"src":"71:69:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","id":988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1135,"sourceUnit":105,"src":"141:66:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","file":"./interfaces/IPriceFeedIntegration.sol","id":989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1135,"sourceUnit":1309,"src":"208:48:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1135,"sourceUnit":1292,"src":"257:33:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/external/ISyncswapFactory.sol","file":"./interfaces/external/ISyncswapFactory.sol","id":991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1135,"sourceUnit":1321,"src":"291:52:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/external/ISyncswapPool.sol","file":"./interfaces/external/ISyncswapPool.sol","id":992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1135,"sourceUnit":1395,"src":"344:49:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":993,"name":"IPriceFeedIntegration","nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"442:21:10"},"id":994,"nodeType":"InheritanceSpecifier","src":"442:21:10"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1134,"linearizedBaseContracts":[1134,1308],"name":"SyncswapStablePriceFeedIntegration","nameLocation":"404:34:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1298],"constant":true,"functionSelector":"aaf5eb68","id":998,"mutability":"constant","name":"PRECISION","nameLocation":"503:9:10","nodeType":"VariableDeclaration","overrides":{"id":996,"nodeType":"OverrideSpecifier","overrides":[],"src":"494:8:10"},"scope":1134,"src":"470:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653330","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"515:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"value":"1e30"},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":1000,"mutability":"immutable","name":"factory","nameLocation":"550:7:10","nodeType":"VariableDeclaration","scope":1134,"src":"525:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":1009,"nodeType":"Block","src":"594:35:10","statements":[{"expression":{"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1005,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"604:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1006,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"614:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"604:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1008,"nodeType":"ExpressionStatement","src":"604:18:10"}]},"id":1010,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"_factory","nameLocation":"584:8:10","nodeType":"VariableDeclaration","scope":1010,"src":"576:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"576:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"575:18:10"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"594:0:10"},"scope":1134,"src":"564:65:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":1132,"nodeType":"Block","src":"763:1025:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1020,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"777:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1021,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"791:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"777:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1026,"nodeType":"IfStatement","src":"773:72:10","trueBody":{"id":1025,"nodeType":"Block","src":"804:41:10","statements":[{"expression":{"id":1023,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"825:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1019,"id":1024,"nodeType":"Return","src":"818:16:10"}]}},{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"pool","nameLocation":"863:4:10","nodeType":"VariableDeclaration","scope":1132,"src":"855:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"855:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1036,"initialValue":{"arguments":[{"id":1033,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"917:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1034,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"941:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1030,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"887:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1029,"name":"ISyncswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"870:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapFactory_$1320_$","typeString":"type(contract ISyncswapFactory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"870:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapFactory_$1320","typeString":"contract ISyncswapFactory"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":1319,"src":"870:33:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"870:92:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"855:107:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1037,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"976:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"992:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"984:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:10","typeDescriptions":{}}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"984:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"976:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1094,"nodeType":"IfStatement","src":"972:539:10","trueBody":{"id":1093,"nodeType":"Block","src":"996:515:10","statements":[{"assignments":[1044],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"swapFee","nameLocation":"1017:7:10","nodeType":"VariableDeclaration","scope":1093,"src":"1010:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1043,"name":"uint24","nodeType":"ElementaryTypeName","src":"1010:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"id":1055,"initialValue":{"arguments":[{"expression":{"id":1049,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1075:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1075:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1103:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1131:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1160:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":1046,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"1041:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1045,"name":"ISyncswapPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1027:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapPool_$1394_$","typeString":"type(contract ISyncswapPool)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1027:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapPool_$1394","typeString":"contract ISyncswapPool"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSwapFee","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"1027:30:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint24_$","typeString":"function (address,address,address,bytes memory) view external returns (uint24)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1027:149:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"1010:166:10"},{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"amountIn","nameLocation":"1198:8:10","nodeType":"VariableDeclaration","scope":1093,"src":"1190:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1059,"initialValue":{"hexValue":"313030303030","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1209:6:10","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"nodeType":"VariableDeclarationStatement","src":"1190:25:10"},{"assignments":[1061],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"amountOut","nameLocation":"1237:9:10","nodeType":"VariableDeclaration","scope":1093,"src":"1229:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1071,"initialValue":{"arguments":[{"id":1066,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1299:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1067,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"1327:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1068,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1353:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1353:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1063,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"1263:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1062,"name":"ISyncswapPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1249:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISyncswapPool_$1394_$","typeString":"type(contract ISyncswapPool)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1249:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISyncswapPool_$1394","typeString":"contract ISyncswapPool"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmountOut","nodeType":"MemberAccess","referencedDeclaration":1368,"src":"1249:32:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,address) view external returns (uint256)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1249:128:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1229:148:10"},{"expression":{"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1072,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"1391:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"1404:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030303030","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1417:6:10","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1075,"name":"swapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1426:7:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1417:16:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"id":1077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1416:18:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1404:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1403:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030303030","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1438:6:10","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"src":"1403:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1391:53:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ExpressionStatement","src":"1391:53:10"},{"expression":{"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1084,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1458:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"1467:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1086,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"1479:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1467:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1466:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1089,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"1492:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1466:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1458:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1092,"nodeType":"ExpressionStatement","src":"1458:42:10"}]}},{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"baseDecimals","nameLocation":"1529:12:10","nodeType":"VariableDeclaration","scope":1132,"src":"1521:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1102,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1098,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1551:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1097,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1544:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1291_$","typeString":"type(contract IERC20)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1544:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1291","typeString":"contract IERC20"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1223,"src":"1544:27:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1544:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"1521:52:10"},{"assignments":[1104],"declarations":[{"constant":false,"id":1104,"mutability":"mutable","name":"quoteDecimals","nameLocation":"1591:13:10","nodeType":"VariableDeclaration","scope":1132,"src":"1583:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1110,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1106,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1614:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1105,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1607:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1291_$","typeString":"type(contract IERC20)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1607:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1291","typeString":"contract IERC20"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1223,"src":"1607:28:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1607:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"1583:54:10"},{"assignments":[1112],"declarations":[{"constant":false,"id":1112,"mutability":"mutable","name":"basePrec","nameLocation":"1655:8:10","nodeType":"VariableDeclaration","scope":1132,"src":"1647:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1647:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1116,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1666:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1114,"name":"baseDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1672:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1666:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1647:37:10"},{"assignments":[1118],"declarations":[{"constant":false,"id":1118,"mutability":"mutable","name":"quotePrec","nameLocation":"1702:9:10","nodeType":"VariableDeclaration","scope":1132,"src":"1694:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1122,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1714:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1120,"name":"quoteDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"1720:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1714:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1694:39:10"},{"expression":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1123,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1743:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1124,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1752:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1125,"name":"basePrec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"1760:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1752:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1751:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1128,"name":"quotePrec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"1772:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1751:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1743:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1131,"nodeType":"ExpressionStatement","src":"1743:38:10"}]},"functionSelector":"ac41865a","id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"644:8:10","nodeType":"FunctionDefinition","overrides":{"id":1016,"nodeType":"OverrideSpecifier","overrides":[],"src":"730:8:10"},"parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"_baseToken","nameLocation":"670:10:10","nodeType":"VariableDeclaration","scope":1133,"src":"662:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"662:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"_quoteToken","nameLocation":"698:11:10","nodeType":"VariableDeclaration","scope":1133,"src":"690:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"652:63:10"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"price","nameLocation":"756:5:10","nodeType":"VariableDeclaration","scope":1133,"src":"748:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"747:15:10"},"scope":1134,"src":"635:1153:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1135,"src":"395:1395:10","usedErrors":[]}],"src":"45:1746:10"},"id":10},"contracts/base/Lockable.sol":{"ast":{"absolutePath":"contracts/base/Lockable.sol","exportedSymbols":{"Lockable":[1161]},"id":1162,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1136,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1161,"linearizedBaseContracts":[1161],"name":"Lockable","nameLocation":"80:8:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1139,"mutability":"mutable","name":"unlocked","nameLocation":"111:8:11","nodeType":"VariableDeclaration","scope":1161,"src":"95:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"95:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":1141,"name":"Locked","nameLocation":"136:6:11","nodeType":"ErrorDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"142:2:11"},"src":"130:15:11"},{"body":{"id":1159,"nodeType":"Block","src":"167:106:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"181:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"193:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"181:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1149,"nodeType":"IfStatement","src":"177:34:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1146,"name":"Locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"203:6:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"203:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1148,"nodeType":"RevertStatement","src":"196:15:11"}},{"expression":{"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1150,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"221:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"232:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"221:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"nodeType":"ExpressionStatement","src":"221:12:11"},{"id":1154,"nodeType":"PlaceholderStatement","src":"243:1:11"},{"expression":{"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1155,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"254:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"265:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"254:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1158,"nodeType":"ExpressionStatement","src":"254:12:11"}]},"id":1160,"name":"lock","nameLocation":"160:4:11","nodeType":"ModifierDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"164:2:11"},"src":"151:122:11","virtual":false,"visibility":"internal"}],"scope":1162,"src":"71:204:11","usedErrors":[1141]}],"src":"45:231:11"},"id":11},"contracts/interfaces/IDEXIntegration.sol":{"ast":{"absolutePath":"contracts/interfaces/IDEXIntegration.sol","exportedSymbols":{"IDEXIntegration":[1206]},"id":1207,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1163,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1206,"linearizedBaseContracts":[1206],"name":"IDEXIntegration","nameLocation":"81:15:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b88c5f91","id":1172,"implemented":false,"kind":"function","modifiers":[],"name":"validatePair","nameLocation":"112:12:12","nodeType":"FunctionDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"_tokenIn","nameLocation":"142:8:12","nodeType":"VariableDeclaration","scope":1172,"src":"134:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"134:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"_tokenOut","nameLocation":"168:9:12","nodeType":"VariableDeclaration","scope":1172,"src":"160:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"160:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"124:59:12"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1172,"src":"207:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1169,"name":"bool","nodeType":"ElementaryTypeName","src":"207:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"206:6:12"},"scope":1206,"src":"103:110:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4aa06652","id":1183,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"228:12:12","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"_tokenIn","nameLocation":"258:8:12","nodeType":"VariableDeclaration","scope":1183,"src":"250:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"_tokenOut","nameLocation":"284:9:12","nodeType":"VariableDeclaration","scope":1183,"src":"276:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"276:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"_amountIn","nameLocation":"311:9:12","nodeType":"VariableDeclaration","scope":1183,"src":"303:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"303:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"240:86:12"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1183,"src":"350:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:9:12"},"scope":1206,"src":"219:140:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"53b609b5","id":1194,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"374:11:12","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"_tokenIn","nameLocation":"403:8:12","nodeType":"VariableDeclaration","scope":1194,"src":"395:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"_tokenOut","nameLocation":"429:9:12","nodeType":"VariableDeclaration","scope":1194,"src":"421:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"421:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"_amountOut","nameLocation":"456:10:12","nodeType":"VariableDeclaration","scope":1194,"src":"448:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"385:87:12"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1194,"src":"496:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"495:9:12"},"scope":1206,"src":"365:140:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"93316212","id":1205,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"520:4:12","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"_tokenIn","nameLocation":"542:8:12","nodeType":"VariableDeclaration","scope":1205,"src":"534:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"_tokenOut","nameLocation":"568:9:12","nodeType":"VariableDeclaration","scope":1205,"src":"560:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"560:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"_to","nameLocation":"595:3:12","nodeType":"VariableDeclaration","scope":1205,"src":"587:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"524:80:12"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1205,"src":"623:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"622:9:12"},"scope":1206,"src":"511:121:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1207,"src":"71:563:12","usedErrors":[]}],"src":"45:590:12"},"id":12},"contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1291]},"id":1292,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1208,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1291,"linearizedBaseContracts":[1291],"name":"IERC20","nameLocation":"81:6:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"06fdde03","id":1213,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"103:4:13","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[],"src":"107:2:13"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"133:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1210,"name":"string","nodeType":"ElementaryTypeName","src":"133:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"132:15:13"},"scope":1291,"src":"94:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":1218,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"163:6:13","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[],"src":"169:2:13"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"195:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1215,"name":"string","nodeType":"ElementaryTypeName","src":"195:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"194:15:13"},"scope":1291,"src":"154:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":1223,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"225:8:13","nodeType":"FunctionDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[],"src":"233:2:13"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1223,"src":"259:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1220,"name":"uint8","nodeType":"ElementaryTypeName","src":"259:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"258:7:13"},"scope":1291,"src":"216:50:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":1228,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"281:11:13","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[],"src":"292:2:13"},"returnParameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1228,"src":"318:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:9:13"},"scope":1291,"src":"272:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":1235,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"342:9:13","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"352:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"352:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"351:9:13"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"384:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"384:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"383:9:13"},"scope":1291,"src":"333:60:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":1244,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"408:9:13","nodeType":"FunctionDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"_owner","nameLocation":"435:6:13","nodeType":"VariableDeclaration","scope":1244,"src":"427:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"_spender","nameLocation":"459:8:13","nodeType":"VariableDeclaration","scope":1244,"src":"451:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"417:56:13"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1244,"src":"497:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:13"},"scope":1291,"src":"399:107:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":1253,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"521:7:13","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"_spender","nameLocation":"537:8:13","nodeType":"VariableDeclaration","scope":1253,"src":"529:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"_value","nameLocation":"555:6:13","nodeType":"VariableDeclaration","scope":1253,"src":"547:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:34:13"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1253,"src":"581:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1250,"name":"bool","nodeType":"ElementaryTypeName","src":"581:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"580:6:13"},"scope":1291,"src":"512:75:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":1262,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"602:8:13","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"_to","nameLocation":"619:3:13","nodeType":"VariableDeclaration","scope":1262,"src":"611:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"_value","nameLocation":"632:6:13","nodeType":"VariableDeclaration","scope":1262,"src":"624:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:29:13"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"658:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1259,"name":"bool","nodeType":"ElementaryTypeName","src":"658:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"657:6:13"},"scope":1291,"src":"593:71:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":1273,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"679:12:13","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"_from","nameLocation":"709:5:13","nodeType":"VariableDeclaration","scope":1273,"src":"701:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"_to","nameLocation":"732:3:13","nodeType":"VariableDeclaration","scope":1273,"src":"724:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"_value","nameLocation":"753:6:13","nodeType":"VariableDeclaration","scope":1273,"src":"745:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"691:74:13"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1273,"src":"784:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1270,"name":"bool","nodeType":"ElementaryTypeName","src":"784:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"783:6:13"},"scope":1291,"src":"670:120:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":1290,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"805:6:13","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"_owner","nameLocation":"829:6:13","nodeType":"VariableDeclaration","scope":1290,"src":"821:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"_spender","nameLocation":"853:8:13","nodeType":"VariableDeclaration","scope":1290,"src":"845:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"_value","nameLocation":"879:6:13","nodeType":"VariableDeclaration","scope":1290,"src":"871:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"_deadline","nameLocation":"903:9:13","nodeType":"VariableDeclaration","scope":1290,"src":"895:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"_v","nameLocation":"928:2:13","nodeType":"VariableDeclaration","scope":1290,"src":"922:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1282,"name":"uint8","nodeType":"ElementaryTypeName","src":"922:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"_r","nameLocation":"948:2:13","nodeType":"VariableDeclaration","scope":1290,"src":"940:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"940:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"_s","nameLocation":"968:2:13","nodeType":"VariableDeclaration","scope":1290,"src":"960:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"960:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"811:165:13"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"985:0:13"},"scope":1291,"src":"796:190:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1292,"src":"71:917:13","usedErrors":[]}],"src":"45:944:13"},"id":13},"contracts/interfaces/IPriceFeedIntegration.sol":{"ast":{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","exportedSymbols":{"IPriceFeedIntegration":[1308]},"id":1309,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1293,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1308,"linearizedBaseContracts":[1308],"name":"IPriceFeedIntegration","nameLocation":"81:21:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"aaf5eb68","id":1298,"implemented":false,"kind":"function","modifiers":[],"name":"PRECISION","nameLocation":"118:9:14","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[],"src":"127:2:14"},"returnParameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1298,"src":"153:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"152:9:14"},"scope":1308,"src":"109:53:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ac41865a","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"181:8:14","nodeType":"FunctionDefinition","parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"_baseToken","nameLocation":"207:10:14","nodeType":"VariableDeclaration","scope":1307,"src":"199:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"199:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"_quoteToken","nameLocation":"235:11:14","nodeType":"VariableDeclaration","scope":1307,"src":"227:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"227:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"189:63:14"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1307,"src":"276:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"276:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"275:9:14"},"scope":1308,"src":"172:113:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1309,"src":"71:216:14","usedErrors":[]}],"src":"45:243:14"},"id":14},"contracts/interfaces/external/ISyncswapFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/external/ISyncswapFactory.sol","exportedSymbols":{"ISyncswapFactory":[1320]},"id":1321,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1310,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1320,"linearizedBaseContracts":[1320],"name":"ISyncswapFactory","nameLocation":"81:16:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"531aa03e","id":1319,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"113:7:15","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"_tokenA","nameLocation":"138:7:15","nodeType":"VariableDeclaration","scope":1319,"src":"130:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"130:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"_tokenB","nameLocation":"163:7:15","nodeType":"VariableDeclaration","scope":1319,"src":"155:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"120:56:15"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1319,"src":"200:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"200:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"199:9:15"},"scope":1320,"src":"104:105:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1321,"src":"71:140:15","usedErrors":[]}],"src":"45:167:15"},"id":15},"contracts/interfaces/external/ISyncswapPool.sol":{"ast":{"absolutePath":"contracts/interfaces/external/ISyncswapPool.sol","exportedSymbols":{"ISyncswapPool":[1394]},"id":1395,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1322,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1394,"linearizedBaseContracts":[1394],"name":"ISyncswapPool","nameLocation":"81:13:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISyncswapPool.TokenAmount","id":1327,"members":[{"constant":false,"id":1324,"mutability":"mutable","name":"token","nameLocation":"138:5:16","nodeType":"VariableDeclaration","scope":1327,"src":"130:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"130:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"amount","nameLocation":"158:6:16","nodeType":"VariableDeclaration","scope":1327,"src":"153:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint","nodeType":"ElementaryTypeName","src":"153:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenAmount","nameLocation":"108:11:16","nodeType":"StructDefinition","scope":1394,"src":"101:70:16","visibility":"public"},{"functionSelector":"0dfe1681","id":1332,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"186:6:16","nodeType":"FunctionDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"192:2:16"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1332,"src":"218:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"218:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"217:9:16"},"scope":1394,"src":"177:50:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d21220a7","id":1337,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"242:6:16","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[],"src":"248:2:16"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1337,"src":"274:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"274:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"273:9:16"},"scope":1394,"src":"233:50:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":1344,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"298:11:16","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"309:2:16"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1344,"src":"335:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1344,"src":"344:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"344:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:18:16"},"scope":1394,"src":"289:64:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8b4c5470","id":1357,"implemented":false,"kind":"function","modifiers":[],"name":"getSwapFee","nameLocation":"368:10:16","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"_sender","nameLocation":"396:7:16","nodeType":"VariableDeclaration","scope":1357,"src":"388:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"_tokenIn","nameLocation":"421:8:16","nodeType":"VariableDeclaration","scope":1357,"src":"413:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"413:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"_tokenOut","nameLocation":"447:9:16","nodeType":"VariableDeclaration","scope":1357,"src":"439:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"439:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"data","nameLocation":"479:4:16","nodeType":"VariableDeclaration","scope":1357,"src":"466:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"466:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"378:111:16"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"513:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1354,"name":"uint24","nodeType":"ElementaryTypeName","src":"513:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"512:8:16"},"scope":1394,"src":"359:162:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ff9c8ac6","id":1368,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"536:12:16","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"_tokenIn","nameLocation":"566:8:16","nodeType":"VariableDeclaration","scope":1368,"src":"558:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"558:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"_amountIn","nameLocation":"592:9:16","nodeType":"VariableDeclaration","scope":1368,"src":"584:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"_sender","nameLocation":"619:7:16","nodeType":"VariableDeclaration","scope":1368,"src":"611:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"548:84:16"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"amountOut","nameLocation":"664:9:16","nodeType":"VariableDeclaration","scope":1368,"src":"656:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"655:19:16"},"scope":1394,"src":"527:148:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a287c795","id":1379,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"690:11:16","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"_tokenOut","nameLocation":"719:9:16","nodeType":"VariableDeclaration","scope":1379,"src":"711:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"711:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"_amountOut","nameLocation":"746:10:16","nodeType":"VariableDeclaration","scope":1379,"src":"738:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"_sender","nameLocation":"774:7:16","nodeType":"VariableDeclaration","scope":1379,"src":"766:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"701:86:16"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"amountIn","nameLocation":"819:8:16","nodeType":"VariableDeclaration","scope":1379,"src":"811:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"810:18:16"},"scope":1394,"src":"681:148:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7132bb7f","id":1393,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"844:4:16","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"_data","nameLocation":"873:5:16","nodeType":"VariableDeclaration","scope":1393,"src":"858:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1380,"name":"bytes","nodeType":"ElementaryTypeName","src":"858:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"_sender","nameLocation":"896:7:16","nodeType":"VariableDeclaration","scope":1393,"src":"888:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"_callback","nameLocation":"921:9:16","nodeType":"VariableDeclaration","scope":1393,"src":"913:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"913:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"_callbackData","nameLocation":"955:13:16","nodeType":"VariableDeclaration","scope":1393,"src":"940:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1386,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"848:126:16"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"tokenAmount","nameLocation":"1012:11:16","nodeType":"VariableDeclaration","scope":1393,"src":"993:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenAmount_$1327_memory_ptr","typeString":"struct ISyncswapPool.TokenAmount"},"typeName":{"id":1390,"nodeType":"UserDefinedTypeName","pathNode":{"id":1389,"name":"TokenAmount","nodeType":"IdentifierPath","referencedDeclaration":1327,"src":"993:11:16"},"referencedDeclaration":1327,"src":"993:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenAmount_$1327_storage_ptr","typeString":"struct ISyncswapPool.TokenAmount"}},"visibility":"internal"}],"src":"992:32:16"},"scope":1394,"src":"835:190:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1395,"src":"71:956:16","usedErrors":[]}],"src":"45:983:16"},"id":16},"contracts/libraries/TransferHelper.sol":{"ast":{"absolutePath":"contracts/libraries/TransferHelper.sol","exportedSymbols":{"TransferHelper":[1554]},"id":1555,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1396,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1554,"linearizedBaseContracts":[1554],"name":"TransferHelper","nameLocation":"190:14:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":1438,"nodeType":"Block","src":"286:357:17","statements":[{"assignments":[1406,1408],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"success","nameLocation":"367:7:17","nodeType":"VariableDeclaration","scope":1438,"src":"362:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1405,"name":"bool","nodeType":"ElementaryTypeName","src":"362:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"data","nameLocation":"389:4:17","nodeType":"VariableDeclaration","scope":1438,"src":"376:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1407,"name":"bytes","nodeType":"ElementaryTypeName","src":"376:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1418,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783039356561376233","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"445:10:17","typeDescriptions":{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},"value":"0x095ea7b3"},{"id":1414,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"457:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1415,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"462:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1411,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"422:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"422:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"422:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1409,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"397:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"397:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"397:82:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"361:118:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1420,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"510:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1421,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"522:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"522:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"537:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"522:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1427,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"553:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"560:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1428,"name":"bool","nodeType":"ElementaryTypeName","src":"560:4:17","typeDescriptions":{}}}],"id":1430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"559:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1425,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"542:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"542:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"542:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"522:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"521:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"510:57:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"581:45:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""},"value":"TransferHelper::safeApprove: approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""}],"id":1419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"489:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"489:147:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1437,"nodeType":"ExpressionStatement","src":"489:147:17"}]},"id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"220:11:17","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"_token","nameLocation":"240:6:17","nodeType":"VariableDeclaration","scope":1439,"src":"232:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"232:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"_to","nameLocation":"256:3:17","nodeType":"VariableDeclaration","scope":1439,"src":"248:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"_value","nameLocation":"269:6:17","nodeType":"VariableDeclaration","scope":1439,"src":"261:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"231:45:17"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"286:0:17"},"scope":1554,"src":"211:432:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1481,"nodeType":"Block","src":"755:360:17","statements":[{"assignments":[1449,1451],"declarations":[{"constant":false,"id":1449,"mutability":"mutable","name":"success","nameLocation":"837:7:17","nodeType":"VariableDeclaration","scope":1481,"src":"832:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1448,"name":"bool","nodeType":"ElementaryTypeName","src":"832:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"data","nameLocation":"859:4:17","nodeType":"VariableDeclaration","scope":1481,"src":"846:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1450,"name":"bytes","nodeType":"ElementaryTypeName","src":"846:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1461,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30786139303539636262","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:10:17","typeDescriptions":{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},"value":"0xa9059cbb"},{"id":1457,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"927:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1458,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"932:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1454,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"892:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"892:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"892:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1452,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"867:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"867:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"867:82:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"831:118:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"980:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1464,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"992:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"992:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"992:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1470,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"1023:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1030:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1471,"name":"bool","nodeType":"ElementaryTypeName","src":"1030:4:17","typeDescriptions":{}}}],"id":1473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1029:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1468,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1012:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1012:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1012:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"992:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"991:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"980:57:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1051:47:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""},"value":"TransferHelper::safeTransfer: transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""}],"id":1462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"959:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"959:149:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"959:149:17"}]},"id":1482,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"658:12:17","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"_token","nameLocation":"688:6:17","nodeType":"VariableDeclaration","scope":1482,"src":"680:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"_to","nameLocation":"712:3:17","nodeType":"VariableDeclaration","scope":1482,"src":"704:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"704:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"_value","nameLocation":"733:6:17","nodeType":"VariableDeclaration","scope":1482,"src":"725:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"725:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"670:75:17"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"755:0:17"},"scope":1554,"src":"649:466:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1527,"nodeType":"Block","src":"1254:383:17","statements":[{"assignments":[1494,1496],"declarations":[{"constant":false,"id":1494,"mutability":"mutable","name":"success","nameLocation":"1348:7:17","nodeType":"VariableDeclaration","scope":1527,"src":"1343:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1493,"name":"bool","nodeType":"ElementaryTypeName","src":"1343:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"data","nameLocation":"1370:4:17","nodeType":"VariableDeclaration","scope":1527,"src":"1357:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"1357:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1507,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783233623837326464","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1426:10:17","typeDescriptions":{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},"value":"0x23b872dd"},{"id":1502,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1438:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1503,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"1445:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1504,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1450:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1499,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1403:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1403:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1403:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1497,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1378:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1378:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1378:89:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1342:125:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"1498:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1510,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1510:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1510:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1525:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1510:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1516,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1541:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1548:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1517,"name":"bool","nodeType":"ElementaryTypeName","src":"1548:4:17","typeDescriptions":{}}}],"id":1519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1547:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1514,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1530:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1530:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1530:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1510:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1509:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1498:57:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1569:51:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""},"value":"TransferHelper::transferFrom: transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""}],"id":1508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1477:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1477:153:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1526,"nodeType":"ExpressionStatement","src":"1477:153:17"}]},"id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1130:16:17","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"_token","nameLocation":"1164:6:17","nodeType":"VariableDeclaration","scope":1528,"src":"1156:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"_from","nameLocation":"1188:5:17","nodeType":"VariableDeclaration","scope":1528,"src":"1180:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"_to","nameLocation":"1211:3:17","nodeType":"VariableDeclaration","scope":1528,"src":"1203:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"_value","nameLocation":"1232:6:17","nodeType":"VariableDeclaration","scope":1528,"src":"1224:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1146:98:17"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[],"src":"1254:0:17"},"scope":1554,"src":"1121:516:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1552,"nodeType":"Block","src":"1706:189:17","statements":[{"assignments":[1536,null],"declarations":[{"constant":false,"id":1536,"mutability":"mutable","name":"success","nameLocation":"1722:7:17","nodeType":"VariableDeclaration","scope":1552,"src":"1717:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1535,"name":"bool","nodeType":"ElementaryTypeName","src":"1717:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1546,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1759:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1541,"name":"bytes","nodeType":"ElementaryTypeName","src":"1763:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1759:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1537,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1735:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1735:8:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1539,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"1751:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1735:23:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1735:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1716:56:17"},{"expression":{"arguments":[{"id":1548,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1803:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1824:54:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""},"value":"TransferHelper::safeTransferETH: ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""}],"id":1547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1782:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1782:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1551,"nodeType":"ExpressionStatement","src":"1782:106:17"}]},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"1652:15:17","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"_to","nameLocation":"1676:3:17","nodeType":"VariableDeclaration","scope":1553,"src":"1668:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"_value","nameLocation":"1689:6:17","nodeType":"VariableDeclaration","scope":1553,"src":"1681:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1667:29:17"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[],"src":"1706:0:17"},"scope":1554,"src":"1643:252:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1555,"src":"182:1715:17","usedErrors":[]}],"src":"45:1853:17"},"id":17}},"contracts":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"params":{"fee":"The enabled fee, denominated in hundredths of a bip","tickSpacing":"The minimum number of ticks between initialized ticks for pools created with the given fee"}},"OwnerChanged(address,address)":{"params":{"newOwner":"The owner after the owner was changed","oldOwner":"The owner before the owner was changed"}},"PoolCreated(address,address,uint24,int24,address)":{"params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","pool":"The address of the created pool","tickSpacing":"The minimum number of ticks between initialized ticks","token0":"The first token of the pool by address sort order","token1":"The second token of the pool by address sort order"}}},"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"enableFeeAmount(uint24,int24)":{"details":"Fee amounts may never be removed once enabled","params":{"fee":"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)","tickSpacing":"The spacing between ticks to be enforced for all pools created with the given fee amount"}},"feeAmountTickSpacing(uint24)":{"details":"A fee amount can never be removed, so this value should be hard coded or cached in the calling context","params":{"fee":"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},"returns":{"_0":"The tick spacing"}},"getPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"owner()":{"details":"Can be changed by the current owner via setOwner","returns":{"_0":"The address of the factory owner"}},"setOwner(address)":{"details":"Must be called by the current owner","params":{"_owner":"The new owner of the factory"}}},"title":"The interface for the Uniswap V3 Factory","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"notice":"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{"notice":"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{"notice":"Emitted when a pool is created"}},"kind":"user","methods":{"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{"notice":"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{"notice":"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{"notice":"Returns the current owner of the factory"},"setOwner(address)":{"notice":"Updates the owner of the factory"}},"notice":"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees","version":1}}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"IUniswapV3Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"The pool interface is broken up into many smaller pieces","kind":"dev","methods":{"burn(int24,int24,uint128)":{"details":"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect","params":{"amount":"How much liquidity to burn","tickLower":"The lower tick of the position for which to burn liquidity","tickUpper":"The upper tick of the position for which to burn liquidity"},"returns":{"amount0":"The amount of token0 sent to the recipient","amount1":"The amount of token1 sent to the recipient"}},"collect(address,int24,int24,uint128,uint128)":{"details":"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.","params":{"amount0Requested":"How much token0 should be withdrawn from the fees owed","amount1Requested":"How much token1 should be withdrawn from the fees owed","recipient":"The address which should receive the fees collected","tickLower":"The lower tick of the position for which to collect fees","tickUpper":"The upper tick of the position for which to collect fees"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"factory()":{"returns":{"_0":"The contract address"}},"fee()":{"returns":{"_0":"The fee"}},"feeGrowthGlobal0X128()":{"details":"This value can overflow the uint256"},"feeGrowthGlobal1X128()":{"details":"This value can overflow the uint256"},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback","params":{"amount0":"The amount of token0 to send","amount1":"The amount of token1 to send","data":"Any data to be passed through to the callback","recipient":"The address which will receive the token0 and token1 amounts"}},"increaseObservationCardinalityNext(uint16)":{"details":"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.","params":{"observationCardinalityNext":"The desired minimum number of observations for the pool to store"}},"initialize(uint160)":{"details":"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value","params":{"sqrtPriceX96":"the initial sqrt price of the pool as a Q64.96"}},"liquidity()":{"details":"This value has no relationship to the total liquidity across all ticks"},"maxLiquidityPerTick()":{"details":"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"mint(address,int24,int24,uint128,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.","params":{"amount":"The amount of liquidity to mint","data":"Any data that should be passed through to the callback","recipient":"The address for which the liquidity will be created","tickLower":"The lower tick of the position in which to add liquidity","tickUpper":"The upper tick of the position in which to add liquidity"},"returns":{"amount0":"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback","amount1":"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"}},"observations(uint256)":{"details":"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.","params":{"index":"The element of the observations array to fetch"},"returns":{"blockTimestamp":"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"}},"observe(uint32[])":{"details":"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.","params":{"secondsAgos":"From how long ago each cumulative tick and liquidity value should be returned"},"returns":{"secondsPerLiquidityCumulativeX128s":"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp","tickCumulatives":"Cumulative tick values as of each `secondsAgos` from the current block timestamp"}},"positions(bytes32)":{"params":{"key":"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"},"returns":{"_liquidity":"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"}},"protocolFees()":{"details":"Protocol fees will never exceed uint128 max in either token"},"setFeeProtocol(uint8,uint8)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}},"slot0()":{"returns":{"sqrtPriceX96":"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"}},"snapshotCumulativesInside(int24,int24)":{"details":"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.","params":{"tickLower":"The lower tick of the range","tickUpper":"The upper tick of the range"},"returns":{"secondsInside":"The snapshot of seconds per liquidity for the range","secondsPerLiquidityInsideX128":"The snapshot of seconds per liquidity for the range","tickCumulativeInside":"The snapshot of the tick accumulator for the range"}},"swap(address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback","params":{"amountSpecified":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Any data to be passed through to the callback","recipient":"The address to receive the output of the swap","sqrtPriceLimitX96":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","zeroForOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}},"tickSpacing()":{"details":"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.","returns":{"_0":"The tick spacing"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}}},"title":"The interface for a Uniswap V3 Pool","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint8,uint8)":"8206a4d1","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when a position's liquidity is removed"},"Collect(address,address,int24,int24,uint128,uint128)":{"notice":"Emitted when fees are collected by the owner of a position"},"CollectProtocol(address,address,uint128,uint128)":{"notice":"Emitted when the collected protocol fees are withdrawn by the factory owner"},"Flash(address,address,uint256,uint256,uint256,uint256)":{"notice":"Emitted by the pool for any flashes of token0/token1"},"IncreaseObservationCardinalityNext(uint16,uint16)":{"notice":"Emitted by the pool for increases to the number of observations that can be stored"},"Initialize(uint160,int24)":{"notice":"Emitted exactly once by a pool when #initialize is first called on the pool"},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is minted for a given position"},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"notice":"Emitted when the protocol fee is changed by the pool"},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"notice":"Emitted by the pool for any swaps between token0 and token1"}},"kind":"user","methods":{"burn(int24,int24,uint128)":{"notice":"Burn liquidity from the sender and account tokens owed for the liquidity to the position"},"collect(address,int24,int24,uint128,uint128)":{"notice":"Collects tokens owed to a position"},"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"},"fee()":{"notice":"The pool's fee in hundredths of a bip, i.e. 1e-6"},"feeGrowthGlobal0X128()":{"notice":"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"},"feeGrowthGlobal1X128()":{"notice":"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"increaseObservationCardinalityNext(uint16)":{"notice":"Increase the maximum number of price and liquidity observations that this pool will store"},"initialize(uint160)":{"notice":"Sets the initial price for the pool"},"liquidity()":{"notice":"The currently in range liquidity available to the pool"},"maxLiquidityPerTick()":{"notice":"The maximum amount of position liquidity that can use any tick in the range"},"mint(address,int24,int24,uint128,bytes)":{"notice":"Adds liquidity for the given recipient/tickLower/tickUpper position"},"observations(uint256)":{"notice":"Returns data about a specific observation index"},"observe(uint32[])":{"notice":"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"},"positions(bytes32)":{"notice":"Returns the information about a position by the position's key"},"protocolFees()":{"notice":"The amounts of token0 and token1 that are owed to the protocol"},"setFeeProtocol(uint8,uint8)":{"notice":"Set the denominator of the protocol's % share of the fees"},"slot0()":{"notice":"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."},"snapshotCumulativesInside(int24,int24)":{"notice":"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"},"swap(address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0"},"tickBitmap(int16)":{"notice":"Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"tickSpacing()":{"notice":"The pool tick spacing"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"}},"notice":"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"IUniswapV3PoolActions":{"abi":[{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"burn(int24,int24,uint128)":{"details":"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect","params":{"amount":"How much liquidity to burn","tickLower":"The lower tick of the position for which to burn liquidity","tickUpper":"The upper tick of the position for which to burn liquidity"},"returns":{"amount0":"The amount of token0 sent to the recipient","amount1":"The amount of token1 sent to the recipient"}},"collect(address,int24,int24,uint128,uint128)":{"details":"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.","params":{"amount0Requested":"How much token0 should be withdrawn from the fees owed","amount1Requested":"How much token1 should be withdrawn from the fees owed","recipient":"The address which should receive the fees collected","tickLower":"The lower tick of the position for which to collect fees","tickUpper":"The upper tick of the position for which to collect fees"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback","params":{"amount0":"The amount of token0 to send","amount1":"The amount of token1 to send","data":"Any data to be passed through to the callback","recipient":"The address which will receive the token0 and token1 amounts"}},"increaseObservationCardinalityNext(uint16)":{"details":"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.","params":{"observationCardinalityNext":"The desired minimum number of observations for the pool to store"}},"initialize(uint160)":{"details":"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value","params":{"sqrtPriceX96":"the initial sqrt price of the pool as a Q64.96"}},"mint(address,int24,int24,uint128,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.","params":{"amount":"The amount of liquidity to mint","data":"Any data that should be passed through to the callback","recipient":"The address for which the liquidity will be created","tickLower":"The lower tick of the position in which to add liquidity","tickUpper":"The upper tick of the position in which to add liquidity"},"returns":{"amount0":"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback","amount1":"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"}},"swap(address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback","params":{"amountSpecified":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Any data to be passed through to the callback","recipient":"The address to receive the output of the swap","sqrtPriceLimitX96":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","zeroForOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}}},"title":"Permissionless pool actions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","swap(address,bool,int256,uint160,bytes)":"128acb08"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"burn(int24,int24,uint128)":{"notice":"Burn liquidity from the sender and account tokens owed for the liquidity to the position"},"collect(address,int24,int24,uint128,uint128)":{"notice":"Collects tokens owed to a position"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"increaseObservationCardinalityNext(uint16)":{"notice":"Increase the maximum number of price and liquidity observations that this pool will store"},"initialize(uint160)":{"notice":"Sets the initial price for the pool"},"mint(address,int24,int24,uint128,bytes)":{"notice":"Adds liquidity for the given recipient/tickLower/tickUpper position"},"swap(address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0"}},"notice":"Contains pool methods that can be called by anyone","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"IUniswapV3PoolDerivedState":{"abi":[{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"observe(uint32[])":{"details":"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.","params":{"secondsAgos":"From how long ago each cumulative tick and liquidity value should be returned"},"returns":{"secondsPerLiquidityCumulativeX128s":"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp","tickCumulatives":"Cumulative tick values as of each `secondsAgos` from the current block timestamp"}},"snapshotCumulativesInside(int24,int24)":{"details":"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.","params":{"tickLower":"The lower tick of the range","tickUpper":"The upper tick of the range"},"returns":{"secondsInside":"The snapshot of seconds per liquidity for the range","secondsPerLiquidityInsideX128":"The snapshot of seconds per liquidity for the range","tickCumulativeInside":"The snapshot of the tick accumulator for the range"}}},"title":"Pool state that is not stored","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"observe(uint32[])":"883bdbfd","snapshotCumulativesInside(int24,int24)":"a38807f2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"observe(uint32[])":{"notice":"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"},"snapshotCumulativesInside(int24,int24)":{"notice":"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"}},"notice":"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"IUniswapV3PoolEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"}],"devdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"details":"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect","params":{"amount":"The amount of liquidity to remove","amount0":"The amount of token0 withdrawn","amount1":"The amount of token1 withdrawn","owner":"The owner of the position for which liquidity is removed","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"Collect(address,address,int24,int24,uint128,uint128)":{"details":"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees","params":{"amount0":"The amount of token0 fees collected","amount1":"The amount of token1 fees collected","owner":"The owner of the position for which fees are collected","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"CollectProtocol(address,address,uint128,uint128)":{"params":{"amount0":"The amount of token1 protocol fees that is withdrawn","recipient":"The address that receives the collected protocol fees","sender":"The address that collects the protocol fees"}},"Flash(address,address,uint256,uint256,uint256,uint256)":{"params":{"amount0":"The amount of token0 that was flashed","amount1":"The amount of token1 that was flashed","paid0":"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee","paid1":"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee","recipient":"The address that received the tokens from flash","sender":"The address that initiated the swap call, and that received the callback"}},"IncreaseObservationCardinalityNext(uint16,uint16)":{"details":"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.","params":{"observationCardinalityNextNew":"The updated value of the next observation cardinality","observationCardinalityNextOld":"The previous value of the next observation cardinality"}},"Initialize(uint160,int24)":{"details":"Mint/Burn/Swap cannot be emitted by the pool before Initialize","params":{"sqrtPriceX96":"The initial sqrt price of the pool, as a Q64.96","tick":"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"}},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"params":{"amount":"The amount of liquidity minted to the position range","amount0":"How much token0 was required for the minted liquidity","amount1":"How much token1 was required for the minted liquidity","owner":"The owner of the position and recipient of any minted liquidity","sender":"The address that minted the liquidity","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"params":{"feeProtocol0New":"The updated value of the token0 protocol fee","feeProtocol0Old":"The previous value of the token0 protocol fee","feeProtocol1New":"The updated value of the token1 protocol fee","feeProtocol1Old":"The previous value of the token1 protocol fee"}},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"params":{"amount0":"The delta of the token0 balance of the pool","amount1":"The delta of the token1 balance of the pool","liquidity":"The liquidity of the pool after the swap","recipient":"The address that received the output of the swap","sender":"The address that initiated the swap call, and that received the callback","sqrtPriceX96":"The sqrt(price) of the pool after the swap, as a Q64.96","tick":"The log base 1.0001 of price of the pool after the swap"}}},"kind":"dev","methods":{},"title":"Events emitted by a pool","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when a position's liquidity is removed"},"Collect(address,address,int24,int24,uint128,uint128)":{"notice":"Emitted when fees are collected by the owner of a position"},"CollectProtocol(address,address,uint128,uint128)":{"notice":"Emitted when the collected protocol fees are withdrawn by the factory owner"},"Flash(address,address,uint256,uint256,uint256,uint256)":{"notice":"Emitted by the pool for any flashes of token0/token1"},"IncreaseObservationCardinalityNext(uint16,uint16)":{"notice":"Emitted by the pool for increases to the number of observations that can be stored"},"Initialize(uint160,int24)":{"notice":"Emitted exactly once by a pool when #initialize is first called on the pool"},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is minted for a given position"},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"notice":"Emitted when the protocol fee is changed by the pool"},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"notice":"Emitted by the pool for any swaps between token0 and token1"}},"kind":"user","methods":{},"notice":"Contains all events emitted by the pool","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"IUniswapV3PoolImmutables":{"abi":[{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"factory()":{"returns":{"_0":"The contract address"}},"fee()":{"returns":{"_0":"The fee"}},"maxLiquidityPerTick()":{"details":"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"tickSpacing()":{"details":"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.","returns":{"_0":"The tick spacing"}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}}},"title":"Pool state that never changes","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"factory()":"c45a0155","fee()":"ddca3f43","maxLiquidityPerTick()":"70cf754a","tickSpacing()":"d0c93a7c","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"},"fee()":{"notice":"The pool's fee in hundredths of a bip, i.e. 1e-6"},"maxLiquidityPerTick()":{"notice":"The maximum amount of position liquidity that can use any tick in the range"},"tickSpacing()":{"notice":"The pool tick spacing"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"}},"notice":"These parameters are fixed for a pool forever, i.e., the methods will always return the same values","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"IUniswapV3PoolOwnerActions":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"setFeeProtocol(uint8,uint8)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}}},"title":"Permissioned pool actions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint8,uint8)":"8206a4d1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"setFeeProtocol(uint8,uint8)":{"notice":"Set the denominator of the protocol's % share of the fees"}},"notice":"Contains pool methods that may only be called by the factory owner","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"IUniswapV3PoolState":{"abi":[{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"feeGrowthGlobal0X128()":{"details":"This value can overflow the uint256"},"feeGrowthGlobal1X128()":{"details":"This value can overflow the uint256"},"liquidity()":{"details":"This value has no relationship to the total liquidity across all ticks"},"observations(uint256)":{"details":"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.","params":{"index":"The element of the observations array to fetch"},"returns":{"blockTimestamp":"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"}},"positions(bytes32)":{"params":{"key":"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"},"returns":{"_liquidity":"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"}},"protocolFees()":{"details":"Protocol fees will never exceed uint128 max in either token"},"slot0()":{"returns":{"sqrtPriceX96":"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."}}},"title":"Pool state that can change","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","liquidity()":"1a686502","observations(uint256)":"252c09d7","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","slot0()":"3850c7bd","tickBitmap(int16)":"5339c296","ticks(int24)":"f30dba93"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"feeGrowthGlobal0X128()":{"notice":"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"},"feeGrowthGlobal1X128()":{"notice":"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"},"liquidity()":{"notice":"The currently in range liquidity available to the pool"},"observations(uint256)":{"notice":"Returns data about a specific observation index"},"positions(bytes32)":{"notice":"Returns the information about a position by the position's key"},"protocolFees()":{"notice":"The amounts of token0 and token1 that are owed to the protocol"},"slot0()":{"notice":"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."},"tickBitmap(int16)":{"notice":"Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"}},"notice":"These methods compose the pool's state, and can change with any frequency including multiple times per transaction","version":1}}},"contracts/SyncswapClassicDEXIntegration.sol":{"SyncswapClassicDEXIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Locked","type":"error"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"}],"name":"validatePair","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_548":{"entryPoint":null,"id":548,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":73,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:18","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:18"},"nodeType":"YulFunctionCall","src":"143:12:18"},"nodeType":"YulExpressionStatement","src":"143:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:18"},"nodeType":"YulFunctionCall","src":"112:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:18"},"nodeType":"YulFunctionCall","src":"108:32:18"},"nodeType":"YulIf","src":"105:52:18"},{"nodeType":"YulVariableDeclaration","src":"166:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:18"},"nodeType":"YulFunctionCall","src":"179:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:18"},"nodeType":"YulFunctionCall","src":"260:12:18"},"nodeType":"YulExpressionStatement","src":"260:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:18"},"nodeType":"YulFunctionCall","src":"239:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:18"},"nodeType":"YulFunctionCall","src":"235:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:18"},"nodeType":"YulFunctionCall","src":"224:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:18"},"nodeType":"YulFunctionCall","src":"214:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:18"},"nodeType":"YulFunctionCall","src":"207:50:18"},"nodeType":"YulIf","src":"204:70:18"},{"nodeType":"YulAssignment","src":"283:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:18"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:18","type":""}],"src":"14:290:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052600160005534801561001557600080fd5b50604051610b2c380380610b2c83398101604081905261003491610049565b60601b6001600160601b031916608052610079565b60006020828403121561005b57600080fd5b81516001600160a01b038116811461007257600080fd5b9392505050565b60805160601c610a8f61009d6000396000818160d001526106340152610a8f6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634aa066521461005c57806353b609b5146100825780639331621214610095578063b88c5f91146100a8578063c45a0155146100cb575b600080fd5b61006f61006a366004610889565b61010a565b6040519081526020015b60405180910390f35b61006f610090366004610889565b61011f565b61006f6100a336600461083e565b61012c565b6100bb6100b6366004610805565b6104a7565b6040519015158152602001610079565b6100f27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610079565b60006101178484846104fe565b949350505050565b60006101178484846105b1565b60008054600114610150576040516303cb96db60e21b815260040160405180910390fd5b60008080556040516370a0823160e01b81523060048201526001600160a01b038616906370a082319060240160206040518083038186803b15801561019457600080fd5b505afa1580156101a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cc9190610952565b90506101d98585836104fe565b91506000821161024f5760405162461bcd60e51b815260206004820152603660248201527f53796e6373776170436c6173736963496e746567726174696f6e3a20494e535560448201527511919250d251539517d3d55514155517d05353d5539560521b60648201526084015b60405180910390fd5b600061025b868661060a565b90506001600160a01b0381166102c45760405162461bcd60e51b815260206004820152602860248201527f53796e6373776170436c6173736963496e746567726174696f6e3a20494e56416044820152672624a22fa820a4a960c11b6064820152608401610246565b6102cf8682846106b7565b6040516370a0823160e01b81526001600160a01b038581166004830152600091908716906370a082319060240160206040518083038186803b15801561031457600080fd5b505afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190610952565b604080516001600160a01b03808b1660208301528816918101919091526002606082015290915060009060800160408051601f1981840301815290829052637132bb7f60e01b825291506001600160a01b03841690637132bb7f906103ba9084903390600090600401610987565b6040805180830381600087803b1580156103d357600080fd5b505af11580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b91906108ec565b506040516370a0823160e01b81526001600160a01b038781166004830152600091908916906370a082319060240160206040518083038186803b15801561045157600080fd5b505afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610952565b905061049583826109ec565b60016000559998505050505050505050565b6000816001600160a01b0316836001600160a01b031614156104cb575060006104f8565b60006104d7848461060a565b90506001600160a01b038116156104f25760019150506104f8565b60009150505b92915050565b60008061050b858561060a565b90506001600160a01b038116156105a95760405160016231ba9d60e11b031981526001600160a01b0386811660048301526024820185905230604483015282169063ff9c8ac6906064015b60206040518083038186803b15801561056e57600080fd5b505afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190610952565b91505b509392505050565b6000806105be858561060a565b90506001600160a01b038116156105a95760405163a287c79560e01b81526001600160a01b0385811660048301526024820185905230604483015282169063a287c79590606401610556565b60405163298d501f60e11b81526001600160a01b03838116600483015282811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063531aa03e9060440160206040518083038186803b15801561067857600080fd5b505afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b091906107e8565b9392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610713919061096b565b6000604051808303816000865af19150503d8060008114610750576040519150601f19603f3d011682016040523d82523d6000602084013e610755565b606091505b509150915081801561077f57508051158061077f57508080602001905181019061077f91906108ca565b6107e15760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b6064820152608401610246565b5050505050565b6000602082840312156107fa57600080fd5b81516106b081610a41565b6000806040838503121561081857600080fd5b823561082381610a41565b9150602083013561083381610a41565b809150509250929050565b60008060006060848603121561085357600080fd5b833561085e81610a41565b9250602084013561086e81610a41565b9150604084013561087e81610a41565b809150509250925092565b60008060006060848603121561089e57600080fd5b83356108a981610a41565b925060208401356108b981610a41565b929592945050506040919091013590565b6000602082840312156108dc57600080fd5b815180151581146106b057600080fd5b6000604082840312156108fe57600080fd5b6040516040810181811067ffffffffffffffff8211171561092f57634e487b7160e01b600052604160045260246000fd5b604052825161093d81610a41565b81526020928301519281019290925250919050565b60006020828403121561096457600080fd5b5051919050565b6000825161097d818460208701610a11565b9190910192915050565b60808152600084518060808401526109a68160a0850160208901610a11565b6001600160a01b03948516602084015292909316604082015260a0601f909201601f19168101818103830160609092019190915260009181019190915260c00192915050565b600082821015610a0c57634e487b7160e01b600052601160045260246000fd5b500390565b60005b83811015610a2c578181015183820152602001610a14565b83811115610a3b576000848401525b50505050565b6001600160a01b0381168114610a5657600080fd5b5056fea2646970667358221220c25ce5a0fc1b13c5003d4b146e4fb2608c5a581be831d9561933ec25d5108a4664736f6c63430008070033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB2C CODESIZE SUB DUP1 PUSH2 0xB2C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x34 SWAP2 PUSH2 0x49 JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH2 0x79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0xA8F PUSH2 0x9D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xD0 ADD MSTORE PUSH2 0x634 ADD MSTORE PUSH2 0xA8F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x53B609B5 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x93316212 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB88C5F91 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH2 0x6F PUSH2 0xA3 CALLDATASIZE PUSH1 0x4 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xF2 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP5 DUP5 DUP5 PUSH2 0x4FE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP5 DUP5 DUP5 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 EQ PUSH2 0x150 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3CB96DB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9 DUP6 DUP6 DUP4 PUSH2 0x4FE JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E6373776170436C6173736963496E746567726174696F6E3A20494E5355 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x11919250D251539517D3D55514155517D05353D55395 PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25B DUP7 DUP7 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E6373776170436C6173736963496E746567726174696F6E3A20494E5641 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2624A22FA820A4A9 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x246 JUMP JUMPDEST PUSH2 0x2CF DUP7 DUP3 DUP5 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x328 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x20 DUP4 ADD MSTORE DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH4 0x7132BB7F PUSH1 0xE0 SHL DUP3 MSTORE SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x7132BB7F SWAP1 PUSH2 0x3BA SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x465 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST SWAP1 POP PUSH2 0x495 DUP4 DUP3 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x4CB JUMPI POP PUSH1 0x0 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D7 DUP5 DUP5 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x50B DUP6 DUP6 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0x31BA9D PUSH1 0xE1 SHL SUB NOT DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xFF9C8AC6 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x582 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5BE DUP6 DUP6 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA287C795 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xA287C795 SWAP1 PUSH1 0x64 ADD PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x298D501F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x531AA03E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x713 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x755 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x77F JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x77F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x246 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6B0 DUP2 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x823 DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x833 DUP2 PUSH2 0xA41 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x85E DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x86E DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x87E DUP2 PUSH2 0xA41 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x8A9 DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x8B9 DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x92F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x93D DUP2 PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x97D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xA11 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 DUP5 MLOAD DUP1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x9A6 DUP2 PUSH1 0xA0 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP2 DUP2 SUB DUP4 ADD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xA0C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA2C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA14 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0x5C 0xE5 LOG0 0xFC SHL SGT 0xC5 STOP RETURNDATASIZE 0x4B EQ PUSH15 0x4FB2608C5A581BE831D9561933EC25 0xD5 LT DUP11 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"323:2951:8:-:0;;;122:1:11;95:28;;436:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;476:18;;-1:-1:-1;;;;;;476:18:8;;;323:2951;;14:290:18;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:18;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:18:o;:::-;323:2951:8;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_getAmountIn_685":{"entryPoint":1457,"id":685,"parameterSlots":3,"returnSlots":1},"@_getAmountOut_644":{"entryPoint":1278,"id":644,"parameterSlots":3,"returnSlots":1},"@_getPair_566":{"entryPoint":1546,"id":566,"parameterSlots":2,"returnSlots":1},"@factory_538":{"entryPoint":null,"id":538,"parameterSlots":0,"returnSlots":0},"@getAmountIn_727":{"entryPoint":287,"id":727,"parameterSlots":3,"returnSlots":1},"@getAmountOut_706":{"entryPoint":266,"id":706,"parameterSlots":3,"returnSlots":1},"@safeTransfer_1482":{"entryPoint":1719,"id":1482,"parameterSlots":3,"returnSlots":0},"@swap_841":{"entryPoint":300,"id":841,"parameterSlots":3,"returnSlots":1},"@validatePair_603":{"entryPoint":1191,"id":603,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":2024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2053,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_address":{"entryPoint":2110,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2185,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_TokenAmount_$1327_memory_ptr_fromMemory":{"entryPoint":2284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_rational_2_by_1__to_t_address_t_address_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_address_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2439,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_242e54d8e0a6f1ffa9816b6b145be3b6631dbcb1a44d02c3fbf29e990c24e561__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_326e418174ed41afe1047de774986812b8438b4cd50895c151d78d4d29e87e3b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2540,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2577,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":2625,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7708:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:170:18","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:18"},"nodeType":"YulFunctionCall","src":"143:12:18"},"nodeType":"YulExpressionStatement","src":"143:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:18"},"nodeType":"YulFunctionCall","src":"112:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:18"},"nodeType":"YulFunctionCall","src":"108:32:18"},"nodeType":"YulIf","src":"105:52:18"},{"nodeType":"YulVariableDeclaration","src":"166:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:18"},"nodeType":"YulFunctionCall","src":"179:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"204:24:18"},"nodeType":"YulFunctionCall","src":"204:31:18"},"nodeType":"YulExpressionStatement","src":"204:31:18"},{"nodeType":"YulAssignment","src":"244:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"254:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"244:6:18"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:18","type":""}],"src":"14:251:18"},{"body":{"nodeType":"YulBlock","src":"357:301:18","statements":[{"body":{"nodeType":"YulBlock","src":"403:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"415:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"405:6:18"},"nodeType":"YulFunctionCall","src":"405:12:18"},"nodeType":"YulExpressionStatement","src":"405:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"378:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"387:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"374:3:18"},"nodeType":"YulFunctionCall","src":"374:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"399:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"370:3:18"},"nodeType":"YulFunctionCall","src":"370:32:18"},"nodeType":"YulIf","src":"367:52:18"},{"nodeType":"YulVariableDeclaration","src":"428:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"441:12:18"},"nodeType":"YulFunctionCall","src":"441:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"432:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"473:24:18"},"nodeType":"YulFunctionCall","src":"473:31:18"},"nodeType":"YulExpressionStatement","src":"473:31:18"},{"nodeType":"YulAssignment","src":"513:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"523:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"513:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"537:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"569:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"580:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"565:3:18"},"nodeType":"YulFunctionCall","src":"565:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"552:12:18"},"nodeType":"YulFunctionCall","src":"552:32:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"541:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"618:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"593:24:18"},"nodeType":"YulFunctionCall","src":"593:33:18"},"nodeType":"YulExpressionStatement","src":"593:33:18"},{"nodeType":"YulAssignment","src":"635:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"645:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"635:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"315:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"326:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"338:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"346:6:18","type":""}],"src":"270:388:18"},{"body":{"nodeType":"YulBlock","src":"767:425:18","statements":[{"body":{"nodeType":"YulBlock","src":"813:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"822:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"825:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"815:6:18"},"nodeType":"YulFunctionCall","src":"815:12:18"},"nodeType":"YulExpressionStatement","src":"815:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"788:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"797:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"784:3:18"},"nodeType":"YulFunctionCall","src":"784:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"809:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"780:3:18"},"nodeType":"YulFunctionCall","src":"780:32:18"},"nodeType":"YulIf","src":"777:52:18"},{"nodeType":"YulVariableDeclaration","src":"838:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"864:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"851:12:18"},"nodeType":"YulFunctionCall","src":"851:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"842:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"908:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"883:24:18"},"nodeType":"YulFunctionCall","src":"883:31:18"},"nodeType":"YulExpressionStatement","src":"883:31:18"},{"nodeType":"YulAssignment","src":"923:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"933:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"923:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"947:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:18"},"nodeType":"YulFunctionCall","src":"975:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"962:12:18"},"nodeType":"YulFunctionCall","src":"962:32:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"951:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1028:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1003:24:18"},"nodeType":"YulFunctionCall","src":"1003:33:18"},"nodeType":"YulExpressionStatement","src":"1003:33:18"},{"nodeType":"YulAssignment","src":"1045:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1055:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1045:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1071:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1103:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1114:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1099:3:18"},"nodeType":"YulFunctionCall","src":"1099:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1086:12:18"},"nodeType":"YulFunctionCall","src":"1086:32:18"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1075:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1152:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1127:24:18"},"nodeType":"YulFunctionCall","src":"1127:33:18"},"nodeType":"YulExpressionStatement","src":"1127:33:18"},{"nodeType":"YulAssignment","src":"1169:17:18","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1179:7:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1169:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"717:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"728:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"740:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"748:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"756:6:18","type":""}],"src":"663:529:18"},{"body":{"nodeType":"YulBlock","src":"1301:352:18","statements":[{"body":{"nodeType":"YulBlock","src":"1347:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1356:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1359:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1349:6:18"},"nodeType":"YulFunctionCall","src":"1349:12:18"},"nodeType":"YulExpressionStatement","src":"1349:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1322:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1331:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1318:3:18"},"nodeType":"YulFunctionCall","src":"1318:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1343:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1314:3:18"},"nodeType":"YulFunctionCall","src":"1314:32:18"},"nodeType":"YulIf","src":"1311:52:18"},{"nodeType":"YulVariableDeclaration","src":"1372:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1385:12:18"},"nodeType":"YulFunctionCall","src":"1385:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1376:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1442:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1417:24:18"},"nodeType":"YulFunctionCall","src":"1417:31:18"},"nodeType":"YulExpressionStatement","src":"1417:31:18"},{"nodeType":"YulAssignment","src":"1457:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1467:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1457:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1481:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1513:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1509:3:18"},"nodeType":"YulFunctionCall","src":"1509:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1496:12:18"},"nodeType":"YulFunctionCall","src":"1496:32:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1485:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1562:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1537:24:18"},"nodeType":"YulFunctionCall","src":"1537:33:18"},"nodeType":"YulExpressionStatement","src":"1537:33:18"},{"nodeType":"YulAssignment","src":"1579:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1589:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1579:6:18"}]},{"nodeType":"YulAssignment","src":"1605:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1632:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1643:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1628:3:18"},"nodeType":"YulFunctionCall","src":"1628:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1615:12:18"},"nodeType":"YulFunctionCall","src":"1615:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1605:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1251:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1262:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1274:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1282:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1290:6:18","type":""}],"src":"1197:456:18"},{"body":{"nodeType":"YulBlock","src":"1736:199:18","statements":[{"body":{"nodeType":"YulBlock","src":"1782:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1784:6:18"},"nodeType":"YulFunctionCall","src":"1784:12:18"},"nodeType":"YulExpressionStatement","src":"1784:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1757:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1766:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1753:3:18"},"nodeType":"YulFunctionCall","src":"1753:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1778:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1749:3:18"},"nodeType":"YulFunctionCall","src":"1749:32:18"},"nodeType":"YulIf","src":"1746:52:18"},{"nodeType":"YulVariableDeclaration","src":"1807:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1826:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1820:5:18"},"nodeType":"YulFunctionCall","src":"1820:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1811:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1889:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1898:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1901:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1891:6:18"},"nodeType":"YulFunctionCall","src":"1891:12:18"},"nodeType":"YulExpressionStatement","src":"1891:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1858:5:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1879:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1872:6:18"},"nodeType":"YulFunctionCall","src":"1872:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1865:6:18"},"nodeType":"YulFunctionCall","src":"1865:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1855:2:18"},"nodeType":"YulFunctionCall","src":"1855:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1848:6:18"},"nodeType":"YulFunctionCall","src":"1848:40:18"},"nodeType":"YulIf","src":"1845:60:18"},{"nodeType":"YulAssignment","src":"1914:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1924:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1914:6:18"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1702:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1713:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1725:6:18","type":""}],"src":"1658:277:18"},{"body":{"nodeType":"YulBlock","src":"2050:559:18","statements":[{"body":{"nodeType":"YulBlock","src":"2096:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2105:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2108:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2098:6:18"},"nodeType":"YulFunctionCall","src":"2098:12:18"},"nodeType":"YulExpressionStatement","src":"2098:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2071:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2080:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2067:3:18"},"nodeType":"YulFunctionCall","src":"2067:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2092:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2063:3:18"},"nodeType":"YulFunctionCall","src":"2063:32:18"},"nodeType":"YulIf","src":"2060:52:18"},{"nodeType":"YulVariableDeclaration","src":"2121:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2141:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2135:5:18"},"nodeType":"YulFunctionCall","src":"2135:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2125:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2153:33:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2175:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2183:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2171:3:18"},"nodeType":"YulFunctionCall","src":"2171:15:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2157:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2269:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2290:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2297:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2302:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2293:3:18"},"nodeType":"YulFunctionCall","src":"2293:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2283:6:18"},"nodeType":"YulFunctionCall","src":"2283:31:18"},"nodeType":"YulExpressionStatement","src":"2283:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2334:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2337:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2327:6:18"},"nodeType":"YulFunctionCall","src":"2327:15:18"},"nodeType":"YulExpressionStatement","src":"2327:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2362:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2365:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2355:6:18"},"nodeType":"YulFunctionCall","src":"2355:15:18"},"nodeType":"YulExpressionStatement","src":"2355:15:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2204:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"2216:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2201:2:18"},"nodeType":"YulFunctionCall","src":"2201:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2240:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2252:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2237:2:18"},"nodeType":"YulFunctionCall","src":"2237:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2198:2:18"},"nodeType":"YulFunctionCall","src":"2198:62:18"},"nodeType":"YulIf","src":"2195:185:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2396:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2400:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2389:6:18"},"nodeType":"YulFunctionCall","src":"2389:22:18"},"nodeType":"YulExpressionStatement","src":"2389:22:18"},{"nodeType":"YulVariableDeclaration","src":"2420:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2439:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2433:5:18"},"nodeType":"YulFunctionCall","src":"2433:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2424:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2483:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2458:24:18"},"nodeType":"YulFunctionCall","src":"2458:31:18"},"nodeType":"YulExpressionStatement","src":"2458:31:18"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2505:6:18"},{"name":"value","nodeType":"YulIdentifier","src":"2513:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2498:6:18"},"nodeType":"YulFunctionCall","src":"2498:21:18"},"nodeType":"YulExpressionStatement","src":"2498:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2539:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2547:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:18"},"nodeType":"YulFunctionCall","src":"2535:15:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2562:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2573:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2558:3:18"},"nodeType":"YulFunctionCall","src":"2558:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2552:5:18"},"nodeType":"YulFunctionCall","src":"2552:25:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2528:6:18"},"nodeType":"YulFunctionCall","src":"2528:50:18"},"nodeType":"YulExpressionStatement","src":"2528:50:18"},{"nodeType":"YulAssignment","src":"2587:16:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2597:6:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2587:6:18"}]}]},"name":"abi_decode_tuple_t_struct$_TokenAmount_$1327_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2016:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2027:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2039:6:18","type":""}],"src":"1940:669:18"},{"body":{"nodeType":"YulBlock","src":"2695:103:18","statements":[{"body":{"nodeType":"YulBlock","src":"2741:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2750:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2753:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2743:6:18"},"nodeType":"YulFunctionCall","src":"2743:12:18"},"nodeType":"YulExpressionStatement","src":"2743:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2716:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2725:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2712:3:18"},"nodeType":"YulFunctionCall","src":"2712:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2737:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2708:3:18"},"nodeType":"YulFunctionCall","src":"2708:32:18"},"nodeType":"YulIf","src":"2705:52:18"},{"nodeType":"YulAssignment","src":"2766:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2782:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2776:5:18"},"nodeType":"YulFunctionCall","src":"2776:16:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2766:6:18"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2661:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2672:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2684:6:18","type":""}],"src":"2614:184:18"},{"body":{"nodeType":"YulBlock","src":"2940:137:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2950:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2970:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2964:5:18"},"nodeType":"YulFunctionCall","src":"2964:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2954:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3012:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3020:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3008:3:18"},"nodeType":"YulFunctionCall","src":"3008:17:18"},{"name":"pos","nodeType":"YulIdentifier","src":"3027:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"3032:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2986:21:18"},"nodeType":"YulFunctionCall","src":"2986:53:18"},"nodeType":"YulExpressionStatement","src":"2986:53:18"},{"nodeType":"YulAssignment","src":"3048:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3059:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"3064:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3055:3:18"},"nodeType":"YulFunctionCall","src":"3055:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3048:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2916:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2921:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2932:3:18","type":""}],"src":"2803:274:18"},{"body":{"nodeType":"YulBlock","src":"3183:102:18","statements":[{"nodeType":"YulAssignment","src":"3193:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3205:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3216:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3201:3:18"},"nodeType":"YulFunctionCall","src":"3201:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3193:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3235:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3250:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3266:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3271:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3262:3:18"},"nodeType":"YulFunctionCall","src":"3262:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3275:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3258:3:18"},"nodeType":"YulFunctionCall","src":"3258:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3246:3:18"},"nodeType":"YulFunctionCall","src":"3246:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3228:6:18"},"nodeType":"YulFunctionCall","src":"3228:51:18"},"nodeType":"YulExpressionStatement","src":"3228:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3152:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3163:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3174:4:18","type":""}],"src":"3082:203:18"},{"body":{"nodeType":"YulBlock","src":"3419:175:18","statements":[{"nodeType":"YulAssignment","src":"3429:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3441:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3452:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3437:3:18"},"nodeType":"YulFunctionCall","src":"3437:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3429:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"3464:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3482:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3487:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3478:3:18"},"nodeType":"YulFunctionCall","src":"3478:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3491:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3474:3:18"},"nodeType":"YulFunctionCall","src":"3474:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3468:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3509:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3524:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3532:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3520:3:18"},"nodeType":"YulFunctionCall","src":"3520:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3502:6:18"},"nodeType":"YulFunctionCall","src":"3502:34:18"},"nodeType":"YulExpressionStatement","src":"3502:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3556:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3567:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3552:3:18"},"nodeType":"YulFunctionCall","src":"3552:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3576:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3584:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3572:3:18"},"nodeType":"YulFunctionCall","src":"3572:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3545:6:18"},"nodeType":"YulFunctionCall","src":"3545:43:18"},"nodeType":"YulExpressionStatement","src":"3545:43:18"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3380:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3391:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3399:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3410:4:18","type":""}],"src":"3290:304:18"},{"body":{"nodeType":"YulBlock","src":"3762:229:18","statements":[{"nodeType":"YulAssignment","src":"3772:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3784:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3795:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3780:3:18"},"nodeType":"YulFunctionCall","src":"3780:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3772:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"3807:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3825:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3821:3:18"},"nodeType":"YulFunctionCall","src":"3821:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3834:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3817:3:18"},"nodeType":"YulFunctionCall","src":"3817:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3811:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3852:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3867:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3875:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3863:3:18"},"nodeType":"YulFunctionCall","src":"3863:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3845:6:18"},"nodeType":"YulFunctionCall","src":"3845:34:18"},"nodeType":"YulExpressionStatement","src":"3845:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3899:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3910:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3895:3:18"},"nodeType":"YulFunctionCall","src":"3895:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3919:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3927:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3915:3:18"},"nodeType":"YulFunctionCall","src":"3915:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:18"},"nodeType":"YulFunctionCall","src":"3888:43:18"},"nodeType":"YulExpressionStatement","src":"3888:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3951:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3962:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3947:3:18"},"nodeType":"YulFunctionCall","src":"3947:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3971:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3979:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3967:3:18"},"nodeType":"YulFunctionCall","src":"3967:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3940:6:18"},"nodeType":"YulFunctionCall","src":"3940:45:18"},"nodeType":"YulExpressionStatement","src":"3940:45:18"}]},"name":"abi_encode_tuple_t_address_t_address_t_rational_2_by_1__to_t_address_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3715:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3726:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3734:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3742:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3753:4:18","type":""}],"src":"3599:392:18"},{"body":{"nodeType":"YulBlock","src":"4125:145:18","statements":[{"nodeType":"YulAssignment","src":"4135:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4147:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4158:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4143:3:18"},"nodeType":"YulFunctionCall","src":"4143:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4135:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4177:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4192:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4208:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4213:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4204:3:18"},"nodeType":"YulFunctionCall","src":"4204:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"4217:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4200:3:18"},"nodeType":"YulFunctionCall","src":"4200:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4188:3:18"},"nodeType":"YulFunctionCall","src":"4188:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4170:6:18"},"nodeType":"YulFunctionCall","src":"4170:51:18"},"nodeType":"YulExpressionStatement","src":"4170:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4241:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4252:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4237:3:18"},"nodeType":"YulFunctionCall","src":"4237:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4230:6:18"},"nodeType":"YulFunctionCall","src":"4230:34:18"},"nodeType":"YulExpressionStatement","src":"4230:34:18"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4086:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4097:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4105:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4116:4:18","type":""}],"src":"3996:274:18"},{"body":{"nodeType":"YulBlock","src":"4432:218:18","statements":[{"nodeType":"YulAssignment","src":"4442:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4454:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4465:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:18"},"nodeType":"YulFunctionCall","src":"4450:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4442:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"4477:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4495:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4500:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4491:3:18"},"nodeType":"YulFunctionCall","src":"4491:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"4504:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4487:3:18"},"nodeType":"YulFunctionCall","src":"4487:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4481:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4522:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4537:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4545:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4533:3:18"},"nodeType":"YulFunctionCall","src":"4533:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4515:6:18"},"nodeType":"YulFunctionCall","src":"4515:34:18"},"nodeType":"YulExpressionStatement","src":"4515:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4569:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4580:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4565:3:18"},"nodeType":"YulFunctionCall","src":"4565:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"4585:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4558:6:18"},"nodeType":"YulFunctionCall","src":"4558:34:18"},"nodeType":"YulExpressionStatement","src":"4558:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4612:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4623:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:18"},"nodeType":"YulFunctionCall","src":"4608:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4632:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4640:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4628:3:18"},"nodeType":"YulFunctionCall","src":"4628:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4601:6:18"},"nodeType":"YulFunctionCall","src":"4601:43:18"},"nodeType":"YulExpressionStatement","src":"4601:43:18"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4385:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4396:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4404:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4412:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4423:4:18","type":""}],"src":"4275:375:18"},{"body":{"nodeType":"YulBlock","src":"4750:92:18","statements":[{"nodeType":"YulAssignment","src":"4760:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4772:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4783:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4768:3:18"},"nodeType":"YulFunctionCall","src":"4768:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4760:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4802:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4827:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4820:6:18"},"nodeType":"YulFunctionCall","src":"4820:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4813:6:18"},"nodeType":"YulFunctionCall","src":"4813:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4795:6:18"},"nodeType":"YulFunctionCall","src":"4795:41:18"},"nodeType":"YulExpressionStatement","src":"4795:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4719:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4730:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4741:4:18","type":""}],"src":"4655:187:18"},{"body":{"nodeType":"YulBlock","src":"5122:530:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5139:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5150:3:18","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5132:6:18"},"nodeType":"YulFunctionCall","src":"5132:22:18"},"nodeType":"YulExpressionStatement","src":"5132:22:18"},{"nodeType":"YulVariableDeclaration","src":"5163:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5183:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5177:5:18"},"nodeType":"YulFunctionCall","src":"5177:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5167:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5221:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:18"},"nodeType":"YulFunctionCall","src":"5206:19:18"},{"name":"length","nodeType":"YulIdentifier","src":"5227:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:18"},"nodeType":"YulFunctionCall","src":"5199:35:18"},"nodeType":"YulExpressionStatement","src":"5199:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5269:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5277:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5265:3:18"},"nodeType":"YulFunctionCall","src":"5265:17:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5288:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5299:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5284:3:18"},"nodeType":"YulFunctionCall","src":"5284:19:18"},{"name":"length","nodeType":"YulIdentifier","src":"5305:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5243:21:18"},"nodeType":"YulFunctionCall","src":"5243:69:18"},"nodeType":"YulExpressionStatement","src":"5243:69:18"},{"nodeType":"YulVariableDeclaration","src":"5321:55:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5335:9:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5354:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5362:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5350:3:18"},"nodeType":"YulFunctionCall","src":"5350:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5371:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5367:3:18"},"nodeType":"YulFunctionCall","src":"5367:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5346:3:18"},"nodeType":"YulFunctionCall","src":"5346:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5331:3:18"},"nodeType":"YulFunctionCall","src":"5331:45:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5325:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5385:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5403:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5408:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5399:3:18"},"nodeType":"YulFunctionCall","src":"5399:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"5412:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5395:3:18"},"nodeType":"YulFunctionCall","src":"5395:19:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5389:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5434:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5445:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5430:3:18"},"nodeType":"YulFunctionCall","src":"5430:20:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5456:6:18"},{"name":"_2","nodeType":"YulIdentifier","src":"5464:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5452:3:18"},"nodeType":"YulFunctionCall","src":"5452:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5423:6:18"},"nodeType":"YulFunctionCall","src":"5423:45:18"},"nodeType":"YulExpressionStatement","src":"5423:45:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5488:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5499:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5484:3:18"},"nodeType":"YulFunctionCall","src":"5484:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5508:6:18"},{"name":"_2","nodeType":"YulIdentifier","src":"5516:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5504:3:18"},"nodeType":"YulFunctionCall","src":"5504:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5477:6:18"},"nodeType":"YulFunctionCall","src":"5477:43:18"},"nodeType":"YulExpressionStatement","src":"5477:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5540:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5551:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5536:3:18"},"nodeType":"YulFunctionCall","src":"5536:18:18"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5564:2:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5568:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5560:3:18"},"nodeType":"YulFunctionCall","src":"5560:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"5580:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5556:3:18"},"nodeType":"YulFunctionCall","src":"5556:28:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5529:6:18"},"nodeType":"YulFunctionCall","src":"5529:56:18"},"nodeType":"YulExpressionStatement","src":"5529:56:18"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5605:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"5609:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5601:3:18"},"nodeType":"YulFunctionCall","src":"5601:12:18"},{"kind":"number","nodeType":"YulLiteral","src":"5615:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5594:6:18"},"nodeType":"YulFunctionCall","src":"5594:23:18"},"nodeType":"YulExpressionStatement","src":"5594:23:18"},{"nodeType":"YulAssignment","src":"5626:20:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5638:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"5642:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5634:3:18"},"nodeType":"YulFunctionCall","src":"5634:12:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5626:4:18"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_address_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5075:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5086:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5094:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5102:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5113:4:18","type":""}],"src":"4847:805:18"},{"body":{"nodeType":"YulBlock","src":"5831:230:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5848:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5859:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5841:6:18"},"nodeType":"YulFunctionCall","src":"5841:21:18"},"nodeType":"YulExpressionStatement","src":"5841:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5882:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5893:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5878:3:18"},"nodeType":"YulFunctionCall","src":"5878:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"5898:2:18","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5871:6:18"},"nodeType":"YulFunctionCall","src":"5871:30:18"},"nodeType":"YulExpressionStatement","src":"5871:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5921:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5932:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5917:3:18"},"nodeType":"YulFunctionCall","src":"5917:18:18"},{"hexValue":"53796e6373776170436c6173736963496e746567726174696f6e3a20494e5641","kind":"string","nodeType":"YulLiteral","src":"5937:34:18","type":"","value":"SyncswapClassicIntegration: INVA"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5910:6:18"},"nodeType":"YulFunctionCall","src":"5910:62:18"},"nodeType":"YulExpressionStatement","src":"5910:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5992:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6003:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5988:3:18"},"nodeType":"YulFunctionCall","src":"5988:18:18"},{"hexValue":"4c49445f50414952","kind":"string","nodeType":"YulLiteral","src":"6008:10:18","type":"","value":"LID_PAIR"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5981:6:18"},"nodeType":"YulFunctionCall","src":"5981:38:18"},"nodeType":"YulExpressionStatement","src":"5981:38:18"},{"nodeType":"YulAssignment","src":"6028:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6040:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6051:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6036:3:18"},"nodeType":"YulFunctionCall","src":"6036:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6028:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_242e54d8e0a6f1ffa9816b6b145be3b6631dbcb1a44d02c3fbf29e990c24e561__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5808:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5822:4:18","type":""}],"src":"5657:404:18"},{"body":{"nodeType":"YulBlock","src":"6240:244:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6257:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6268:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6250:6:18"},"nodeType":"YulFunctionCall","src":"6250:21:18"},"nodeType":"YulExpressionStatement","src":"6250:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6291:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6302:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6287:3:18"},"nodeType":"YulFunctionCall","src":"6287:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6307:2:18","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6280:6:18"},"nodeType":"YulFunctionCall","src":"6280:30:18"},"nodeType":"YulExpressionStatement","src":"6280:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6330:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6341:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6326:3:18"},"nodeType":"YulFunctionCall","src":"6326:18:18"},{"hexValue":"53796e6373776170436c6173736963496e746567726174696f6e3a20494e5355","kind":"string","nodeType":"YulLiteral","src":"6346:34:18","type":"","value":"SyncswapClassicIntegration: INSU"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6319:6:18"},"nodeType":"YulFunctionCall","src":"6319:62:18"},"nodeType":"YulExpressionStatement","src":"6319:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6401:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6412:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6397:3:18"},"nodeType":"YulFunctionCall","src":"6397:18:18"},{"hexValue":"4646494349454e545f4f55545055545f414d4f554e54","kind":"string","nodeType":"YulLiteral","src":"6417:24:18","type":"","value":"FFICIENT_OUTPUT_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6390:6:18"},"nodeType":"YulFunctionCall","src":"6390:52:18"},"nodeType":"YulExpressionStatement","src":"6390:52:18"},{"nodeType":"YulAssignment","src":"6451:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6463:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6474:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6459:3:18"},"nodeType":"YulFunctionCall","src":"6459:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6451:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_326e418174ed41afe1047de774986812b8438b4cd50895c151d78d4d29e87e3b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6217:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6231:4:18","type":""}],"src":"6066:418:18"},{"body":{"nodeType":"YulBlock","src":"6663:235:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6680:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6691:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6673:6:18"},"nodeType":"YulFunctionCall","src":"6673:21:18"},"nodeType":"YulExpressionStatement","src":"6673:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6714:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6725:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6710:3:18"},"nodeType":"YulFunctionCall","src":"6710:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6730:2:18","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6703:6:18"},"nodeType":"YulFunctionCall","src":"6703:30:18"},"nodeType":"YulExpressionStatement","src":"6703:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6753:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6764:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6749:3:18"},"nodeType":"YulFunctionCall","src":"6749:18:18"},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665723a207472","kind":"string","nodeType":"YulLiteral","src":"6769:34:18","type":"","value":"TransferHelper::safeTransfer: tr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6742:6:18"},"nodeType":"YulFunctionCall","src":"6742:62:18"},"nodeType":"YulExpressionStatement","src":"6742:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6824:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6835:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6820:3:18"},"nodeType":"YulFunctionCall","src":"6820:18:18"},{"hexValue":"616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"6840:15:18","type":"","value":"ansfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6813:6:18"},"nodeType":"YulFunctionCall","src":"6813:43:18"},"nodeType":"YulExpressionStatement","src":"6813:43:18"},{"nodeType":"YulAssignment","src":"6865:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6877:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6888:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6873:3:18"},"nodeType":"YulFunctionCall","src":"6873:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6865:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6640:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6654:4:18","type":""}],"src":"6489:409:18"},{"body":{"nodeType":"YulBlock","src":"7004:76:18","statements":[{"nodeType":"YulAssignment","src":"7014:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7026:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7037:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7022:3:18"},"nodeType":"YulFunctionCall","src":"7022:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7014:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7056:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"7067:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7049:6:18"},"nodeType":"YulFunctionCall","src":"7049:25:18"},"nodeType":"YulExpressionStatement","src":"7049:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6973:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6984:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6995:4:18","type":""}],"src":"6903:177:18"},{"body":{"nodeType":"YulBlock","src":"7134:173:18","statements":[{"body":{"nodeType":"YulBlock","src":"7164:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7185:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7192:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7197:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7188:3:18"},"nodeType":"YulFunctionCall","src":"7188:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7178:6:18"},"nodeType":"YulFunctionCall","src":"7178:31:18"},"nodeType":"YulExpressionStatement","src":"7178:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7229:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7232:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7222:6:18"},"nodeType":"YulFunctionCall","src":"7222:15:18"},"nodeType":"YulExpressionStatement","src":"7222:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7257:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7260:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7250:6:18"},"nodeType":"YulFunctionCall","src":"7250:15:18"},"nodeType":"YulExpressionStatement","src":"7250:15:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7150:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"7153:1:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7147:2:18"},"nodeType":"YulFunctionCall","src":"7147:8:18"},"nodeType":"YulIf","src":"7144:131:18"},{"nodeType":"YulAssignment","src":"7284:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7296:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"7299:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7292:3:18"},"nodeType":"YulFunctionCall","src":"7292:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7284:4:18"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7116:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"7119:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7125:4:18","type":""}],"src":"7085:222:18"},{"body":{"nodeType":"YulBlock","src":"7365:205:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7375:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7384:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7379:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7444:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7469:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"7474:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7465:3:18"},"nodeType":"YulFunctionCall","src":"7465:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7488:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"7493:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7484:3:18"},"nodeType":"YulFunctionCall","src":"7484:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7478:5:18"},"nodeType":"YulFunctionCall","src":"7478:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7458:6:18"},"nodeType":"YulFunctionCall","src":"7458:39:18"},"nodeType":"YulExpressionStatement","src":"7458:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7405:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"7408:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7402:2:18"},"nodeType":"YulFunctionCall","src":"7402:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7416:19:18","statements":[{"nodeType":"YulAssignment","src":"7418:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7427:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"7430:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7423:3:18"},"nodeType":"YulFunctionCall","src":"7423:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7418:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"7398:3:18","statements":[]},"src":"7394:113:18"},{"body":{"nodeType":"YulBlock","src":"7533:31:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7546:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"7551:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7542:3:18"},"nodeType":"YulFunctionCall","src":"7542:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"7560:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7535:6:18"},"nodeType":"YulFunctionCall","src":"7535:27:18"},"nodeType":"YulExpressionStatement","src":"7535:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7522:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"7525:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7519:2:18"},"nodeType":"YulFunctionCall","src":"7519:13:18"},"nodeType":"YulIf","src":"7516:48:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7343:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7348:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"7353:6:18","type":""}],"src":"7312:258:18"},{"body":{"nodeType":"YulBlock","src":"7620:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"7684:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7693:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7696:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7686:6:18"},"nodeType":"YulFunctionCall","src":"7686:12:18"},"nodeType":"YulExpressionStatement","src":"7686:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7643:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7654:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7669:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7674:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7665:3:18"},"nodeType":"YulFunctionCall","src":"7665:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"7678:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7661:3:18"},"nodeType":"YulFunctionCall","src":"7661:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7650:3:18"},"nodeType":"YulFunctionCall","src":"7650:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7640:2:18"},"nodeType":"YulFunctionCall","src":"7640:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7633:6:18"},"nodeType":"YulFunctionCall","src":"7633:50:18"},"nodeType":"YulIf","src":"7630:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7609:5:18","type":""}],"src":"7575:131:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_TokenAmount_$1327_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        validator_revert_address(value)\n        mstore(memPtr, value)\n        mstore(add(memPtr, 32), mload(add(headStart, 32)))\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_2_by_1__to_t_address_t_address_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_address_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let length := mload(value0)\n        mstore(add(headStart, 128), length)\n        copy_memory_to_memory(add(value0, 0x20), add(headStart, 160), length)\n        let _1 := add(headStart, and(add(length, 31), not(31)))\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 0x20), and(value1, _2))\n        mstore(add(headStart, 64), and(value2, _2))\n        mstore(add(headStart, 96), add(sub(_1, headStart), 160))\n        mstore(add(_1, 160), 0)\n        tail := add(_1, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_242e54d8e0a6f1ffa9816b6b145be3b6631dbcb1a44d02c3fbf29e990c24e561__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"SyncswapClassicIntegration: INVA\")\n        mstore(add(headStart, 96), \"LID_PAIR\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_326e418174ed41afe1047de774986812b8438b4cd50895c151d78d4d29e87e3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"SyncswapClassicIntegration: INSU\")\n        mstore(add(headStart, 96), \"FFICIENT_OUTPUT_AMOUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransfer: tr\")\n        mstore(add(headStart, 96), \"ansfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"538":[{"length":32,"start":208},{"length":32,"start":1588}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80634aa066521461005c57806353b609b5146100825780639331621214610095578063b88c5f91146100a8578063c45a0155146100cb575b600080fd5b61006f61006a366004610889565b61010a565b6040519081526020015b60405180910390f35b61006f610090366004610889565b61011f565b61006f6100a336600461083e565b61012c565b6100bb6100b6366004610805565b6104a7565b6040519015158152602001610079565b6100f27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610079565b60006101178484846104fe565b949350505050565b60006101178484846105b1565b60008054600114610150576040516303cb96db60e21b815260040160405180910390fd5b60008080556040516370a0823160e01b81523060048201526001600160a01b038616906370a082319060240160206040518083038186803b15801561019457600080fd5b505afa1580156101a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cc9190610952565b90506101d98585836104fe565b91506000821161024f5760405162461bcd60e51b815260206004820152603660248201527f53796e6373776170436c6173736963496e746567726174696f6e3a20494e535560448201527511919250d251539517d3d55514155517d05353d5539560521b60648201526084015b60405180910390fd5b600061025b868661060a565b90506001600160a01b0381166102c45760405162461bcd60e51b815260206004820152602860248201527f53796e6373776170436c6173736963496e746567726174696f6e3a20494e56416044820152672624a22fa820a4a960c11b6064820152608401610246565b6102cf8682846106b7565b6040516370a0823160e01b81526001600160a01b038581166004830152600091908716906370a082319060240160206040518083038186803b15801561031457600080fd5b505afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190610952565b604080516001600160a01b03808b1660208301528816918101919091526002606082015290915060009060800160408051601f1981840301815290829052637132bb7f60e01b825291506001600160a01b03841690637132bb7f906103ba9084903390600090600401610987565b6040805180830381600087803b1580156103d357600080fd5b505af11580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b91906108ec565b506040516370a0823160e01b81526001600160a01b038781166004830152600091908916906370a082319060240160206040518083038186803b15801561045157600080fd5b505afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610952565b905061049583826109ec565b60016000559998505050505050505050565b6000816001600160a01b0316836001600160a01b031614156104cb575060006104f8565b60006104d7848461060a565b90506001600160a01b038116156104f25760019150506104f8565b60009150505b92915050565b60008061050b858561060a565b90506001600160a01b038116156105a95760405160016231ba9d60e11b031981526001600160a01b0386811660048301526024820185905230604483015282169063ff9c8ac6906064015b60206040518083038186803b15801561056e57600080fd5b505afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190610952565b91505b509392505050565b6000806105be858561060a565b90506001600160a01b038116156105a95760405163a287c79560e01b81526001600160a01b0385811660048301526024820185905230604483015282169063a287c79590606401610556565b60405163298d501f60e11b81526001600160a01b03838116600483015282811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063531aa03e9060440160206040518083038186803b15801561067857600080fd5b505afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b091906107e8565b9392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610713919061096b565b6000604051808303816000865af19150503d8060008114610750576040519150601f19603f3d011682016040523d82523d6000602084013e610755565b606091505b509150915081801561077f57508051158061077f57508080602001905181019061077f91906108ca565b6107e15760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b6064820152608401610246565b5050505050565b6000602082840312156107fa57600080fd5b81516106b081610a41565b6000806040838503121561081857600080fd5b823561082381610a41565b9150602083013561083381610a41565b809150509250929050565b60008060006060848603121561085357600080fd5b833561085e81610a41565b9250602084013561086e81610a41565b9150604084013561087e81610a41565b809150509250925092565b60008060006060848603121561089e57600080fd5b83356108a981610a41565b925060208401356108b981610a41565b929592945050506040919091013590565b6000602082840312156108dc57600080fd5b815180151581146106b057600080fd5b6000604082840312156108fe57600080fd5b6040516040810181811067ffffffffffffffff8211171561092f57634e487b7160e01b600052604160045260246000fd5b604052825161093d81610a41565b81526020928301519281019290925250919050565b60006020828403121561096457600080fd5b5051919050565b6000825161097d818460208701610a11565b9190910192915050565b60808152600084518060808401526109a68160a0850160208901610a11565b6001600160a01b03948516602084015292909316604082015260a0601f909201601f19168101818103830160609092019190915260009181019190915260c00192915050565b600082821015610a0c57634e487b7160e01b600052601160045260246000fd5b500390565b60005b83811015610a2c578181015183820152602001610a14565b83811115610a3b576000848401525b50505050565b6001600160a01b0381168114610a5657600080fd5b5056fea2646970667358221220c25ce5a0fc1b13c5003d4b146e4fb2608c5a581be831d9561933ec25d5108a4664736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x53B609B5 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x93316212 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB88C5F91 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH2 0x6F PUSH2 0xA3 CALLDATASIZE PUSH1 0x4 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xF2 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP5 DUP5 DUP5 PUSH2 0x4FE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP5 DUP5 DUP5 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 EQ PUSH2 0x150 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3CB96DB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9 DUP6 DUP6 DUP4 PUSH2 0x4FE JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E6373776170436C6173736963496E746567726174696F6E3A20494E5355 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x11919250D251539517D3D55514155517D05353D55395 PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25B DUP7 DUP7 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E6373776170436C6173736963496E746567726174696F6E3A20494E5641 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2624A22FA820A4A9 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x246 JUMP JUMPDEST PUSH2 0x2CF DUP7 DUP3 DUP5 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x328 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x20 DUP4 ADD MSTORE DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 PUSH1 0x60 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH4 0x7132BB7F PUSH1 0xE0 SHL DUP3 MSTORE SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x7132BB7F SWAP1 PUSH2 0x3BA SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x465 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST SWAP1 POP PUSH2 0x495 DUP4 DUP3 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x4CB JUMPI POP PUSH1 0x0 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D7 DUP5 DUP5 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x50B DUP6 DUP6 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0x31BA9D PUSH1 0xE1 SHL SUB NOT DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xFF9C8AC6 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x582 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5BE DUP6 DUP6 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA287C795 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xA287C795 SWAP1 PUSH1 0x64 ADD PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x298D501F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x531AA03E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x713 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x755 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x77F JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x77F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x246 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6B0 DUP2 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x823 DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x833 DUP2 PUSH2 0xA41 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x85E DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x86E DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x87E DUP2 PUSH2 0xA41 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x8A9 DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x8B9 DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x92F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x93D DUP2 PUSH2 0xA41 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x97D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xA11 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 DUP5 MLOAD DUP1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x9A6 DUP2 PUSH1 0xA0 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP2 DUP2 SUB DUP4 ADD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xA0C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA2C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA14 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0x5C 0xE5 LOG0 0xFC SHL SGT 0xC5 STOP RETURNDATASIZE 0x4B EQ PUSH15 0x4FB2608C5A581BE831D9561933EC25 0xD5 LT DUP11 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"323:2951:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1885:233;;;;;;:::i;:::-;;:::i;:::-;;;7049:25:18;;;7037:2;7022:18;1885:233:8;;;;;;;;2124:231;;;;;;:::i;:::-;;:::i;2361:911::-;;;;;;:::i;:::-;;:::i;700:344::-;;;;;;:::i;:::-;;:::i;:::-;;;4820:14:18;;4813:22;4795:41;;4783:2;4768:18;700:344:8;4655:187:18;397:32:8;;;;;;;;-1:-1:-1;;;;;3246:32:18;;;3228:51;;3216:2;3201:18;397:32:8;3082:203:18;1885:233:8;2025:17;2066:45;2080:8;2090:9;2101;2066:13;:45::i;:::-;2054:57;1885:233;-1:-1:-1;;;;1885:233:8:o;2124:231::-;2264:16;2303:45;2316:8;2326:9;2337:10;2303:12;:45::i;2361:911::-;2487:17;181:8:11;;193:1;181:13;177:34;;203:8;;-1:-1:-1;;;203:8:11;;;;;;;;;;;177:34;232:1;221:12;;;2535:41:8::1;::::0;-1:-1:-1;;;2535:41:8;;2570:4:::1;2535:41;::::0;::::1;3228:51:18::0;-1:-1:-1;;;;;2535:26:8;::::1;::::0;::::1;::::0;3201:18:18;;2535:41:8::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2516:60;;2598:44;2612:8;2622:9;2633:8;2598:13;:44::i;:::-;2586:56;;2685:1;2673:9;:13;2652:114;;;::::0;-1:-1:-1;;;2652:114:8;;6268:2:18;2652:114:8::1;::::0;::::1;6250:21:18::0;6307:2;6287:18;;;6280:30;6346:34;6326:18;;;6319:62;-1:-1:-1;;;6397:18:18;;;6390:52;6459:19;;2652:114:8::1;;;;;;;;;2776:12;2791:29;2800:8;2810:9;2791:8;:29::i;:::-;2776:44:::0;-1:-1:-1;;;;;;2838:18:8;::::1;2830:71;;;::::0;-1:-1:-1;;;2830:71:8;;5859:2:18;2830:71:8::1;::::0;::::1;5841:21:18::0;5898:2;5878:18;;;5871:30;5937:34;5917:18;;;5910:62;-1:-1:-1;;;5988:18:18;;;5981:38;6036:19;;2830:71:8::1;5657:404:18::0;2830:71:8::1;2911:53;2939:8;2949:4;2955:8;2911:27;:53::i;:::-;3000:32;::::0;-1:-1:-1;;;3000:32:8;;-1:-1:-1;;;;;3246:32:18;;;3000::8::1;::::0;::::1;3228:51:18::0;2975:22:8::1;::::0;3000:27;;::::1;::::0;::::1;::::0;3201:18:18;;3000:32:8::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3062:28;::::0;;-1:-1:-1;;;;;3863:15:18;;;3062:28:8::1;::::0;::::1;3845:34:18::0;3915:15;;3895:18;;;3888:43;;;;3088:1:8::1;3947:18:18::0;;;3940:45;2975:57:8;;-1:-1:-1;3042:17:8::1;::::0;3780:18:18;;3062:28:8::1;::::0;;-1:-1:-1;;3062:28:8;;::::1;::::0;;;;;;;-1:-1:-1;;;3100:58:8;;3062:28;-1:-1:-1;;;;;;3100:24:8;::::1;::::0;::::1;::::0;:58:::1;::::0;3062:28;;3131:10:::1;::::0;3151:1:::1;::::0;3100:58:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3187:32:8::1;::::0;-1:-1:-1;;;3187:32:8;;-1:-1:-1;;;;;3246:32:18;;;3187::8::1;::::0;::::1;3228:51:18::0;3169:15:8::1;::::0;3187:27;;::::1;::::0;::::1;::::0;3201:18:18;;3187:32:8::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3169:50:::0;-1:-1:-1;3241:24:8::1;3251:14:::0;3169:50;3241:24:::1;:::i;:::-;265:1:11::0;254:8;:12;3229:36:8;2361:911;-1:-1:-1;;;;;;;;;2361:911:8:o;700:344::-;813:4;845:9;-1:-1:-1;;;;;833:21:8;:8;-1:-1:-1;;;;;833:21:8;;829:64;;;-1:-1:-1;877:5:8;870:12;;829:64;902:12;917:29;926:8;936:9;917:8;:29::i;:::-;902:44;-1:-1:-1;;;;;;960:18:8;;;956:60;;1001:4;994:11;;;;;956:60;1032:5;1025:12;;;700:344;;;;;:::o;1050:412::-;1182:17;1211:12;1226:29;1235:8;1245:9;1226:8;:29::i;:::-;1211:44;-1:-1:-1;;;;;;1269:18:8;;;1265:191;;1315:130;;-1:-1:-1;;;;;;1315:130:8;;-1:-1:-1;;;;;4533:15:18;;;1315:130:8;;;4515:34:18;4565:18;;;4558:34;;;1426:4:8;4608:18:18;;;4601:43;1315:32:8;;;;;4450:18:18;;1315:130:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1303:142;;1265:191;1201:261;1050:412;;;;;:::o;1468:411::-;1600:16;1628:12;1643:29;1652:8;1662:9;1643:8;:29::i;:::-;1628:44;-1:-1:-1;;;;;;1686:18:8;;;1682:191;;1731:131;;-1:-1:-1;;;1731:131:8;;-1:-1:-1;;;;;4533:15:18;;;1731:131:8;;;4515:34:18;4565:18;;;4558:34;;;1843:4:8;4608:18:18;;;4601:43;1731:31:8;;;;;4450:18:18;;1731:131:8;4275:375:18;507:187:8;633:54;;-1:-1:-1;;;633:54:8;;-1:-1:-1;;;;;3520:15:18;;;633:54:8;;;3502:34:18;3572:15;;;3552:18;;;3545:43;607:7:8;;650;633:33;;;;;;3437:18:18;;633:54:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;626:61;507:187;-1:-1:-1;;;507:187:8:o;649:466:17:-;892:47;;;-1:-1:-1;;;;;4188:32:18;;;892:47:17;;;4170:51:18;4237:18;;;;4230:34;;;892:47:17;;;;;;;;;;4143:18:18;;;;892:47:17;;;;;;;-1:-1:-1;;;;;892:47:17;-1:-1:-1;;;892:47:17;;;867:82;;-1:-1:-1;;;;867:11:17;;;;:82;;892:47;867:82;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:118;;;;980:7;:57;;;;-1:-1:-1;992:11:17;;:16;;:44;;;1023:4;1012:24;;;;;;;;;;;;:::i;:::-;959:149;;;;-1:-1:-1;;;959:149:17;;6691:2:18;959:149:17;;;6673:21:18;6730:2;6710:18;;;6703:30;6769:34;6749:18;;;6742:62;-1:-1:-1;;;6820:18:18;;;6813:43;6873:19;;959:149:17;6489:409:18;959:149:17;755:360;;649:466;;;:::o;14:251:18:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;185:9;179:16;204:31;229:5;204:31;:::i;270:388::-;338:6;346;399:2;387:9;378:7;374:23;370:32;367:52;;;415:1;412;405:12;367:52;454:9;441:23;473:31;498:5;473:31;:::i;:::-;523:5;-1:-1:-1;580:2:18;565:18;;552:32;593:33;552:32;593:33;:::i;:::-;645:7;635:17;;;270:388;;;;;:::o;663:529::-;740:6;748;756;809:2;797:9;788:7;784:23;780:32;777:52;;;825:1;822;815:12;777:52;864:9;851:23;883:31;908:5;883:31;:::i;:::-;933:5;-1:-1:-1;990:2:18;975:18;;962:32;1003:33;962:32;1003:33;:::i;:::-;1055:7;-1:-1:-1;1114:2:18;1099:18;;1086:32;1127:33;1086:32;1127:33;:::i;:::-;1179:7;1169:17;;;663:529;;;;;:::o;1197:456::-;1274:6;1282;1290;1343:2;1331:9;1322:7;1318:23;1314:32;1311:52;;;1359:1;1356;1349:12;1311:52;1398:9;1385:23;1417:31;1442:5;1417:31;:::i;:::-;1467:5;-1:-1:-1;1524:2:18;1509:18;;1496:32;1537:33;1496:32;1537:33;:::i;:::-;1197:456;;1589:7;;-1:-1:-1;;;1643:2:18;1628:18;;;;1615:32;;1197:456::o;1658:277::-;1725:6;1778:2;1766:9;1757:7;1753:23;1749:32;1746:52;;;1794:1;1791;1784:12;1746:52;1826:9;1820:16;1879:5;1872:13;1865:21;1858:5;1855:32;1845:60;;1901:1;1898;1891:12;1940:669;2039:6;2092:2;2080:9;2071:7;2067:23;2063:32;2060:52;;;2108:1;2105;2098:12;2060:52;2141:2;2135:9;2183:2;2175:6;2171:15;2252:6;2240:10;2237:22;2216:18;2204:10;2201:34;2198:62;2195:185;;;2302:10;2297:3;2293:20;2290:1;2283:31;2337:4;2334:1;2327:15;2365:4;2362:1;2355:15;2195:185;2396:2;2389:22;2433:16;;2458:31;2433:16;2458:31;:::i;:::-;2498:21;;2573:2;2558:18;;;2552:25;2535:15;;;2528:50;;;;-1:-1:-1;2505:6:18;1940:669;-1:-1:-1;1940:669:18:o;2614:184::-;2684:6;2737:2;2725:9;2716:7;2712:23;2708:32;2705:52;;;2753:1;2750;2743:12;2705:52;-1:-1:-1;2776:16:18;;2614:184;-1:-1:-1;2614:184:18:o;2803:274::-;2932:3;2970:6;2964:13;2986:53;3032:6;3027:3;3020:4;3012:6;3008:17;2986:53;:::i;:::-;3055:16;;;;;2803:274;-1:-1:-1;;2803:274:18:o;4847:805::-;5150:3;5139:9;5132:22;5113:4;5183:6;5177:13;5227:6;5221:3;5210:9;5206:19;5199:35;5243:69;5305:6;5299:3;5288:9;5284:19;5277:4;5269:6;5265:17;5243:69;:::i;:::-;-1:-1:-1;;;;;5452:15:18;;;5445:4;5430:20;;5423:45;5504:15;;;;5499:2;5484:18;;5477:43;5403:3;5371:2;5350:15;;;-1:-1:-1;;5346:29:18;5331:45;;5560:18;;;5556:28;;5551:2;5536:18;;;5529:56;;;;-1:-1:-1;5601:12:18;;;5594:23;;;;5642:3;5634:12;;;-1:-1:-1;;4847:805:18:o;7085:222::-;7125:4;7153:1;7150;7147:8;7144:131;;;7197:10;7192:3;7188:20;7185:1;7178:31;7232:4;7229:1;7222:15;7260:4;7257:1;7250:15;7144:131;-1:-1:-1;7292:9:18;;7085:222::o;7312:258::-;7384:1;7394:113;7408:6;7405:1;7402:13;7394:113;;;7484:11;;;7478:18;7465:11;;;7458:39;7430:2;7423:10;7394:113;;;7525:6;7522:1;7519:13;7516:48;;;7560:1;7551:6;7546:3;7542:16;7535:27;7516:48;;7312:258;;;:::o;7575:131::-;-1:-1:-1;;;;;7650:31:18;;7640:42;;7630:70;;7696:1;7693;7686:12;7630:70;7575:131;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"540600","executionCost":"infinite","totalCost":"infinite"},"external":{"factory()":"infinite","getAmountIn(address,address,uint256)":"infinite","getAmountOut(address,address,uint256)":"infinite","swap(address,address,address)":"infinite","validatePair(address,address)":"infinite"},"internal":{"_getAmountIn(address,address,uint256)":"infinite","_getAmountOut(address,address,uint256)":"infinite","_getPair(address,address)":"infinite"}},"methodIdentifiers":{"factory()":"c45a0155","getAmountIn(address,address,uint256)":"53b609b5","getAmountOut(address,address,uint256)":"4aa06652","swap(address,address,address)":"93316212","validatePair(address,address)":"b88c5f91"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"validatePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SyncswapClassicDEXIntegration.sol\":\"SyncswapClassicDEXIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SyncswapClassicDEXIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\nimport \\\"./libraries/TransferHelper.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IDEXIntegration.sol\\\";\\nimport \\\"./interfaces/external/ISyncswapFactory.sol\\\";\\nimport \\\"./interfaces/external/ISyncswapPool.sol\\\";\\nimport \\\"./base/Lockable.sol\\\";\\n\\ncontract SyncswapClassicDEXIntegration is IDEXIntegration, Lockable {\\n    address public immutable factory;\\n\\n    constructor(address _factory) {\\n        factory = _factory;\\n    }\\n\\n    function _getPair(\\n        address _tokenIn,\\n        address _tokenOut\\n    ) internal view returns (address) {\\n        return ISyncswapFactory(factory).getPool(_tokenIn, _tokenOut);\\n    }\\n\\n    function validatePair(\\n        address _tokenIn,\\n        address _tokenOut\\n    ) external view override returns (bool) {\\n        if (_tokenIn == _tokenOut) {\\n            return false;\\n        }\\n        address pool = _getPair(_tokenIn, _tokenOut);\\n        if (pool != address(0)) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    function _getAmountOut(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountIn\\n    ) internal view returns (uint256 amountOut) {\\n        address pool = _getPair(_tokenIn, _tokenOut);\\n        if (pool != address(0)) {\\n            amountOut = ISyncswapPool(pool).getAmountOut(\\n                _tokenIn,\\n                _amountIn,\\n                address(this)\\n            );\\n        }\\n    }\\n\\n    function _getAmountIn(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountOut\\n    ) internal view returns (uint256 amountIn) {\\n        address pool = _getPair(_tokenIn, _tokenOut);\\n        if (pool != address(0)) {\\n            amountIn = ISyncswapPool(pool).getAmountIn(\\n                _tokenOut,\\n                _amountOut,\\n                address(this)\\n            );\\n        }\\n    }\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountIn\\n    ) external view override returns (uint256 amountOut) {\\n        amountOut = _getAmountOut(_tokenIn, _tokenOut, _amountIn);\\n    }\\n\\n    function getAmountIn(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountOut\\n    ) external view override returns (uint256 amountIn) {\\n        amountIn = _getAmountIn(_tokenIn, _tokenOut, _amountOut);\\n    }\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _to\\n    ) external override lock returns (uint256 amountOut) {\\n        uint256 amountIn = IERC20(_tokenIn).balanceOf(address(this));\\n        amountOut = _getAmountOut(_tokenIn, _tokenOut, amountIn);\\n        require(\\n            amountOut > 0,\\n            \\\"SyncswapClassicIntegration: INSUFFICIENT_OUTPUT_AMOUNT\\\"\\n        );\\n        address pair = _getPair(_tokenIn, _tokenOut);\\n        require(pair != address(0), \\\"SyncswapClassicIntegration: INVALID_PAIR\\\");\\n        TransferHelper.safeTransfer(_tokenIn, pair, amountIn);\\n\\n        uint256 initialBalance = IERC20(_tokenOut).balanceOf(_to);\\n        bytes memory data = abi.encode(_tokenIn, _to, 2);\\n        ISyncswapPool(pair).swap(data, msg.sender, address(0), \\\"\\\");\\n\\n        uint256 balance = IERC20(_tokenOut).balanceOf(_to);\\n        amountOut = balance - initialBalance;\\n    }\\n}\\n\",\"keccak256\":\"0x326a7cbedc900c454895e4dd32643cf2f4f92afdaf70b91ba3bdb3352e7acaa4\",\"license\":\"GPL-2.0-or-later\"},\"contracts/base/Lockable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ncontract Lockable {\\n    uint256 private unlocked = 1;\\n\\n    error Locked();\\n\\n    modifier lock() {\\n        if (unlocked != 1) revert Locked();\\n        unlocked = 0;\\n        _;\\n        unlocked = 1;\\n    }\\n}\\n\",\"keccak256\":\"0x51bad8a22e77a2611fc69518057a590b645033607e72076d43e66bb2591a89c2\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IDEXIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IDEXIntegration {\\n    function validatePair(\\n        address _tokenIn,\\n        address _tokenOut\\n    ) external view returns (bool);\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountIn\\n    ) external view returns (uint256);\\n\\n    function getAmountIn(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountOut\\n    ) external view returns (uint256);\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _to\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xdb59a456949a60735ad9a8af40701ced24cd467bf0513d9a548f896f44ff7182\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/external/ISyncswapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface ISyncswapFactory {\\n    function getPool(\\n        address _tokenA,\\n        address _tokenB\\n    ) external view returns (address);\\n}\\n\",\"keccak256\":\"0x0beff3920f67b483fdcc841692cc0e04795664f819f0daf7aee13c429f5120bd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/external/ISyncswapPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface ISyncswapPool {\\n    struct TokenAmount {\\n        address token;\\n        uint amount;\\n    }\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves() external view returns (uint256, uint256);\\n\\n    function getSwapFee(\\n        address _sender,\\n        address _tokenIn,\\n        address _tokenOut,\\n        bytes memory data\\n    ) external view returns (uint24);\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        uint256 _amountIn,\\n        address _sender\\n    ) external view returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        address _tokenOut,\\n        uint256 _amountOut,\\n        address _sender\\n    ) external view returns (uint256 amountIn);\\n\\n    function swap(\\n        bytes calldata _data,\\n        address _sender,\\n        address _callback,\\n        bytes calldata _callbackData\\n    ) external returns (TokenAmount memory tokenAmount);\\n}\\n\",\"keccak256\":\"0x7a4a3f4c180e34e2c1f032f2fdf1a1123d1fab128e621c5346b5ce064e0d8371\",\"license\":\"GPL-2.0-or-later\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(address _token, address _to, uint256 _value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeApprove: approve failed\\\"\\n        );\\n    }\\n\\n    function safeTransfer(\\n        address _token,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeTransfer: transfer failed\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address _token,\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::transferFrom: transferFrom failed\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address _to, uint256 _value) internal {\\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\\n        require(\\n            success,\\n            \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1139,"contract":"contracts/SyncswapClassicDEXIntegration.sol:SyncswapClassicDEXIntegration","label":"unlocked","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SyncswapClassicPriceFeedIntegration.sol":{"SyncswapClassicPriceFeedIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_868":{"entryPoint":null,"id":868,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":68,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:18","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:18"},"nodeType":"YulFunctionCall","src":"143:12:18"},"nodeType":"YulExpressionStatement","src":"143:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:18"},"nodeType":"YulFunctionCall","src":"112:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:18"},"nodeType":"YulFunctionCall","src":"108:32:18"},"nodeType":"YulIf","src":"105:52:18"},{"nodeType":"YulVariableDeclaration","src":"166:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:18"},"nodeType":"YulFunctionCall","src":"179:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:18"},"nodeType":"YulFunctionCall","src":"260:12:18"},"nodeType":"YulExpressionStatement","src":"260:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:18"},"nodeType":"YulFunctionCall","src":"239:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:18"},"nodeType":"YulFunctionCall","src":"235:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:18"},"nodeType":"YulFunctionCall","src":"224:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:18"},"nodeType":"YulFunctionCall","src":"214:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:18"},"nodeType":"YulFunctionCall","src":"207:50:18"},"nodeType":"YulIf","src":"204:70:18"},{"nodeType":"YulAssignment","src":"283:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:18"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:18","type":""}],"src":"14:290:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b506040516106e43803806106e483398101604081905261002f91610044565b60601b6001600160601b031916608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160601c61064c6100986000396000818160850152610119015261064c6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063aaf5eb6814610046578063ac41865a1461006d578063c45a015514610080575b600080fd5b61005a6c0c9f2c9cd04674edea4000000081565b6040519081526020015b60405180910390f35b61005a61007b36600461043c565b6100bf565b6100a77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610064565b6000816001600160a01b0316836001600160a01b031614156100ef57506c0c9f2c9cd04674edea40000000610412565b60405163298d501f60e11b81526001600160a01b03848116600483015283811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063531aa03e9060440160206040518083038186803b15801561015d57600080fd5b505afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610418565b90506001600160a01b038116156102e7576000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e157600080fd5b505afa1580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102199190610418565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401604080518083038186803b15801561025657600080fd5b505afa15801561026a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028e9190610475565b91509150600080846001600160a01b0316896001600160a01b0316146102b55782846102b8565b83835b9092509050816102d56c0c9f2c9cd04674edea40000000836105c9565b6102df91906104bc565b965050505050505b6000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561032257600080fd5b505afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190610499565b60ff1690506000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d29190610499565b60ff16905060006103e483600a610521565b905060006103f383600a610521565b90508061040083886105c9565b61040a91906104bc565b955050505050505b92915050565b60006020828403121561042a57600080fd5b8151610435816105fe565b9392505050565b6000806040838503121561044f57600080fd5b823561045a816105fe565b9150602083013561046a816105fe565b809150509250929050565b6000806040838503121561048857600080fd5b505080516020909101519092909150565b6000602082840312156104ab57600080fd5b815160ff8116811461043557600080fd5b6000826104d957634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156105195781600019048211156104ff576104ff6105e8565b8085161561050c57918102915b93841c93908002906104e3565b509250929050565b6000610435838360008261053757506001610412565b8161054457506000610412565b816001811461055a576002811461056457610580565b6001915050610412565b60ff841115610575576105756105e8565b50506001821b610412565b5060208310610133831016604e8410600b84101617156105a3575081810a610412565b6105ad83836104de565b80600019048211156105c1576105c16105e8565b029392505050565b60008160001904831182151516156105e3576105e36105e8565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461061357600080fd5b5056fea26469706673582212208eafda9ae8399e85eaec015fe2d56383fa722751be6c8e52aae30339330741fd64736f6c63430008070033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6E4 CODESIZE SUB DUP1 PUSH2 0x6E4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x44 JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH2 0x74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x64C PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x85 ADD MSTORE PUSH2 0x119 ADD MSTORE PUSH2 0x64C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A PUSH2 0x7B CALLDATASIZE PUSH1 0x4 PUSH2 0x43C JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH2 0xA7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xEF JUMPI POP PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x298D501F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x531AA03E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x475 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2B5 JUMPI DUP3 DUP5 PUSH2 0x2B8 JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2D5 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP4 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST SWAP7 POP POP POP POP POP POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x336 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x3E4 DUP4 PUSH1 0xA PUSH2 0x521 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3F3 DUP4 PUSH1 0xA PUSH2 0x521 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x400 DUP4 DUP9 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x435 DUP2 PUSH2 0x5FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x45A DUP2 PUSH2 0x5FE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x46A DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x519 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4FF JUMPI PUSH2 0x4FF PUSH2 0x5E8 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x50C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4E3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x435 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x537 JUMPI POP PUSH1 0x1 PUSH2 0x412 JUMP JUMPDEST DUP2 PUSH2 0x544 JUMPI POP PUSH1 0x0 PUSH2 0x412 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x55A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x564 JUMPI PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x412 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x575 JUMPI PUSH2 0x575 PUSH2 0x5E8 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x412 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5A3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x412 JUMP JUMPDEST PUSH2 0x5AD DUP4 DUP4 PUSH2 0x4DE JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C1 PUSH2 0x5E8 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x5E8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xAF 0xDA SWAP11 0xE8 CODECOPY SWAP15 DUP6 0xEA 0xEC ADD 0x5F 0xE2 0xD5 PUSH4 0x83FA7227 MLOAD 0xBE PUSH13 0x8E52AAE30339330741FD64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"395:1274:9:-:0;;;565:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;605:18;;-1:-1:-1;;;;;;605:18:9;;;395:1274;;14:290:18;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:18;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:18:o;:::-;395:1274:9;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PRECISION_856":{"entryPoint":null,"id":856,"parameterSlots":0,"returnSlots":0},"@factory_858":{"entryPoint":null,"id":858,"parameterSlots":0,"returnSlots":0},"@getPrice_983":{"entryPoint":191,"id":983,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1084,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":1141,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":1177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":1212,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":1246,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":1313,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1481,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1512,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":1534,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3924:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:170:18","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:18"},"nodeType":"YulFunctionCall","src":"143:12:18"},"nodeType":"YulExpressionStatement","src":"143:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:18"},"nodeType":"YulFunctionCall","src":"112:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:18"},"nodeType":"YulFunctionCall","src":"108:32:18"},"nodeType":"YulIf","src":"105:52:18"},{"nodeType":"YulVariableDeclaration","src":"166:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:18"},"nodeType":"YulFunctionCall","src":"179:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"204:24:18"},"nodeType":"YulFunctionCall","src":"204:31:18"},"nodeType":"YulExpressionStatement","src":"204:31:18"},{"nodeType":"YulAssignment","src":"244:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"254:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"244:6:18"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:18","type":""}],"src":"14:251:18"},{"body":{"nodeType":"YulBlock","src":"357:301:18","statements":[{"body":{"nodeType":"YulBlock","src":"403:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"415:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"405:6:18"},"nodeType":"YulFunctionCall","src":"405:12:18"},"nodeType":"YulExpressionStatement","src":"405:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"378:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"387:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"374:3:18"},"nodeType":"YulFunctionCall","src":"374:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"399:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"370:3:18"},"nodeType":"YulFunctionCall","src":"370:32:18"},"nodeType":"YulIf","src":"367:52:18"},{"nodeType":"YulVariableDeclaration","src":"428:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"441:12:18"},"nodeType":"YulFunctionCall","src":"441:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"432:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"473:24:18"},"nodeType":"YulFunctionCall","src":"473:31:18"},"nodeType":"YulExpressionStatement","src":"473:31:18"},{"nodeType":"YulAssignment","src":"513:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"523:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"513:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"537:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"569:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"580:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"565:3:18"},"nodeType":"YulFunctionCall","src":"565:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"552:12:18"},"nodeType":"YulFunctionCall","src":"552:32:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"541:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"618:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"593:24:18"},"nodeType":"YulFunctionCall","src":"593:33:18"},"nodeType":"YulExpressionStatement","src":"593:33:18"},{"nodeType":"YulAssignment","src":"635:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"645:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"635:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"315:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"326:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"338:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"346:6:18","type":""}],"src":"270:388:18"},{"body":{"nodeType":"YulBlock","src":"761:147:18","statements":[{"body":{"nodeType":"YulBlock","src":"807:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"816:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"819:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"809:6:18"},"nodeType":"YulFunctionCall","src":"809:12:18"},"nodeType":"YulExpressionStatement","src":"809:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"782:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"791:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"778:3:18"},"nodeType":"YulFunctionCall","src":"778:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"803:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"774:3:18"},"nodeType":"YulFunctionCall","src":"774:32:18"},"nodeType":"YulIf","src":"771:52:18"},{"nodeType":"YulAssignment","src":"832:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"848:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"842:5:18"},"nodeType":"YulFunctionCall","src":"842:16:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"832:6:18"}]},{"nodeType":"YulAssignment","src":"867:35:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"887:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"898:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"883:3:18"},"nodeType":"YulFunctionCall","src":"883:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"877:5:18"},"nodeType":"YulFunctionCall","src":"877:25:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"867:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"719:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"730:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"742:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"750:6:18","type":""}],"src":"663:245:18"},{"body":{"nodeType":"YulBlock","src":"992:194:18","statements":[{"body":{"nodeType":"YulBlock","src":"1038:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1047:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1050:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1040:6:18"},"nodeType":"YulFunctionCall","src":"1040:12:18"},"nodeType":"YulExpressionStatement","src":"1040:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1013:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1009:3:18"},"nodeType":"YulFunctionCall","src":"1009:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1034:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1005:3:18"},"nodeType":"YulFunctionCall","src":"1005:32:18"},"nodeType":"YulIf","src":"1002:52:18"},{"nodeType":"YulVariableDeclaration","src":"1063:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1076:5:18"},"nodeType":"YulFunctionCall","src":"1076:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1067:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1140:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1149:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1152:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1142:6:18"},"nodeType":"YulFunctionCall","src":"1142:12:18"},"nodeType":"YulExpressionStatement","src":"1142:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1125:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1132:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1121:3:18"},"nodeType":"YulFunctionCall","src":"1121:16:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1111:2:18"},"nodeType":"YulFunctionCall","src":"1111:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1104:6:18"},"nodeType":"YulFunctionCall","src":"1104:35:18"},"nodeType":"YulIf","src":"1101:55:18"},{"nodeType":"YulAssignment","src":"1165:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1175:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1165:6:18"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"958:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"969:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"981:6:18","type":""}],"src":"913:273:18"},{"body":{"nodeType":"YulBlock","src":"1292:102:18","statements":[{"nodeType":"YulAssignment","src":"1302:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1314:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1325:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1310:3:18"},"nodeType":"YulFunctionCall","src":"1310:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1302:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1344:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1359:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1375:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1380:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1371:3:18"},"nodeType":"YulFunctionCall","src":"1371:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1384:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1367:3:18"},"nodeType":"YulFunctionCall","src":"1367:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1355:3:18"},"nodeType":"YulFunctionCall","src":"1355:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1337:6:18"},"nodeType":"YulFunctionCall","src":"1337:51:18"},"nodeType":"YulExpressionStatement","src":"1337:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1261:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1272:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1283:4:18","type":""}],"src":"1191:203:18"},{"body":{"nodeType":"YulBlock","src":"1528:175:18","statements":[{"nodeType":"YulAssignment","src":"1538:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1550:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1561:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1546:3:18"},"nodeType":"YulFunctionCall","src":"1546:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1538:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"1573:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1596:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1587:3:18"},"nodeType":"YulFunctionCall","src":"1587:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1600:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1583:3:18"},"nodeType":"YulFunctionCall","src":"1583:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1577:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1618:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1633:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1641:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1629:3:18"},"nodeType":"YulFunctionCall","src":"1629:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1611:6:18"},"nodeType":"YulFunctionCall","src":"1611:34:18"},"nodeType":"YulExpressionStatement","src":"1611:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1665:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1676:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1661:3:18"},"nodeType":"YulFunctionCall","src":"1661:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1685:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1693:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1681:3:18"},"nodeType":"YulFunctionCall","src":"1681:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1654:6:18"},"nodeType":"YulFunctionCall","src":"1654:43:18"},"nodeType":"YulExpressionStatement","src":"1654:43:18"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1489:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1500:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1508:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1519:4:18","type":""}],"src":"1399:304:18"},{"body":{"nodeType":"YulBlock","src":"1809:76:18","statements":[{"nodeType":"YulAssignment","src":"1819:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1831:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1842:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:18"},"nodeType":"YulFunctionCall","src":"1827:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1819:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1861:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"1872:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1854:6:18"},"nodeType":"YulFunctionCall","src":"1854:25:18"},"nodeType":"YulExpressionStatement","src":"1854:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1778:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1789:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1800:4:18","type":""}],"src":"1708:177:18"},{"body":{"nodeType":"YulBlock","src":"1936:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"1967:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1988:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1995:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2000:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1991:3:18"},"nodeType":"YulFunctionCall","src":"1991:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1981:6:18"},"nodeType":"YulFunctionCall","src":"1981:31:18"},"nodeType":"YulExpressionStatement","src":"1981:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2032:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2035:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2025:6:18"},"nodeType":"YulFunctionCall","src":"2025:15:18"},"nodeType":"YulExpressionStatement","src":"2025:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2060:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2063:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2053:6:18"},"nodeType":"YulFunctionCall","src":"2053:15:18"},"nodeType":"YulExpressionStatement","src":"2053:15:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1956:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1949:6:18"},"nodeType":"YulFunctionCall","src":"1949:9:18"},"nodeType":"YulIf","src":"1946:132:18"},{"nodeType":"YulAssignment","src":"2087:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2096:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"2099:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2092:3:18"},"nodeType":"YulFunctionCall","src":"2092:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2087:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1921:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"1924:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"1930:1:18","type":""}],"src":"1890:217:18"},{"body":{"nodeType":"YulBlock","src":"2176:358:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2186:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2201:1:18","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"2190:7:18","type":""}]},{"nodeType":"YulAssignment","src":"2211:16:18","value":{"name":"power_1","nodeType":"YulIdentifier","src":"2220:7:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2211:5:18"}]},{"nodeType":"YulAssignment","src":"2236:13:18","value":{"name":"_base","nodeType":"YulIdentifier","src":"2244:5:18"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"2236:4:18"}]},{"body":{"nodeType":"YulBlock","src":"2300:228:18","statements":[{"body":{"nodeType":"YulBlock","src":"2345:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2347:16:18"},"nodeType":"YulFunctionCall","src":"2347:18:18"},"nodeType":"YulExpressionStatement","src":"2347:18:18"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2320:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2334:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2330:3:18"},"nodeType":"YulFunctionCall","src":"2330:6:18"},{"name":"base","nodeType":"YulIdentifier","src":"2338:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2326:3:18"},"nodeType":"YulFunctionCall","src":"2326:17:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2317:2:18"},"nodeType":"YulFunctionCall","src":"2317:27:18"},"nodeType":"YulIf","src":"2314:53:18"},{"body":{"nodeType":"YulBlock","src":"2406:29:18","statements":[{"nodeType":"YulAssignment","src":"2408:25:18","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"2421:5:18"},{"name":"base","nodeType":"YulIdentifier","src":"2428:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2417:3:18"},"nodeType":"YulFunctionCall","src":"2417:16:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2408:5:18"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2387:8:18"},{"name":"power_1","nodeType":"YulIdentifier","src":"2397:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2383:3:18"},"nodeType":"YulFunctionCall","src":"2383:22:18"},"nodeType":"YulIf","src":"2380:55:18"},{"nodeType":"YulAssignment","src":"2448:23:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2460:4:18"},{"name":"base","nodeType":"YulIdentifier","src":"2466:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2456:3:18"},"nodeType":"YulFunctionCall","src":"2456:15:18"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"2448:4:18"}]},{"nodeType":"YulAssignment","src":"2484:34:18","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"2500:7:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"2509:8:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2496:3:18"},"nodeType":"YulFunctionCall","src":"2496:22:18"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"2484:8:18"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2269:8:18"},{"name":"power_1","nodeType":"YulIdentifier","src":"2279:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2266:2:18"},"nodeType":"YulFunctionCall","src":"2266:21:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2288:3:18","statements":[]},"pre":{"nodeType":"YulBlock","src":"2262:3:18","statements":[]},"src":"2258:270:18"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"2140:5:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2147:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2160:5:18","type":""},{"name":"base","nodeType":"YulTypedName","src":"2167:4:18","type":""}],"src":"2112:422:18"},{"body":{"nodeType":"YulBlock","src":"2609:61:18","statements":[{"nodeType":"YulAssignment","src":"2619:45:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2649:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"2655:8:18"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"2628:20:18"},"nodeType":"YulFunctionCall","src":"2628:36:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2619:5:18"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"2580:4:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2586:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2599:5:18","type":""}],"src":"2539:131:18"},{"body":{"nodeType":"YulBlock","src":"2734:747:18","statements":[{"body":{"nodeType":"YulBlock","src":"2772:52:18","statements":[{"nodeType":"YulAssignment","src":"2786:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2795:1:18","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2786:5:18"}]},{"nodeType":"YulLeave","src":"2809:5:18"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2754:8:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2747:6:18"},"nodeType":"YulFunctionCall","src":"2747:16:18"},"nodeType":"YulIf","src":"2744:80:18"},{"body":{"nodeType":"YulBlock","src":"2857:52:18","statements":[{"nodeType":"YulAssignment","src":"2871:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2880:1:18","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2871:5:18"}]},{"nodeType":"YulLeave","src":"2894:5:18"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2843:4:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2836:6:18"},"nodeType":"YulFunctionCall","src":"2836:12:18"},"nodeType":"YulIf","src":"2833:76:18"},{"cases":[{"body":{"nodeType":"YulBlock","src":"2945:52:18","statements":[{"nodeType":"YulAssignment","src":"2959:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2968:1:18","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2959:5:18"}]},{"nodeType":"YulLeave","src":"2982:5:18"}]},"nodeType":"YulCase","src":"2938:59:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2943:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3013:123:18","statements":[{"body":{"nodeType":"YulBlock","src":"3048:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3050:16:18"},"nodeType":"YulFunctionCall","src":"3050:18:18"},"nodeType":"YulExpressionStatement","src":"3050:18:18"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3033:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"3043:3:18","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3030:2:18"},"nodeType":"YulFunctionCall","src":"3030:17:18"},"nodeType":"YulIf","src":"3027:43:18"},{"nodeType":"YulAssignment","src":"3083:25:18","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3096:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"3106:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3092:3:18"},"nodeType":"YulFunctionCall","src":"3092:16:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3083:5:18"}]},{"nodeType":"YulLeave","src":"3121:5:18"}]},"nodeType":"YulCase","src":"3006:130:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3011:1:18","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"2925:4:18"},"nodeType":"YulSwitch","src":"2918:218:18"},{"body":{"nodeType":"YulBlock","src":"3234:70:18","statements":[{"nodeType":"YulAssignment","src":"3248:28:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3261:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"3267:8:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"3257:3:18"},"nodeType":"YulFunctionCall","src":"3257:19:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3248:5:18"}]},{"nodeType":"YulLeave","src":"3289:5:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3158:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"3164:2:18","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3155:2:18"},"nodeType":"YulFunctionCall","src":"3155:12:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3172:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"3182:2:18","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3169:2:18"},"nodeType":"YulFunctionCall","src":"3169:16:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3151:3:18"},"nodeType":"YulFunctionCall","src":"3151:35:18"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3195:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"3201:3:18","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3192:2:18"},"nodeType":"YulFunctionCall","src":"3192:13:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3210:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"3220:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3207:2:18"},"nodeType":"YulFunctionCall","src":"3207:16:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3188:3:18"},"nodeType":"YulFunctionCall","src":"3188:36:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3148:2:18"},"nodeType":"YulFunctionCall","src":"3148:77:18"},"nodeType":"YulIf","src":"3145:159:18"},{"nodeType":"YulVariableDeclaration","src":"3313:57:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3355:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"3361:8:18"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"3336:18:18"},"nodeType":"YulFunctionCall","src":"3336:34:18"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"3317:7:18","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"3326:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3415:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3417:16:18"},"nodeType":"YulFunctionCall","src":"3417:18:18"},"nodeType":"YulExpressionStatement","src":"3417:18:18"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3385:7:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3402:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3398:3:18"},"nodeType":"YulFunctionCall","src":"3398:6:18"},{"name":"base_1","nodeType":"YulIdentifier","src":"3406:6:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3394:3:18"},"nodeType":"YulFunctionCall","src":"3394:19:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3382:2:18"},"nodeType":"YulFunctionCall","src":"3382:32:18"},"nodeType":"YulIf","src":"3379:58:18"},{"nodeType":"YulAssignment","src":"3446:29:18","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3459:7:18"},{"name":"base_1","nodeType":"YulIdentifier","src":"3468:6:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3455:3:18"},"nodeType":"YulFunctionCall","src":"3455:20:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3446:5:18"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"2705:4:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2711:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2724:5:18","type":""}],"src":"2675:806:18"},{"body":{"nodeType":"YulBlock","src":"3538:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"3597:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3599:16:18"},"nodeType":"YulFunctionCall","src":"3599:18:18"},"nodeType":"YulExpressionStatement","src":"3599:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3569:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3562:6:18"},"nodeType":"YulFunctionCall","src":"3562:9:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3555:6:18"},"nodeType":"YulFunctionCall","src":"3555:17:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3577:1:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3588:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3584:3:18"},"nodeType":"YulFunctionCall","src":"3584:6:18"},{"name":"x","nodeType":"YulIdentifier","src":"3592:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3580:3:18"},"nodeType":"YulFunctionCall","src":"3580:14:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3574:2:18"},"nodeType":"YulFunctionCall","src":"3574:21:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3551:3:18"},"nodeType":"YulFunctionCall","src":"3551:45:18"},"nodeType":"YulIf","src":"3548:71:18"},{"nodeType":"YulAssignment","src":"3628:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3643:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"3646:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3639:3:18"},"nodeType":"YulFunctionCall","src":"3639:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3628:7:18"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3517:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"3520:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3526:7:18","type":""}],"src":"3486:168:18"},{"body":{"nodeType":"YulBlock","src":"3691:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3708:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3715:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3720:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3711:3:18"},"nodeType":"YulFunctionCall","src":"3711:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3701:6:18"},"nodeType":"YulFunctionCall","src":"3701:31:18"},"nodeType":"YulExpressionStatement","src":"3701:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3748:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3751:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3741:6:18"},"nodeType":"YulFunctionCall","src":"3741:15:18"},"nodeType":"YulExpressionStatement","src":"3741:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3772:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3775:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3765:6:18"},"nodeType":"YulFunctionCall","src":"3765:15:18"},"nodeType":"YulExpressionStatement","src":"3765:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3659:127:18"},{"body":{"nodeType":"YulBlock","src":"3836:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"3900:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3909:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3912:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3902:6:18"},"nodeType":"YulFunctionCall","src":"3902:12:18"},"nodeType":"YulExpressionStatement","src":"3902:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3859:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3870:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3885:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3890:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3881:3:18"},"nodeType":"YulFunctionCall","src":"3881:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3894:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3877:3:18"},"nodeType":"YulFunctionCall","src":"3877:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3866:3:18"},"nodeType":"YulFunctionCall","src":"3866:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3856:2:18"},"nodeType":"YulFunctionCall","src":"3856:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3849:6:18"},"nodeType":"YulFunctionCall","src":"3849:50:18"},"nodeType":"YulIf","src":"3846:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3825:5:18","type":""}],"src":"3791:131:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"858":[{"length":32,"start":133},{"length":32,"start":281}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063aaf5eb6814610046578063ac41865a1461006d578063c45a015514610080575b600080fd5b61005a6c0c9f2c9cd04674edea4000000081565b6040519081526020015b60405180910390f35b61005a61007b36600461043c565b6100bf565b6100a77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610064565b6000816001600160a01b0316836001600160a01b031614156100ef57506c0c9f2c9cd04674edea40000000610412565b60405163298d501f60e11b81526001600160a01b03848116600483015283811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063531aa03e9060440160206040518083038186803b15801561015d57600080fd5b505afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610418565b90506001600160a01b038116156102e7576000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e157600080fd5b505afa1580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102199190610418565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401604080518083038186803b15801561025657600080fd5b505afa15801561026a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028e9190610475565b91509150600080846001600160a01b0316896001600160a01b0316146102b55782846102b8565b83835b9092509050816102d56c0c9f2c9cd04674edea40000000836105c9565b6102df91906104bc565b965050505050505b6000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561032257600080fd5b505afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190610499565b60ff1690506000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d29190610499565b60ff16905060006103e483600a610521565b905060006103f383600a610521565b90508061040083886105c9565b61040a91906104bc565b955050505050505b92915050565b60006020828403121561042a57600080fd5b8151610435816105fe565b9392505050565b6000806040838503121561044f57600080fd5b823561045a816105fe565b9150602083013561046a816105fe565b809150509250929050565b6000806040838503121561048857600080fd5b505080516020909101519092909150565b6000602082840312156104ab57600080fd5b815160ff8116811461043557600080fd5b6000826104d957634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156105195781600019048211156104ff576104ff6105e8565b8085161561050c57918102915b93841c93908002906104e3565b509250929050565b6000610435838360008261053757506001610412565b8161054457506000610412565b816001811461055a576002811461056457610580565b6001915050610412565b60ff841115610575576105756105e8565b50506001821b610412565b5060208310610133831016604e8410600b84101617156105a3575081810a610412565b6105ad83836104de565b80600019048211156105c1576105c16105e8565b029392505050565b60008160001904831182151516156105e3576105e36105e8565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461061357600080fd5b5056fea26469706673582212208eafda9ae8399e85eaec015fe2d56383fa722751be6c8e52aae30339330741fd64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A PUSH2 0x7B CALLDATASIZE PUSH1 0x4 PUSH2 0x43C JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH2 0xA7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xEF JUMPI POP PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x298D501F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x531AA03E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x475 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2B5 JUMPI DUP3 DUP5 PUSH2 0x2B8 JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2D5 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP4 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST SWAP7 POP POP POP POP POP POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x336 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x3E4 DUP4 PUSH1 0xA PUSH2 0x521 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3F3 DUP4 PUSH1 0xA PUSH2 0x521 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x400 DUP4 DUP9 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x435 DUP2 PUSH2 0x5FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x45A DUP2 PUSH2 0x5FE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x46A DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x519 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4FF JUMPI PUSH2 0x4FF PUSH2 0x5E8 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x50C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4E3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x435 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x537 JUMPI POP PUSH1 0x1 PUSH2 0x412 JUMP JUMPDEST DUP2 PUSH2 0x544 JUMPI POP PUSH1 0x0 PUSH2 0x412 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x55A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x564 JUMPI PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x412 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x575 JUMPI PUSH2 0x575 PUSH2 0x5E8 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x412 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5A3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x412 JUMP JUMPDEST PUSH2 0x5AD DUP4 DUP4 PUSH2 0x4DE JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C1 PUSH2 0x5E8 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x5E8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xAF 0xDA SWAP11 0xE8 CODECOPY SWAP15 DUP6 0xEA 0xEC ADD 0x5F 0xE2 0xD5 PUSH4 0x83FA7227 MLOAD 0xBE PUSH13 0x8E52AAE30339330741FD64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"395:1274:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:49;;516:4;471:49;;;;;1854:25:18;;;1842:2;1827:18;471:49:9;;;;;;;;636:1031;;;;;;:::i;:::-;;:::i;526:32::-;;;;;;;;-1:-1:-1;;;;;1355:32:18;;;1337:51;;1325:2;1310:18;526:32:9;1191:203:18;636:1031:9;749:13;792:11;-1:-1:-1;;;;;778:25:9;:10;-1:-1:-1;;;;;778:25:9;;774:72;;;-1:-1:-1;516:4:9;819:16;;774:72;871:92;;-1:-1:-1;;;871:92:9;;-1:-1:-1;;;;;1629:15:18;;;871:92:9;;;1611:34:18;1681:15;;;1661:18;;;1654:43;856:12:9;;888:7;871:33;;;;;;1546:18:18;;871:92:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;856:107;-1:-1:-1;;;;;;977:18:9;;;973:417;;1011:14;1042:4;-1:-1:-1;;;;;1028:26:9;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1011:45;;1071:16;1089;1123:4;-1:-1:-1;;;;;1109:48:9;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1070:89;;;;1174:19;1195:20;1233:6;-1:-1:-1;;;;;1219:20:9;:10;-1:-1:-1;;;;;1219:20:9;;:98;;1298:8;1308;1219:98;;;1259:8;1269;1219:98;1173:144;;-1:-1:-1;1173:144:9;-1:-1:-1;1173:144:9;1340:24;516:4;1173:144;1340:24;:::i;:::-;1339:40;;;;:::i;:::-;1331:48;;997:393;;;;;973:417;1400:20;1430:10;-1:-1:-1;;;;;1423:27:9;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1400:52;;;;1462:21;1493:11;-1:-1:-1;;;;;1486:28:9;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1462:54;;;-1:-1:-1;1526:16:9;1545:18;1551:12;1545:2;:18;:::i;:::-;1526:37;-1:-1:-1;1573:17:9;1593:19;1599:13;1593:2;:19;:::i;:::-;1573:39;-1:-1:-1;1573:39:9;1631:16;1639:8;1631:5;:16;:::i;:::-;1630:30;;;;:::i;:::-;1622:38;;764:903;;;;;636:1031;;;;;:::o;14:251:18:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;185:9;179:16;204:31;229:5;204:31;:::i;:::-;254:5;14:251;-1:-1:-1;;;14:251:18:o;270:388::-;338:6;346;399:2;387:9;378:7;374:23;370:32;367:52;;;415:1;412;405:12;367:52;454:9;441:23;473:31;498:5;473:31;:::i;:::-;523:5;-1:-1:-1;580:2:18;565:18;;552:32;593:33;552:32;593:33;:::i;:::-;645:7;635:17;;;270:388;;;;;:::o;663:245::-;742:6;750;803:2;791:9;782:7;778:23;774:32;771:52;;;819:1;816;809:12;771:52;-1:-1:-1;;842:16:18;;898:2;883:18;;;877:25;842:16;;877:25;;-1:-1:-1;663:245:18:o;913:273::-;981:6;1034:2;1022:9;1013:7;1009:23;1005:32;1002:52;;;1050:1;1047;1040:12;1002:52;1082:9;1076:16;1132:4;1125:5;1121:16;1114:5;1111:27;1101:55;;1152:1;1149;1142:12;1890:217;1930:1;1956;1946:132;;2000:10;1995:3;1991:20;1988:1;1981:31;2035:4;2032:1;2025:15;2063:4;2060:1;2053:15;1946:132;-1:-1:-1;2092:9:18;;1890:217::o;2112:422::-;2201:1;2244:5;2201:1;2258:270;2279:7;2269:8;2266:21;2258:270;;;2338:4;2334:1;2330:6;2326:17;2320:4;2317:27;2314:53;;;2347:18;;:::i;:::-;2397:7;2387:8;2383:22;2380:55;;;2417:16;;;;2380:55;2496:22;;;;2456:15;;;;2258:270;;;2262:3;2112:422;;;;;:::o;2539:131::-;2599:5;2628:36;2655:8;2649:4;2724:5;2754:8;2744:80;;-1:-1:-1;2795:1:18;2809:5;;2744:80;2843:4;2833:76;;-1:-1:-1;2880:1:18;2894:5;;2833:76;2925:4;2943:1;2938:59;;;;3011:1;3006:130;;;;2918:218;;2938:59;2968:1;2959:10;;2982:5;;;3006:130;3043:3;3033:8;3030:17;3027:43;;;3050:18;;:::i;:::-;-1:-1:-1;;3106:1:18;3092:16;;3121:5;;2918:218;;3220:2;3210:8;3207:16;3201:3;3195:4;3192:13;3188:36;3182:2;3172:8;3169:16;3164:2;3158:4;3155:12;3151:35;3148:77;3145:159;;;-1:-1:-1;3257:19:18;;;3289:5;;3145:159;3336:34;3361:8;3355:4;3336:34;:::i;:::-;3406:6;3402:1;3398:6;3394:19;3385:7;3382:32;3379:58;;;3417:18;;:::i;:::-;3455:20;;2675:806;-1:-1:-1;;;2675:806:18:o;3486:168::-;3526:7;3592:1;3588;3584:6;3580:14;3577:1;3574:21;3569:1;3562:9;3555:17;3551:45;3548:71;;;3599:18;;:::i;:::-;-1:-1:-1;3639:9:18;;3486:168::o;3659:127::-;3720:10;3715:3;3711:20;3708:1;3701:31;3751:4;3748:1;3741:15;3775:4;3772:1;3765:15;3791:131;-1:-1:-1;;;;;3866:31:18;;3856:42;;3846:70;;3912:1;3909;3902:12;3846:70;3791:131;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"322400","executionCost":"infinite","totalCost":"infinite"},"external":{"PRECISION()":"162","factory()":"infinite","getPrice(address,address)":"infinite"}},"methodIdentifiers":{"PRECISION()":"aaf5eb68","factory()":"c45a0155","getPrice(address,address)":"ac41865a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SyncswapClassicPriceFeedIntegration.sol\":\"SyncswapClassicPriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"},\"contracts/SyncswapClassicPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\\\";\\nimport \\\"./interfaces/IPriceFeedIntegration.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/external/ISyncswapFactory.sol\\\";\\nimport \\\"./interfaces/external/ISyncswapPool.sol\\\";\\n\\ncontract SyncswapClassicPriceFeedIntegration is IPriceFeedIntegration {\\n    uint256 public constant override PRECISION = 1e30;\\n    address public immutable factory;\\n\\n    constructor(address _factory) {\\n        factory = _factory;\\n    }\\n\\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view override returns (uint256 price) {\\n        if (_baseToken == _quoteToken) {\\n            return PRECISION;\\n        }\\n\\n        address pool = ISyncswapFactory(factory).getPool(\\n            _baseToken,\\n            _quoteToken\\n        );\\n        if (pool != address(0)) {\\n            address token0 = ISyncswapPool(pool).token0();\\n            (uint256 reserve0, uint256 reserve1) = ISyncswapPool(pool)\\n                .getReserves();\\n            (uint256 baseReserve, uint256 quoteReserve) = _baseToken == token0\\n                ? (reserve0, reserve1)\\n                : (reserve1, reserve0);\\n            price = (quoteReserve * PRECISION) / baseReserve;\\n        }\\n\\n        uint256 baseDecimals = IERC20(_baseToken).decimals();\\n        uint256 quoteDecimals = IERC20(_quoteToken).decimals();\\n        uint256 basePrec = 10 ** baseDecimals;\\n        uint256 quotePrec = 10 ** quoteDecimals;\\n        price = (price * basePrec) / quotePrec;\\n    }\\n}\\n\",\"keccak256\":\"0xcce60da939ebdf42f95ba17c00dc0e025102028801f2763afc25355bdc3da726\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeedIntegration {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/external/ISyncswapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface ISyncswapFactory {\\n    function getPool(\\n        address _tokenA,\\n        address _tokenB\\n    ) external view returns (address);\\n}\\n\",\"keccak256\":\"0x0beff3920f67b483fdcc841692cc0e04795664f819f0daf7aee13c429f5120bd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/external/ISyncswapPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface ISyncswapPool {\\n    struct TokenAmount {\\n        address token;\\n        uint amount;\\n    }\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves() external view returns (uint256, uint256);\\n\\n    function getSwapFee(\\n        address _sender,\\n        address _tokenIn,\\n        address _tokenOut,\\n        bytes memory data\\n    ) external view returns (uint24);\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        uint256 _amountIn,\\n        address _sender\\n    ) external view returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        address _tokenOut,\\n        uint256 _amountOut,\\n        address _sender\\n    ) external view returns (uint256 amountIn);\\n\\n    function swap(\\n        bytes calldata _data,\\n        address _sender,\\n        address _callback,\\n        bytes calldata _callbackData\\n    ) external returns (TokenAmount memory tokenAmount);\\n}\\n\",\"keccak256\":\"0x7a4a3f4c180e34e2c1f032f2fdf1a1123d1fab128e621c5346b5ce064e0d8371\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SyncswapStablePriceFeedIntegration.sol":{"SyncswapStablePriceFeedIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1010":{"entryPoint":null,"id":1010,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":68,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:18","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:18"},"nodeType":"YulFunctionCall","src":"143:12:18"},"nodeType":"YulExpressionStatement","src":"143:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:18"},"nodeType":"YulFunctionCall","src":"112:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:18"},"nodeType":"YulFunctionCall","src":"108:32:18"},"nodeType":"YulIf","src":"105:52:18"},{"nodeType":"YulVariableDeclaration","src":"166:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:18"},"nodeType":"YulFunctionCall","src":"179:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:18"},"nodeType":"YulFunctionCall","src":"260:12:18"},"nodeType":"YulExpressionStatement","src":"260:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:18"},"nodeType":"YulFunctionCall","src":"239:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:18"},"nodeType":"YulFunctionCall","src":"235:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:18"},"nodeType":"YulFunctionCall","src":"224:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:18"},"nodeType":"YulFunctionCall","src":"214:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:18"},"nodeType":"YulFunctionCall","src":"207:50:18"},"nodeType":"YulIf","src":"204:70:18"},{"nodeType":"YulAssignment","src":"283:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:18"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:18","type":""}],"src":"14:290:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161076438038061076483398101604081905261002f91610044565b60601b6001600160601b031916608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160601c6106cc610098600039600081816085015261011901526106cc6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063aaf5eb6814610046578063ac41865a1461006d578063c45a015514610080575b600080fd5b61005a6c0c9f2c9cd04674edea4000000081565b6040519081526020015b60405180910390f35b61005a61007b36600461047b565b6100bf565b6100a77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610064565b6000816001600160a01b0316836001600160a01b031614156100ef57506c0c9f2c9cd04674edea40000000610451565b60405163298d501f60e11b81526001600160a01b03848116600483015283811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063531aa03e9060440160206040518083038186803b15801561015d57600080fd5b505afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610457565b90506001600160a01b03811615610326576040516308b4c54760e41b81523360048201526001600160a01b0385811660248301528481166044830152608060648301526000608483018190529190831690638b4c54709060a40160206040518083038186803b15801561020757600080fd5b505afa15801561021b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023f91906104b4565b60405160016231ba9d60e11b031981526001600160a01b038781166004830152620186a0602483018190523360448401529293506000919085169063ff9c8ac69060640160206040518083038186803b15801561029b57600080fd5b505afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d391906104d9565b9050620186a06102e38482610515565b6102f29062ffffff1683610649565b6102fc919061053c565b9050816103166c0c9f2c9cd04674edea4000000083610649565b610320919061053c565b94505050505b6000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561036157600080fd5b505afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039991906104f2565b60ff1690506000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d957600080fd5b505afa1580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041191906104f2565b60ff169050600061042383600a6105a1565b9050600061043283600a6105a1565b90508061043f8388610649565b610449919061053c565b955050505050505b92915050565b60006020828403121561046957600080fd5b81516104748161067e565b9392505050565b6000806040838503121561048e57600080fd5b82356104998161067e565b915060208301356104a98161067e565b809150509250929050565b6000602082840312156104c657600080fd5b815162ffffff8116811461047457600080fd5b6000602082840312156104eb57600080fd5b5051919050565b60006020828403121561050457600080fd5b815160ff8116811461047457600080fd5b600062ffffff80831681851680830382111561053357610533610668565b01949350505050565b60008261055957634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111561059957816000190482111561057f5761057f610668565b8085161561058c57918102915b93841c9390800290610563565b509250929050565b600061047483836000826105b757506001610451565b816105c457506000610451565b81600181146105da57600281146105e457610600565b6001915050610451565b60ff8411156105f5576105f5610668565b50506001821b610451565b5060208310610133831016604e8410600b8410161715610623575081810a610451565b61062d838361055e565b806000190482111561064157610641610668565b029392505050565b600081600019048311821515161561066357610663610668565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461069357600080fd5b5056fea2646970667358221220a2c685a47593d23205de99332bf07aec0fb5183f7cf078270a9d99b60038e2ec64736f6c63430008070033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x764 CODESIZE SUB DUP1 PUSH2 0x764 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x44 JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH2 0x74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x6CC PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x85 ADD MSTORE PUSH2 0x119 ADD MSTORE PUSH2 0x6CC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A PUSH2 0x7B CALLDATASIZE PUSH1 0x4 PUSH2 0x47B JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH2 0xA7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xEF JUMPI POP PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x298D501F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x531AA03E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x457 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8B4C547 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x8B4C5470 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0x31BA9D PUSH1 0xE1 SHL SUB NOT DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0x186A0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE CALLER PUSH1 0x44 DUP5 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xFF9C8AC6 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x4D9 JUMP JUMPDEST SWAP1 POP PUSH3 0x186A0 PUSH2 0x2E3 DUP5 DUP3 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH3 0xFFFFFF AND DUP4 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x53C JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x316 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP4 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x53C JUMP JUMPDEST SWAP5 POP POP POP POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x423 DUP4 PUSH1 0xA PUSH2 0x5A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x432 DUP4 PUSH1 0xA PUSH2 0x5A1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x43F DUP4 DUP9 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x53C JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x474 DUP2 PUSH2 0x67E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x499 DUP2 PUSH2 0x67E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4A9 DUP2 PUSH2 0x67E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x533 JUMPI PUSH2 0x533 PUSH2 0x668 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x559 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x599 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x668 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x58C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x563 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x5B7 JUMPI POP PUSH1 0x1 PUSH2 0x451 JUMP JUMPDEST DUP2 PUSH2 0x5C4 JUMPI POP PUSH1 0x0 PUSH2 0x451 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5DA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5E4 JUMPI PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x451 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5F5 JUMPI PUSH2 0x5F5 PUSH2 0x668 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x451 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x623 JUMPI POP DUP2 DUP2 EXP PUSH2 0x451 JUMP JUMPDEST PUSH2 0x62D DUP4 DUP4 PUSH2 0x55E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x641 JUMPI PUSH2 0x641 PUSH2 0x668 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x663 JUMPI PUSH2 0x663 PUSH2 0x668 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xC6 DUP6 LOG4 PUSH22 0x93D23205DE99332BF07AEC0FB5183F7CF078270A9D99 0xB6 STOP CODESIZE 0xE2 0xEC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"395:1395:10:-:0;;;564:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;604:18;;-1:-1:-1;;;;;;604:18:10;;;395:1395;;14:290:18;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:18;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:18:o;:::-;395:1395:10;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PRECISION_998":{"entryPoint":null,"id":998,"parameterSlots":0,"returnSlots":0},"@factory_1000":{"entryPoint":null,"id":1000,"parameterSlots":0,"returnSlots":0},"@getPrice_1133":{"entryPoint":191,"id":1133,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint24_fromMemory":{"entryPoint":1204,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":1266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint24":{"entryPoint":1301,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":1340,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":1374,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":1441,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1609,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1640,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":1662,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5326:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:170:18","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:18"},"nodeType":"YulFunctionCall","src":"143:12:18"},"nodeType":"YulExpressionStatement","src":"143:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:18"},"nodeType":"YulFunctionCall","src":"112:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:18"},"nodeType":"YulFunctionCall","src":"108:32:18"},"nodeType":"YulIf","src":"105:52:18"},{"nodeType":"YulVariableDeclaration","src":"166:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:18"},"nodeType":"YulFunctionCall","src":"179:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"204:24:18"},"nodeType":"YulFunctionCall","src":"204:31:18"},"nodeType":"YulExpressionStatement","src":"204:31:18"},{"nodeType":"YulAssignment","src":"244:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"254:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"244:6:18"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:18","type":""}],"src":"14:251:18"},{"body":{"nodeType":"YulBlock","src":"357:301:18","statements":[{"body":{"nodeType":"YulBlock","src":"403:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"415:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"405:6:18"},"nodeType":"YulFunctionCall","src":"405:12:18"},"nodeType":"YulExpressionStatement","src":"405:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"378:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"387:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"374:3:18"},"nodeType":"YulFunctionCall","src":"374:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"399:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"370:3:18"},"nodeType":"YulFunctionCall","src":"370:32:18"},"nodeType":"YulIf","src":"367:52:18"},{"nodeType":"YulVariableDeclaration","src":"428:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"441:12:18"},"nodeType":"YulFunctionCall","src":"441:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"432:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"473:24:18"},"nodeType":"YulFunctionCall","src":"473:31:18"},"nodeType":"YulExpressionStatement","src":"473:31:18"},{"nodeType":"YulAssignment","src":"513:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"523:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"513:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"537:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"569:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"580:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"565:3:18"},"nodeType":"YulFunctionCall","src":"565:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"552:12:18"},"nodeType":"YulFunctionCall","src":"552:32:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"541:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"618:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"593:24:18"},"nodeType":"YulFunctionCall","src":"593:33:18"},"nodeType":"YulExpressionStatement","src":"593:33:18"},{"nodeType":"YulAssignment","src":"635:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"645:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"635:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"315:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"326:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"338:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"346:6:18","type":""}],"src":"270:388:18"},{"body":{"nodeType":"YulBlock","src":"743:198:18","statements":[{"body":{"nodeType":"YulBlock","src":"789:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"798:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"801:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"791:6:18"},"nodeType":"YulFunctionCall","src":"791:12:18"},"nodeType":"YulExpressionStatement","src":"791:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"764:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"773:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"760:3:18"},"nodeType":"YulFunctionCall","src":"760:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"785:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"756:3:18"},"nodeType":"YulFunctionCall","src":"756:32:18"},"nodeType":"YulIf","src":"753:52:18"},{"nodeType":"YulVariableDeclaration","src":"814:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"833:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"827:5:18"},"nodeType":"YulFunctionCall","src":"827:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"818:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"895:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"904:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"907:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"897:6:18"},"nodeType":"YulFunctionCall","src":"897:12:18"},"nodeType":"YulExpressionStatement","src":"897:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"865:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"876:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"883:8:18","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"872:3:18"},"nodeType":"YulFunctionCall","src":"872:20:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"862:2:18"},"nodeType":"YulFunctionCall","src":"862:31:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"855:6:18"},"nodeType":"YulFunctionCall","src":"855:39:18"},"nodeType":"YulIf","src":"852:59:18"},{"nodeType":"YulAssignment","src":"920:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"930:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"920:6:18"}]}]},"name":"abi_decode_tuple_t_uint24_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"709:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"720:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"732:6:18","type":""}],"src":"663:278:18"},{"body":{"nodeType":"YulBlock","src":"1027:103:18","statements":[{"body":{"nodeType":"YulBlock","src":"1073:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1082:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1085:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1075:6:18"},"nodeType":"YulFunctionCall","src":"1075:12:18"},"nodeType":"YulExpressionStatement","src":"1075:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1048:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1057:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1044:3:18"},"nodeType":"YulFunctionCall","src":"1044:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1069:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1040:3:18"},"nodeType":"YulFunctionCall","src":"1040:32:18"},"nodeType":"YulIf","src":"1037:52:18"},{"nodeType":"YulAssignment","src":"1098:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1114:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1108:5:18"},"nodeType":"YulFunctionCall","src":"1108:16:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1098:6:18"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"993:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1004:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1016:6:18","type":""}],"src":"946:184:18"},{"body":{"nodeType":"YulBlock","src":"1214:194:18","statements":[{"body":{"nodeType":"YulBlock","src":"1260:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1269:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1272:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1262:6:18"},"nodeType":"YulFunctionCall","src":"1262:12:18"},"nodeType":"YulExpressionStatement","src":"1262:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1235:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1244:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1231:3:18"},"nodeType":"YulFunctionCall","src":"1231:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1256:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1227:3:18"},"nodeType":"YulFunctionCall","src":"1227:32:18"},"nodeType":"YulIf","src":"1224:52:18"},{"nodeType":"YulVariableDeclaration","src":"1285:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1304:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1298:5:18"},"nodeType":"YulFunctionCall","src":"1298:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1289:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1362:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1371:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1374:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1364:6:18"},"nodeType":"YulFunctionCall","src":"1364:12:18"},"nodeType":"YulExpressionStatement","src":"1364:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1336:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1347:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1354:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1343:3:18"},"nodeType":"YulFunctionCall","src":"1343:16:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1333:2:18"},"nodeType":"YulFunctionCall","src":"1333:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1326:6:18"},"nodeType":"YulFunctionCall","src":"1326:35:18"},"nodeType":"YulIf","src":"1323:55:18"},{"nodeType":"YulAssignment","src":"1387:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1397:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1387:6:18"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1180:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1191:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1203:6:18","type":""}],"src":"1135:273:18"},{"body":{"nodeType":"YulBlock","src":"1514:102:18","statements":[{"nodeType":"YulAssignment","src":"1524:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1536:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1547:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1532:3:18"},"nodeType":"YulFunctionCall","src":"1532:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1524:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1566:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1581:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1597:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1602:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1593:3:18"},"nodeType":"YulFunctionCall","src":"1593:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1606:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1589:3:18"},"nodeType":"YulFunctionCall","src":"1589:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1577:3:18"},"nodeType":"YulFunctionCall","src":"1577:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1559:6:18"},"nodeType":"YulFunctionCall","src":"1559:51:18"},"nodeType":"YulExpressionStatement","src":"1559:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1483:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1494:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1505:4:18","type":""}],"src":"1413:203:18"},{"body":{"nodeType":"YulBlock","src":"1750:175:18","statements":[{"nodeType":"YulAssignment","src":"1760:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1772:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1783:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1768:3:18"},"nodeType":"YulFunctionCall","src":"1768:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1760:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"1795:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1813:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1818:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1809:3:18"},"nodeType":"YulFunctionCall","src":"1809:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1822:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1805:3:18"},"nodeType":"YulFunctionCall","src":"1805:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1799:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1840:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1855:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1863:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1851:3:18"},"nodeType":"YulFunctionCall","src":"1851:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1833:6:18"},"nodeType":"YulFunctionCall","src":"1833:34:18"},"nodeType":"YulExpressionStatement","src":"1833:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1887:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1898:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1883:3:18"},"nodeType":"YulFunctionCall","src":"1883:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1907:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1915:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1903:3:18"},"nodeType":"YulFunctionCall","src":"1903:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1876:6:18"},"nodeType":"YulFunctionCall","src":"1876:43:18"},"nodeType":"YulExpressionStatement","src":"1876:43:18"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1711:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1722:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1730:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1741:4:18","type":""}],"src":"1621:304:18"},{"body":{"nodeType":"YulBlock","src":"2187:307:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2215:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2220:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2211:3:18"},"nodeType":"YulFunctionCall","src":"2211:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"2224:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2207:3:18"},"nodeType":"YulFunctionCall","src":"2207:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2242:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2257:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2265:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2253:3:18"},"nodeType":"YulFunctionCall","src":"2253:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2235:6:18"},"nodeType":"YulFunctionCall","src":"2235:34:18"},"nodeType":"YulExpressionStatement","src":"2235:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2289:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2300:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2285:3:18"},"nodeType":"YulFunctionCall","src":"2285:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2309:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2317:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2305:3:18"},"nodeType":"YulFunctionCall","src":"2305:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2278:6:18"},"nodeType":"YulFunctionCall","src":"2278:43:18"},"nodeType":"YulExpressionStatement","src":"2278:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2341:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2352:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2337:3:18"},"nodeType":"YulFunctionCall","src":"2337:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2361:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2369:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2357:3:18"},"nodeType":"YulFunctionCall","src":"2357:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2330:6:18"},"nodeType":"YulFunctionCall","src":"2330:43:18"},"nodeType":"YulExpressionStatement","src":"2330:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2393:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2404:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2389:3:18"},"nodeType":"YulFunctionCall","src":"2389:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"2409:3:18","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2382:6:18"},"nodeType":"YulFunctionCall","src":"2382:31:18"},"nodeType":"YulExpressionStatement","src":"2382:31:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2433:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2444:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2429:3:18"},"nodeType":"YulFunctionCall","src":"2429:19:18"},{"kind":"number","nodeType":"YulLiteral","src":"2450:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2422:6:18"},"nodeType":"YulFunctionCall","src":"2422:30:18"},"nodeType":"YulExpressionStatement","src":"2422:30:18"},{"nodeType":"YulAssignment","src":"2461:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2473:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2484:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:18"},"nodeType":"YulFunctionCall","src":"2469:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2461:4:18"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2140:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2151:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2159:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2167:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2178:4:18","type":""}],"src":"1930:564:18"},{"body":{"nodeType":"YulBlock","src":"2656:218:18","statements":[{"nodeType":"YulAssignment","src":"2666:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2678:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2689:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2674:3:18"},"nodeType":"YulFunctionCall","src":"2674:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2666:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"2701:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2719:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2724:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2715:3:18"},"nodeType":"YulFunctionCall","src":"2715:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"2728:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2711:3:18"},"nodeType":"YulFunctionCall","src":"2711:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2705:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2746:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2761:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2769:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2757:3:18"},"nodeType":"YulFunctionCall","src":"2757:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2739:6:18"},"nodeType":"YulFunctionCall","src":"2739:34:18"},"nodeType":"YulExpressionStatement","src":"2739:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2793:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2804:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2789:3:18"},"nodeType":"YulFunctionCall","src":"2789:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"2809:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2782:6:18"},"nodeType":"YulFunctionCall","src":"2782:34:18"},"nodeType":"YulExpressionStatement","src":"2782:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2836:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2847:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2832:3:18"},"nodeType":"YulFunctionCall","src":"2832:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2856:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2864:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2852:3:18"},"nodeType":"YulFunctionCall","src":"2852:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2825:6:18"},"nodeType":"YulFunctionCall","src":"2825:43:18"},"nodeType":"YulExpressionStatement","src":"2825:43:18"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2609:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2620:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2628:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2636:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2647:4:18","type":""}],"src":"2499:375:18"},{"body":{"nodeType":"YulBlock","src":"2980:76:18","statements":[{"nodeType":"YulAssignment","src":"2990:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3002:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3013:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2998:3:18"},"nodeType":"YulFunctionCall","src":"2998:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2990:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3032:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"3043:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3025:6:18"},"nodeType":"YulFunctionCall","src":"3025:25:18"},"nodeType":"YulExpressionStatement","src":"3025:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2949:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2960:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2971:4:18","type":""}],"src":"2879:177:18"},{"body":{"nodeType":"YulBlock","src":"3108:179:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3118:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3128:8:18","type":"","value":"0xffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3122:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3145:21:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3160:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3163:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3156:3:18"},"nodeType":"YulFunctionCall","src":"3156:10:18"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"3149:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3175:21:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3190:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3193:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3186:3:18"},"nodeType":"YulFunctionCall","src":"3186:10:18"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"3179:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3230:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3232:16:18"},"nodeType":"YulFunctionCall","src":"3232:18:18"},"nodeType":"YulExpressionStatement","src":"3232:18:18"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"3211:3:18"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3220:2:18"},{"name":"y_1","nodeType":"YulIdentifier","src":"3224:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3216:3:18"},"nodeType":"YulFunctionCall","src":"3216:12:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3208:2:18"},"nodeType":"YulFunctionCall","src":"3208:21:18"},"nodeType":"YulIf","src":"3205:47:18"},{"nodeType":"YulAssignment","src":"3261:20:18","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"3272:3:18"},{"name":"y_1","nodeType":"YulIdentifier","src":"3277:3:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3268:3:18"},"nodeType":"YulFunctionCall","src":"3268:13:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3261:3:18"}]}]},"name":"checked_add_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3091:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"3094:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3100:3:18","type":""}],"src":"3061:226:18"},{"body":{"nodeType":"YulBlock","src":"3338:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"3369:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3390:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3397:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3402:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3393:3:18"},"nodeType":"YulFunctionCall","src":"3393:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3383:6:18"},"nodeType":"YulFunctionCall","src":"3383:31:18"},"nodeType":"YulExpressionStatement","src":"3383:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3437:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3427:6:18"},"nodeType":"YulFunctionCall","src":"3427:15:18"},"nodeType":"YulExpressionStatement","src":"3427:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3462:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3465:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3455:6:18"},"nodeType":"YulFunctionCall","src":"3455:15:18"},"nodeType":"YulExpressionStatement","src":"3455:15:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3358:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3351:6:18"},"nodeType":"YulFunctionCall","src":"3351:9:18"},"nodeType":"YulIf","src":"3348:132:18"},{"nodeType":"YulAssignment","src":"3489:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3498:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"3501:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3494:3:18"},"nodeType":"YulFunctionCall","src":"3494:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3489:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3323:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"3326:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3332:1:18","type":""}],"src":"3292:217:18"},{"body":{"nodeType":"YulBlock","src":"3578:358:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3588:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3603:1:18","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"3592:7:18","type":""}]},{"nodeType":"YulAssignment","src":"3613:16:18","value":{"name":"power_1","nodeType":"YulIdentifier","src":"3622:7:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3613:5:18"}]},{"nodeType":"YulAssignment","src":"3638:13:18","value":{"name":"_base","nodeType":"YulIdentifier","src":"3646:5:18"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"3638:4:18"}]},{"body":{"nodeType":"YulBlock","src":"3702:228:18","statements":[{"body":{"nodeType":"YulBlock","src":"3747:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3749:16:18"},"nodeType":"YulFunctionCall","src":"3749:18:18"},"nodeType":"YulExpressionStatement","src":"3749:18:18"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3722:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3736:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3732:3:18"},"nodeType":"YulFunctionCall","src":"3732:6:18"},{"name":"base","nodeType":"YulIdentifier","src":"3740:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3728:3:18"},"nodeType":"YulFunctionCall","src":"3728:17:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3719:2:18"},"nodeType":"YulFunctionCall","src":"3719:27:18"},"nodeType":"YulIf","src":"3716:53:18"},{"body":{"nodeType":"YulBlock","src":"3808:29:18","statements":[{"nodeType":"YulAssignment","src":"3810:25:18","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"3823:5:18"},{"name":"base","nodeType":"YulIdentifier","src":"3830:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3819:3:18"},"nodeType":"YulFunctionCall","src":"3819:16:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3810:5:18"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3789:8:18"},{"name":"power_1","nodeType":"YulIdentifier","src":"3799:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3785:3:18"},"nodeType":"YulFunctionCall","src":"3785:22:18"},"nodeType":"YulIf","src":"3782:55:18"},{"nodeType":"YulAssignment","src":"3850:23:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3862:4:18"},{"name":"base","nodeType":"YulIdentifier","src":"3868:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3858:3:18"},"nodeType":"YulFunctionCall","src":"3858:15:18"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"3850:4:18"}]},{"nodeType":"YulAssignment","src":"3886:34:18","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3902:7:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"3911:8:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3898:3:18"},"nodeType":"YulFunctionCall","src":"3898:22:18"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"3886:8:18"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3671:8:18"},{"name":"power_1","nodeType":"YulIdentifier","src":"3681:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3668:2:18"},"nodeType":"YulFunctionCall","src":"3668:21:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3690:3:18","statements":[]},"pre":{"nodeType":"YulBlock","src":"3664:3:18","statements":[]},"src":"3660:270:18"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"3542:5:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"3549:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"3562:5:18","type":""},{"name":"base","nodeType":"YulTypedName","src":"3569:4:18","type":""}],"src":"3514:422:18"},{"body":{"nodeType":"YulBlock","src":"4011:61:18","statements":[{"nodeType":"YulAssignment","src":"4021:45:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4051:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"4057:8:18"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"4030:20:18"},"nodeType":"YulFunctionCall","src":"4030:36:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4021:5:18"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"3982:4:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"3988:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4001:5:18","type":""}],"src":"3941:131:18"},{"body":{"nodeType":"YulBlock","src":"4136:747:18","statements":[{"body":{"nodeType":"YulBlock","src":"4174:52:18","statements":[{"nodeType":"YulAssignment","src":"4188:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4197:1:18","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4188:5:18"}]},{"nodeType":"YulLeave","src":"4211:5:18"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4156:8:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4149:6:18"},"nodeType":"YulFunctionCall","src":"4149:16:18"},"nodeType":"YulIf","src":"4146:80:18"},{"body":{"nodeType":"YulBlock","src":"4259:52:18","statements":[{"nodeType":"YulAssignment","src":"4273:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4282:1:18","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4273:5:18"}]},{"nodeType":"YulLeave","src":"4296:5:18"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4245:4:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4238:6:18"},"nodeType":"YulFunctionCall","src":"4238:12:18"},"nodeType":"YulIf","src":"4235:76:18"},{"cases":[{"body":{"nodeType":"YulBlock","src":"4347:52:18","statements":[{"nodeType":"YulAssignment","src":"4361:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:18","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4361:5:18"}]},{"nodeType":"YulLeave","src":"4384:5:18"}]},"nodeType":"YulCase","src":"4340:59:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4345:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4415:123:18","statements":[{"body":{"nodeType":"YulBlock","src":"4450:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4452:16:18"},"nodeType":"YulFunctionCall","src":"4452:18:18"},"nodeType":"YulExpressionStatement","src":"4452:18:18"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4435:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"4445:3:18","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4432:2:18"},"nodeType":"YulFunctionCall","src":"4432:17:18"},"nodeType":"YulIf","src":"4429:43:18"},{"nodeType":"YulAssignment","src":"4485:25:18","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4498:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"4508:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4494:3:18"},"nodeType":"YulFunctionCall","src":"4494:16:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4485:5:18"}]},{"nodeType":"YulLeave","src":"4523:5:18"}]},"nodeType":"YulCase","src":"4408:130:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4413:1:18","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"4327:4:18"},"nodeType":"YulSwitch","src":"4320:218:18"},{"body":{"nodeType":"YulBlock","src":"4636:70:18","statements":[{"nodeType":"YulAssignment","src":"4650:28:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4663:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"4669:8:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"4659:3:18"},"nodeType":"YulFunctionCall","src":"4659:19:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4650:5:18"}]},{"nodeType":"YulLeave","src":"4691:5:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4560:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"4566:2:18","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4557:2:18"},"nodeType":"YulFunctionCall","src":"4557:12:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4574:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"4584:2:18","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4571:2:18"},"nodeType":"YulFunctionCall","src":"4571:16:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4553:3:18"},"nodeType":"YulFunctionCall","src":"4553:35:18"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4597:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"4603:3:18","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4594:2:18"},"nodeType":"YulFunctionCall","src":"4594:13:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4612:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"4622:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4609:2:18"},"nodeType":"YulFunctionCall","src":"4609:16:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4590:3:18"},"nodeType":"YulFunctionCall","src":"4590:36:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4550:2:18"},"nodeType":"YulFunctionCall","src":"4550:77:18"},"nodeType":"YulIf","src":"4547:159:18"},{"nodeType":"YulVariableDeclaration","src":"4715:57:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4757:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"4763:8:18"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"4738:18:18"},"nodeType":"YulFunctionCall","src":"4738:34:18"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"4719:7:18","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"4728:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4817:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4819:16:18"},"nodeType":"YulFunctionCall","src":"4819:18:18"},"nodeType":"YulExpressionStatement","src":"4819:18:18"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4787:7:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4804:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4800:3:18"},"nodeType":"YulFunctionCall","src":"4800:6:18"},{"name":"base_1","nodeType":"YulIdentifier","src":"4808:6:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4796:3:18"},"nodeType":"YulFunctionCall","src":"4796:19:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4784:2:18"},"nodeType":"YulFunctionCall","src":"4784:32:18"},"nodeType":"YulIf","src":"4781:58:18"},{"nodeType":"YulAssignment","src":"4848:29:18","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4861:7:18"},{"name":"base_1","nodeType":"YulIdentifier","src":"4870:6:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4857:3:18"},"nodeType":"YulFunctionCall","src":"4857:20:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4848:5:18"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"4107:4:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4113:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4126:5:18","type":""}],"src":"4077:806:18"},{"body":{"nodeType":"YulBlock","src":"4940:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"4999:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5001:16:18"},"nodeType":"YulFunctionCall","src":"5001:18:18"},"nodeType":"YulExpressionStatement","src":"5001:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4971:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4964:6:18"},"nodeType":"YulFunctionCall","src":"4964:9:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4957:6:18"},"nodeType":"YulFunctionCall","src":"4957:17:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4979:1:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4990:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4986:3:18"},"nodeType":"YulFunctionCall","src":"4986:6:18"},{"name":"x","nodeType":"YulIdentifier","src":"4994:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4982:3:18"},"nodeType":"YulFunctionCall","src":"4982:14:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4976:2:18"},"nodeType":"YulFunctionCall","src":"4976:21:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4953:3:18"},"nodeType":"YulFunctionCall","src":"4953:45:18"},"nodeType":"YulIf","src":"4950:71:18"},{"nodeType":"YulAssignment","src":"5030:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5045:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"5048:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5041:3:18"},"nodeType":"YulFunctionCall","src":"5041:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5030:7:18"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4919:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"4922:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"4928:7:18","type":""}],"src":"4888:168:18"},{"body":{"nodeType":"YulBlock","src":"5093:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5110:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5117:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5122:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5113:3:18"},"nodeType":"YulFunctionCall","src":"5113:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5103:6:18"},"nodeType":"YulFunctionCall","src":"5103:31:18"},"nodeType":"YulExpressionStatement","src":"5103:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5150:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5153:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5143:6:18"},"nodeType":"YulFunctionCall","src":"5143:15:18"},"nodeType":"YulExpressionStatement","src":"5143:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5174:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5177:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5167:6:18"},"nodeType":"YulFunctionCall","src":"5167:15:18"},"nodeType":"YulExpressionStatement","src":"5167:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5061:127:18"},{"body":{"nodeType":"YulBlock","src":"5238:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"5302:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5311:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5314:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5304:6:18"},"nodeType":"YulFunctionCall","src":"5304:12:18"},"nodeType":"YulExpressionStatement","src":"5304:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5261:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5272:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5287:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5292:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5283:3:18"},"nodeType":"YulFunctionCall","src":"5283:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"5296:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5279:3:18"},"nodeType":"YulFunctionCall","src":"5279:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5268:3:18"},"nodeType":"YulFunctionCall","src":"5268:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5258:2:18"},"nodeType":"YulFunctionCall","src":"5258:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5251:6:18"},"nodeType":"YulFunctionCall","src":"5251:50:18"},"nodeType":"YulIf","src":"5248:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5227:5:18","type":""}],"src":"5193:131:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint24_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), 0)\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint24(x, y) -> sum\n    {\n        let _1 := 0xffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1000":[{"length":32,"start":133},{"length":32,"start":281}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063aaf5eb6814610046578063ac41865a1461006d578063c45a015514610080575b600080fd5b61005a6c0c9f2c9cd04674edea4000000081565b6040519081526020015b60405180910390f35b61005a61007b36600461047b565b6100bf565b6100a77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610064565b6000816001600160a01b0316836001600160a01b031614156100ef57506c0c9f2c9cd04674edea40000000610451565b60405163298d501f60e11b81526001600160a01b03848116600483015283811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063531aa03e9060440160206040518083038186803b15801561015d57600080fd5b505afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610457565b90506001600160a01b03811615610326576040516308b4c54760e41b81523360048201526001600160a01b0385811660248301528481166044830152608060648301526000608483018190529190831690638b4c54709060a40160206040518083038186803b15801561020757600080fd5b505afa15801561021b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023f91906104b4565b60405160016231ba9d60e11b031981526001600160a01b038781166004830152620186a0602483018190523360448401529293506000919085169063ff9c8ac69060640160206040518083038186803b15801561029b57600080fd5b505afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d391906104d9565b9050620186a06102e38482610515565b6102f29062ffffff1683610649565b6102fc919061053c565b9050816103166c0c9f2c9cd04674edea4000000083610649565b610320919061053c565b94505050505b6000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561036157600080fd5b505afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039991906104f2565b60ff1690506000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d957600080fd5b505afa1580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041191906104f2565b60ff169050600061042383600a6105a1565b9050600061043283600a6105a1565b90508061043f8388610649565b610449919061053c565b955050505050505b92915050565b60006020828403121561046957600080fd5b81516104748161067e565b9392505050565b6000806040838503121561048e57600080fd5b82356104998161067e565b915060208301356104a98161067e565b809150509250929050565b6000602082840312156104c657600080fd5b815162ffffff8116811461047457600080fd5b6000602082840312156104eb57600080fd5b5051919050565b60006020828403121561050457600080fd5b815160ff8116811461047457600080fd5b600062ffffff80831681851680830382111561053357610533610668565b01949350505050565b60008261055957634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111561059957816000190482111561057f5761057f610668565b8085161561058c57918102915b93841c9390800290610563565b509250929050565b600061047483836000826105b757506001610451565b816105c457506000610451565b81600181146105da57600281146105e457610600565b6001915050610451565b60ff8411156105f5576105f5610668565b50506001821b610451565b5060208310610133831016604e8410600b8410161715610623575081810a610451565b61062d838361055e565b806000190482111561064157610641610668565b029392505050565b600081600019048311821515161561066357610663610668565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461069357600080fd5b5056fea2646970667358221220a2c685a47593d23205de99332bf07aec0fb5183f7cf078270a9d99b60038e2ec64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A PUSH2 0x7B CALLDATASIZE PUSH1 0x4 PUSH2 0x47B JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH2 0xA7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xEF JUMPI POP PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x298D501F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x531AA03E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x457 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8B4C547 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x8B4C5470 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0x31BA9D PUSH1 0xE1 SHL SUB NOT DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0x186A0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE CALLER PUSH1 0x44 DUP5 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xFF9C8AC6 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x4D9 JUMP JUMPDEST SWAP1 POP PUSH3 0x186A0 PUSH2 0x2E3 DUP5 DUP3 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH3 0xFFFFFF AND DUP4 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x53C JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x316 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP4 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x53C JUMP JUMPDEST SWAP5 POP POP POP POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x423 DUP4 PUSH1 0xA PUSH2 0x5A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x432 DUP4 PUSH1 0xA PUSH2 0x5A1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x43F DUP4 DUP9 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x53C JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x474 DUP2 PUSH2 0x67E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x499 DUP2 PUSH2 0x67E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4A9 DUP2 PUSH2 0x67E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x533 JUMPI PUSH2 0x533 PUSH2 0x668 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x559 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x599 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x668 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x58C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x563 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x5B7 JUMPI POP PUSH1 0x1 PUSH2 0x451 JUMP JUMPDEST DUP2 PUSH2 0x5C4 JUMPI POP PUSH1 0x0 PUSH2 0x451 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5DA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5E4 JUMPI PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x451 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5F5 JUMPI PUSH2 0x5F5 PUSH2 0x668 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x451 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x623 JUMPI POP DUP2 DUP2 EXP PUSH2 0x451 JUMP JUMPDEST PUSH2 0x62D DUP4 DUP4 PUSH2 0x55E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x641 JUMPI PUSH2 0x641 PUSH2 0x668 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x663 JUMPI PUSH2 0x663 PUSH2 0x668 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xC6 DUP6 LOG4 PUSH22 0x93D23205DE99332BF07AEC0FB5183F7CF078270A9D99 0xB6 STOP CODESIZE 0xE2 0xEC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"395:1395:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;470:49;;515:4;470:49;;;;;3025:25:18;;;3013:2;2998:18;470:49:10;;;;;;;;635:1153;;;;;;:::i;:::-;;:::i;525:32::-;;;;;;;;-1:-1:-1;;;;;1577:32:18;;;1559:51;;1547:2;1532:18;525:32:10;1413:203:18;635:1153:10;748:13;791:11;-1:-1:-1;;;;;777:25:10;:10;-1:-1:-1;;;;;777:25:10;;773:72;;;-1:-1:-1;515:4:10;818:16;;773:72;870:92;;-1:-1:-1;;;870:92:10;;-1:-1:-1;;;;;1851:15:18;;;870:92:10;;;1833:34:18;1903:15;;;1883:18;;;1876:43;855:12:10;;887:7;870:33;;;;;;1768:18:18;;870:92:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;855:107;-1:-1:-1;;;;;;976:18:10;;;972:539;;1027:149;;-1:-1:-1;;;1027:149:10;;1075:10;1027:149;;;2235:34:18;-1:-1:-1;;;;;2305:15:18;;;2285:18;;;2278:43;2357:15;;;2337:18;;;2330:43;2409:3;2389:18;;;2382:31;1010:14:10;2429:19:18;;;2422:30;;;1010:14:10;1027:30;;;;;;2469:19:18;;1027:149:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1249:128;;-1:-1:-1;;;;;;1249:128:10;;-1:-1:-1;;;;;2757:15:18;;;1249:128:10;;;2739:34:18;1209:6:10;2789:18:18;;;2782:34;;;1353:10:10;2832:18:18;;;2825:43;1010:166:10;;-1:-1:-1;1190:16:10;;1249:32;;;;;;2674:18:18;;1249:128:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1229:148;-1:-1:-1;1438:6:10;1417:16;1426:7;1438:6;1417:16;:::i;:::-;1404:30;;;;:9;:30;:::i;:::-;1403:41;;;;:::i;:::-;1391:53;-1:-1:-1;1492:8:10;1467:21;515:4;1391:53;1467:21;:::i;:::-;1466:34;;;;:::i;:::-;1458:42;;996:515;;;972:539;1521:20;1551:10;-1:-1:-1;;;;;1544:27:10;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1521:52;;;;1583:21;1614:11;-1:-1:-1;;;;;1607:28:10;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1583:54;;;-1:-1:-1;1647:16:10;1666:18;1672:12;1666:2;:18;:::i;:::-;1647:37;-1:-1:-1;1694:17:10;1714:19;1720:13;1714:2;:19;:::i;:::-;1694:39;-1:-1:-1;1694:39:10;1752:16;1760:8;1752:5;:16;:::i;:::-;1751:30;;;;:::i;:::-;1743:38;;763:1025;;;;;635:1153;;;;;:::o;14:251:18:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;185:9;179:16;204:31;229:5;204:31;:::i;:::-;254:5;14:251;-1:-1:-1;;;14:251:18:o;270:388::-;338:6;346;399:2;387:9;378:7;374:23;370:32;367:52;;;415:1;412;405:12;367:52;454:9;441:23;473:31;498:5;473:31;:::i;:::-;523:5;-1:-1:-1;580:2:18;565:18;;552:32;593:33;552:32;593:33;:::i;:::-;645:7;635:17;;;270:388;;;;;:::o;663:278::-;732:6;785:2;773:9;764:7;760:23;756:32;753:52;;;801:1;798;791:12;753:52;833:9;827:16;883:8;876:5;872:20;865:5;862:31;852:59;;907:1;904;897:12;946:184;1016:6;1069:2;1057:9;1048:7;1044:23;1040:32;1037:52;;;1085:1;1082;1075:12;1037:52;-1:-1:-1;1108:16:18;;946:184;-1:-1:-1;946:184:18:o;1135:273::-;1203:6;1256:2;1244:9;1235:7;1231:23;1227:32;1224:52;;;1272:1;1269;1262:12;1224:52;1304:9;1298:16;1354:4;1347:5;1343:16;1336:5;1333:27;1323:55;;1374:1;1371;1364:12;3061:226;3100:3;3128:8;3163:2;3160:1;3156:10;3193:2;3190:1;3186:10;3224:3;3220:2;3216:12;3211:3;3208:21;3205:47;;;3232:18;;:::i;:::-;3268:13;;3061:226;-1:-1:-1;;;;3061:226:18:o;3292:217::-;3332:1;3358;3348:132;;3402:10;3397:3;3393:20;3390:1;3383:31;3437:4;3434:1;3427:15;3465:4;3462:1;3455:15;3348:132;-1:-1:-1;3494:9:18;;3292:217::o;3514:422::-;3603:1;3646:5;3603:1;3660:270;3681:7;3671:8;3668:21;3660:270;;;3740:4;3736:1;3732:6;3728:17;3722:4;3719:27;3716:53;;;3749:18;;:::i;:::-;3799:7;3789:8;3785:22;3782:55;;;3819:16;;;;3782:55;3898:22;;;;3858:15;;;;3660:270;;;3664:3;3514:422;;;;;:::o;3941:131::-;4001:5;4030:36;4057:8;4051:4;4126:5;4156:8;4146:80;;-1:-1:-1;4197:1:18;4211:5;;4146:80;4245:4;4235:76;;-1:-1:-1;4282:1:18;4296:5;;4235:76;4327:4;4345:1;4340:59;;;;4413:1;4408:130;;;;4320:218;;4340:59;4370:1;4361:10;;4384:5;;;4408:130;4445:3;4435:8;4432:17;4429:43;;;4452:18;;:::i;:::-;-1:-1:-1;;4508:1:18;4494:16;;4523:5;;4320:218;;4622:2;4612:8;4609:16;4603:3;4597:4;4594:13;4590:36;4584:2;4574:8;4571:16;4566:2;4560:4;4557:12;4553:35;4550:77;4547:159;;;-1:-1:-1;4659:19:18;;;4691:5;;4547:159;4738:34;4763:8;4757:4;4738:34;:::i;:::-;4808:6;4804:1;4800:6;4796:19;4787:7;4784:32;4781:58;;;4819:18;;:::i;:::-;4857:20;;4077:806;-1:-1:-1;;;4077:806:18:o;4888:168::-;4928:7;4994:1;4990;4986:6;4982:14;4979:1;4976:21;4971:1;4964:9;4957:17;4953:45;4950:71;;;5001:18;;:::i;:::-;-1:-1:-1;5041:9:18;;4888:168::o;5061:127::-;5122:10;5117:3;5113:20;5110:1;5103:31;5153:4;5150:1;5143:15;5177:4;5174:1;5167:15;5193:131;-1:-1:-1;;;;;5268:31:18;;5258:42;;5248:70;;5314:1;5311;5304:12;5248:70;5193:131;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"348000","executionCost":"infinite","totalCost":"infinite"},"external":{"PRECISION()":"162","factory()":"infinite","getPrice(address,address)":"infinite"}},"methodIdentifiers":{"PRECISION()":"aaf5eb68","factory()":"c45a0155","getPrice(address,address)":"ac41865a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SyncswapStablePriceFeedIntegration.sol\":\"SyncswapStablePriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"},\"contracts/SyncswapStablePriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\\\";\\nimport \\\"./interfaces/IPriceFeedIntegration.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/external/ISyncswapFactory.sol\\\";\\nimport \\\"./interfaces/external/ISyncswapPool.sol\\\";\\n\\ncontract SyncswapStablePriceFeedIntegration is IPriceFeedIntegration {\\n    uint256 public constant override PRECISION = 1e30;\\n    address public immutable factory;\\n\\n    constructor(address _factory) {\\n        factory = _factory;\\n    }\\n\\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view override returns (uint256 price) {\\n        if (_baseToken == _quoteToken) {\\n            return PRECISION;\\n        }\\n\\n        address pool = ISyncswapFactory(factory).getPool(\\n            _baseToken,\\n            _quoteToken\\n        );\\n        if (pool != address(0)) {\\n            uint24 swapFee = ISyncswapPool(pool).getSwapFee(\\n                msg.sender,\\n                _baseToken,\\n                _quoteToken,\\n                \\\"\\\"\\n            );\\n            uint256 amountIn = 100000;\\n            uint256 amountOut = ISyncswapPool(pool).getAmountOut(\\n                _baseToken,\\n                amountIn,\\n                msg.sender\\n            );\\n            amountOut = (amountOut * (100000 + swapFee)) / 100000;\\n            price = (amountOut * PRECISION) / amountIn;\\n        }\\n\\n        uint256 baseDecimals = IERC20(_baseToken).decimals();\\n        uint256 quoteDecimals = IERC20(_quoteToken).decimals();\\n        uint256 basePrec = 10 ** baseDecimals;\\n        uint256 quotePrec = 10 ** quoteDecimals;\\n        price = (price * basePrec) / quotePrec;\\n    }\\n}\\n\",\"keccak256\":\"0x6bcd944be2b1d0a79f5892d6af3f5f91cd6376c73a8359e11814c3059b59840c\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeedIntegration {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/external/ISyncswapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface ISyncswapFactory {\\n    function getPool(\\n        address _tokenA,\\n        address _tokenB\\n    ) external view returns (address);\\n}\\n\",\"keccak256\":\"0x0beff3920f67b483fdcc841692cc0e04795664f819f0daf7aee13c429f5120bd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/external/ISyncswapPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface ISyncswapPool {\\n    struct TokenAmount {\\n        address token;\\n        uint amount;\\n    }\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves() external view returns (uint256, uint256);\\n\\n    function getSwapFee(\\n        address _sender,\\n        address _tokenIn,\\n        address _tokenOut,\\n        bytes memory data\\n    ) external view returns (uint24);\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        uint256 _amountIn,\\n        address _sender\\n    ) external view returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        address _tokenOut,\\n        uint256 _amountOut,\\n        address _sender\\n    ) external view returns (uint256 amountIn);\\n\\n    function swap(\\n        bytes calldata _data,\\n        address _sender,\\n        address _callback,\\n        bytes calldata _callbackData\\n    ) external returns (TokenAmount memory tokenAmount);\\n}\\n\",\"keccak256\":\"0x7a4a3f4c180e34e2c1f032f2fdf1a1123d1fab128e621c5346b5ce064e0d8371\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/base/Lockable.sol":{"Lockable":{"abi":[{"inputs":[],"name":"Locked","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60806040526001600055348015601457600080fd5b50603f8060226000396000f3fe6080604052600080fdfea26469706673582212208bf86e24747a50e1d955aad6e724b27816fcc8804b2a64b0fec4877093aff8f864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x22 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xF8 PUSH15 0x24747A50E1D955AAD6E724B27816FC 0xC8 DUP1 0x4B 0x2A PUSH5 0xB0FEC48770 SWAP4 0xAF 0xF8 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"71:204:11:-:0;;;122:1;95:28;;71:204;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212208bf86e24747a50e1d955aad6e724b27816fcc8804b2a64b0fec4877093aff8f864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xF8 PUSH15 0x24747A50E1D955AAD6E724B27816FC 0xC8 DUP1 0x4B 0x2A PUSH5 0xB0FEC48770 SWAP4 0xAF 0xF8 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"71:204:11:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"22172","totalCost":"34772"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Lockable.sol\":\"Lockable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Lockable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ncontract Lockable {\\n    uint256 private unlocked = 1;\\n\\n    error Locked();\\n\\n    modifier lock() {\\n        if (unlocked != 1) revert Locked();\\n        unlocked = 0;\\n        _;\\n        unlocked = 1;\\n    }\\n}\\n\",\"keccak256\":\"0x51bad8a22e77a2611fc69518057a590b645033607e72076d43e66bb2591a89c2\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1139,"contract":"contracts/base/Lockable.sol:Lockable","label":"unlocked","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDEXIntegration.sol":{"IDEXIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"}],"name":"validatePair","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAmountIn(address,address,uint256)":"53b609b5","getAmountOut(address,address,uint256)":"4aa06652","swap(address,address,address)":"93316212","validatePair(address,address)":"b88c5f91"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"validatePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDEXIntegration.sol\":\"IDEXIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDEXIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IDEXIntegration {\\n    function validatePair(\\n        address _tokenIn,\\n        address _tokenOut\\n    ) external view returns (bool);\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountIn\\n    ) external view returns (uint256);\\n\\n    function getAmountIn(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _amountOut\\n    ) external view returns (uint256);\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _to\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xdb59a456949a60735ad9a8af40701ced24cd467bf0513d9a548f896f44ff7182\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IERC20.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"uint8","name":"_v","type":"uint8"},{"internalType":"bytes32","name":"_r","type":"bytes32"},{"internalType":"bytes32","name":"_s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IPriceFeedIntegration.sol":{"IPriceFeedIntegration":{"abi":[{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"PRECISION()":"aaf5eb68","getPrice(address,address)":"ac41865a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceFeedIntegration.sol\":\"IPriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeedIntegration {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/external/ISyncswapFactory.sol":{"ISyncswapFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getPool(address,address)":"531aa03e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/ISyncswapFactory.sol\":\"ISyncswapFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/ISyncswapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface ISyncswapFactory {\\n    function getPool(\\n        address _tokenA,\\n        address _tokenB\\n    ) external view returns (address);\\n}\\n\",\"keccak256\":\"0x0beff3920f67b483fdcc841692cc0e04795664f819f0daf7aee13c429f5120bd\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/external/ISyncswapPool.sol":{"ISyncswapPool":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getSwapFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_callback","type":"address"},{"internalType":"bytes","name":"_callbackData","type":"bytes"}],"name":"swap","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISyncswapPool.TokenAmount","name":"tokenAmount","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAmountIn(address,uint256,address)":"a287c795","getAmountOut(address,uint256,address)":"ff9c8ac6","getReserves()":"0902f1ac","getSwapFee(address,address,address,bytes)":"8b4c5470","swap(bytes,address,address,bytes)":"7132bb7f","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getSwapFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_callback\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_callbackData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISyncswapPool.TokenAmount\",\"name\":\"tokenAmount\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/ISyncswapPool.sol\":\"ISyncswapPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/ISyncswapPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface ISyncswapPool {\\n    struct TokenAmount {\\n        address token;\\n        uint amount;\\n    }\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves() external view returns (uint256, uint256);\\n\\n    function getSwapFee(\\n        address _sender,\\n        address _tokenIn,\\n        address _tokenOut,\\n        bytes memory data\\n    ) external view returns (uint24);\\n\\n    function getAmountOut(\\n        address _tokenIn,\\n        uint256 _amountIn,\\n        address _sender\\n    ) external view returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        address _tokenOut,\\n        uint256 _amountOut,\\n        address _sender\\n    ) external view returns (uint256 amountIn);\\n\\n    function swap(\\n        bytes calldata _data,\\n        address _sender,\\n        address _callback,\\n        bytes calldata _callbackData\\n    ) external returns (TokenAmount memory tokenAmount);\\n}\\n\",\"keccak256\":\"0x7a4a3f4c180e34e2c1f032f2fdf1a1123d1fab128e621c5346b5ce064e0d8371\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/TransferHelper.sol":{"TransferHelper":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bb40d7028c79b4e53abf5874575e3f9add0fef64bba67e9970457bc4c5bb48f64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xB40D7028C79B4E53ABF58745 PUSH22 0xE3F9ADD0FEF64BBA67E9970457BC4C5BB48F64736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"182:1715:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;182:1715:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bb40d7028c79b4e53abf5874575e3f9add0fef64bba67e9970457bc4c5bb48f64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xB40D7028C79B4E53ABF58745 PUSH22 0xE3F9ADD0FEF64BBA67E9970457BC4C5BB48F64736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"182:1715:17:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"safeApprove(address,address,uint256)":"infinite","safeTransfer(address,address,uint256)":"infinite","safeTransferETH(address,uint256)":"infinite","safeTransferFrom(address,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(address _token, address _to, uint256 _value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeApprove: approve failed\\\"\\n        );\\n    }\\n\\n    function safeTransfer(\\n        address _token,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeTransfer: transfer failed\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address _token,\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::transferFrom: transferFrom failed\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address _to, uint256 _value) internal {\\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\\n        require(\\n            success,\\n            \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}