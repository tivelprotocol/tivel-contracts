{"id":"5612fd7a6a89c19a8da9c5c44e839e47","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"},"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.4.0;\n\n/// @title FixedPoint96\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n/// @dev Used in SqrtPriceMath.sol\nlibrary FixedPoint96 {\n    uint8 internal constant RESOLUTION = 96;\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\n}\n"},"contracts/base/BancorConverterRegistry.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\n\r\npragma solidity >=0.8.4;\r\n\r\nimport \"./Owned.sol\";\r\nimport \"./Utils.sol\";\r\n\r\n/**\r\n    Bancor Converter Registry\r\n\r\n    The bancor converter registry keeps converter addresses by token addresses and vice versa.\r\n    The owner can update converter addresses so that a the token address always points to\r\n    the updated list of converters for each token.\r\n\r\n    The contract also allows to iterate through all the tokens in the network.\r\n\r\n    Note that converter addresses for each token are returned in ascending order (from oldest\r\n    to latest).\r\n*/\r\ncontract BancorConverterRegistry is Owned, Utils {\r\n    mapping(address => bool) private tokensRegistered; // token address -> registered or not\r\n    mapping(address => address[]) private tokensToConverters; // token address -> converter addresses\r\n    mapping(address => address) private convertersToTokens; // converter address -> token address\r\n    address[] public tokens; // list of all token addresses\r\n\r\n    // triggered when a converter is added to the registry\r\n    event ConverterAddition(address indexed _token, address _address);\r\n\r\n    // triggered when a converter is removed from the registry\r\n    event ConverterRemoval(address indexed _token, address _address);\r\n\r\n    /**\r\n        @dev constructor\r\n    */\r\n    constructor() public {}\r\n\r\n    /**\r\n        @dev returns the number of tokens in the registry\r\n\r\n        @return number of tokens\r\n    */\r\n    function tokenCount() public view returns (uint256) {\r\n        return tokens.length;\r\n    }\r\n\r\n    /**\r\n        @dev returns the number of converters associated with the given token\r\n        or 0 if the token isn't registered\r\n\r\n        @param _token   token address\r\n\r\n        @return number of converters\r\n    */\r\n    function converterCount(address _token) public view returns (uint256) {\r\n        return tokensToConverters[_token].length;\r\n    }\r\n\r\n    /**\r\n        @dev returns the converter address associated with the given token\r\n        or zero address if no such converter exists\r\n\r\n        @param _token   token address\r\n        @param _index   converter index\r\n\r\n        @return converter address\r\n    */\r\n    function converterAddress(\r\n        address _token,\r\n        uint32 _index\r\n    ) public view returns (address) {\r\n        if (_index >= tokensToConverters[_token].length) return address(0);\r\n\r\n        return tokensToConverters[_token][_index];\r\n    }\r\n\r\n    /**\r\n        @dev returns the token address associated with the given converter\r\n        or zero address if no such converter exists\r\n\r\n        @param _converter   converter address\r\n\r\n        @return token address\r\n    */\r\n    function tokenAddress(address _converter) public view returns (address) {\r\n        return convertersToTokens[_converter];\r\n    }\r\n\r\n    /**\r\n        @dev adds a new converter address for a given token to the registry\r\n        throws if the converter is already registered\r\n\r\n        @param _token       token address\r\n        @param _converter   converter address\r\n    */\r\n    function registerConverter(\r\n        address _token,\r\n        address _converter\r\n    ) public ownerOnly validAddress(_token) validAddress(_converter) {\r\n        require(convertersToTokens[_converter] == address(0));\r\n\r\n        // add the token to the list of tokens\r\n        if (!tokensRegistered[_token]) {\r\n            tokens.push(_token);\r\n            tokensRegistered[_token] = true;\r\n        }\r\n\r\n        tokensToConverters[_token].push(_converter);\r\n        convertersToTokens[_converter] = _token;\r\n\r\n        // dispatch the converter addition event\r\n        emit ConverterAddition(_token, _converter);\r\n    }\r\n\r\n    /**\r\n        @dev removes an existing converter from the registry\r\n        note that the function doesn't scale and might be needed to be called\r\n        multiple times when removing an older converter from a large converter list\r\n\r\n        @param _token   token address\r\n        @param _index   converter index\r\n    */\r\n    function unregisterConverter(\r\n        address _token,\r\n        uint32 _index\r\n    ) public ownerOnly validAddress(_token) {\r\n        require(_index < tokensToConverters[_token].length);\r\n\r\n        address converter = tokensToConverters[_token][_index];\r\n\r\n        // move all newer converters 1 position lower\r\n        for (\r\n            uint32 i = _index + 1;\r\n            i < tokensToConverters[_token].length;\r\n            i++\r\n        ) {\r\n            tokensToConverters[_token][i - 1] = tokensToConverters[_token][i];\r\n        }\r\n\r\n        // decrease the number of converters defined for the token by 1\r\n        tokensToConverters[_token].pop();\r\n\r\n        // removes the converter from the converters -> tokens list\r\n        delete convertersToTokens[converter];\r\n\r\n        // dispatch the converter removal event\r\n        emit ConverterRemoval(_token, converter);\r\n    }\r\n\r\n    function blockStamp() external view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n}\r\n"},"contracts/base/Lockable.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\n\npragma solidity >=0.8.4;\n\ncontract Lockable {\n    uint256 private unlocked = 1;\n\n    modifier lock() {\n        require(unlocked == 1, \"Lockable: LOCKED\");\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n}\n"},"contracts/base/Multicall.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\npragma abicoder v2;\n\ncontract Multicall {\n    struct Call {\n        address target;\n        bytes callData;\n    }\n    struct Result {\n        bool success;\n        bytes returnData;\n    }\n\n    function aggregate(\n        Call[] memory _calls\n    ) public returns (uint256 blockNumber, bytes[] memory returnData) {\n        blockNumber = block.number;\n        returnData = new bytes[](_calls.length);\n        for (uint256 i = 0; i < _calls.length; i++) {\n            (bool success, bytes memory ret) = _calls[i].target.call(\n                _calls[i].callData\n            );\n            require(success, \"Multicall aggregate: call failed\");\n            returnData[i] = ret;\n        }\n    }\n\n    function blockAndAggregate(\n        Call[] memory _calls\n    )\n        public\n        returns (\n            uint256 blockNumber,\n            bytes32 blockHash,\n            Result[] memory returnData\n        )\n    {\n        (blockNumber, blockHash, returnData) = tryBlockAndAggregate(\n            true,\n            _calls\n        );\n    }\n\n    function getBlockHash(\n        uint256 _blockNumber\n    ) public view returns (bytes32 blockHash) {\n        blockHash = blockhash(_blockNumber);\n    }\n\n    function getBlockNumber() public view returns (uint256 blockNumber) {\n        blockNumber = block.number;\n    }\n\n    function getCurrentBlockCoinbase() public view returns (address coinbase) {\n        coinbase = block.coinbase;\n    }\n\n    function getCurrentBlockDifficulty()\n        public\n        view\n        returns (uint256 difficulty)\n    {\n        difficulty = block.difficulty;\n    }\n\n    function getCurrentBlockGasLimit() public view returns (uint256 gaslimit) {\n        gaslimit = block.gaslimit;\n    }\n\n    function getCurrentBlockTimestamp()\n        public\n        view\n        returns (uint256 timestamp)\n    {\n        timestamp = block.timestamp;\n    }\n\n    function getEthBalance(\n        address _addr\n    ) public view returns (uint256 balance) {\n        balance = _addr.balance;\n    }\n\n    function getLastBlockHash() public view returns (bytes32 blockHash) {\n        blockHash = blockhash(block.number - 1);\n    }\n\n    function tryAggregate(\n        bool _requireSuccess,\n        Call[] memory _calls\n    ) public returns (Result[] memory returnData) {\n        returnData = new Result[](_calls.length);\n        for (uint256 i = 0; i < _calls.length; i++) {\n            (bool success, bytes memory ret) = _calls[i].target.call(\n                _calls[i].callData\n            );\n\n            if (_requireSuccess) {\n                require(success, \"Multicall2 aggregate: call failed\");\n            }\n\n            returnData[i] = Result(success, ret);\n        }\n    }\n\n    function tryBlockAndAggregate(\n        bool _requireSuccess,\n        Call[] memory _calls\n    )\n        public\n        returns (\n            uint256 blockNumber,\n            bytes32 blockHash,\n            Result[] memory returnData\n        )\n    {\n        blockNumber = block.number;\n        blockHash = blockhash(block.number);\n        returnData = tryAggregate(_requireSuccess, _calls);\n    }\n}\n"},"contracts/base/Owned.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\n\npragma solidity >=0.8.4;\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnerUpdate(address indexed _prevOwner, address indexed _newOwner);\n\n    /**\n        @dev constructor\n    */\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    // allows execution by the owner only\n    modifier ownerOnly() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n        @dev allows transferring the contract ownership\n        the new owner still needs to accept the transfer\n        can only be called by the contract owner\n\n        @param _newOwner    new contract owner\n    */\n    function transferOwnership(address _newOwner) external ownerOnly {\n        require(_newOwner != owner);\n        newOwner = _newOwner;\n    }\n\n    /**\n        @dev used by a new owner to accept an ownership transfer\n    */\n    function acceptOwnership() external {\n        require(msg.sender == newOwner);\n        emit OwnerUpdate(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n"},"contracts/base/Utils.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\n\npragma solidity >=0.8.4;\n\ncontract Utils {\n    /**\n        constructor\n    */\n    constructor() public {}\n\n    // verifies that an amount is greater than zero\n    modifier greaterThanZero(uint256 _amount) {\n        require(_amount > 0);\n        _;\n    }\n\n    // validates an address - currently only checks that it isn't null\n    modifier validAddress(address _address) {\n        require(_address != address(0));\n        _;\n    }\n\n    // verifies that the address is different than this contract address\n    modifier notThis(address _address) {\n        require(_address != address(this));\n        _;\n    }\n}\n"},"contracts/ChainlinkPriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"./interfaces/IPriceFeedIntegration.sol\";\nimport \"./interfaces/IChainlinkPriceFeed.sol\";\n\ncontract ChainlinkPriceFeedIntegration is IPriceFeedIntegration {\n    uint256 public constant override PRECISION = 1e8;\n    address public manager;\n    mapping(address => address) feeds;\n\n    event SetManager(address manager);\n    event SetPriceFeed(address token, address feed);\n\n    error Forbidden(address sender);\n    error InvalidFeed(address token);\n\n    constructor() {\n        manager = msg.sender;\n    }\n\n    modifier onlyManager() {\n        if (msg.sender != manager) revert Forbidden(msg.sender);\n        _;\n    }\n\n    function setManager(address _manager) external onlyManager {\n        manager = _manager;\n\n        emit SetManager(_manager);\n    }\n\n    function setPriceFeed(address _token, address _feed) external onlyManager {\n        feeds[_token] = _feed;\n\n        emit SetPriceFeed(_token, _feed);\n    }\n\n    function _price(address _token) internal view returns (uint256 price) {\n        address feed = feeds[_token];\n        if (feed == address(0)) revert InvalidFeed(_token);\n        price = IChainlinkPriceFeed(feed).latestAnswer();\n    }\n\n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view override returns (uint256 price) {\n        uint256 basePrice = _price(_baseToken);\n        if (basePrice > 0) {\n            uint256 quotePrice = _price(_quoteToken);\n            price = (quotePrice * PRECISION) / basePrice;\n        }\n    }\n}\n"},"contracts/GMXPriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"./interfaces/IPriceFeedIntegration.sol\";\nimport \"./interfaces/IGMXPriceFeed.sol\";\n\ncontract GMXPriceFeedIntegration is IPriceFeedIntegration {\n    uint256 public constant override PRECISION = 1e30;\n    address public immutable feed; // 0x11D62807dAE812a0F1571243460Bf94325F43BB7\n\n    constructor(address _feed) {\n        feed = _feed;\n    }\n\n    function _price(address _token) internal view returns (uint256 price) {\n        price = IGMXPriceFeed(feed).prices(_token);\n    }\n\n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view override returns (uint256 price) {\n        uint256 basePrice = _price(_baseToken);\n        if (basePrice > 0) {\n            uint256 quotePrice = _price(_quoteToken);\n            price = (quotePrice * PRECISION) / basePrice;\n        }\n    }\n}\n"},"contracts/interfaces/IChainlinkPriceFeed.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IChainlinkPriceFeed {\n    function latestAnswer() external view returns (uint256);\n}\n"},"contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IERC20 {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address) external view returns (uint256);\n\n    function allowance(\n        address _owner,\n        address _spender\n    ) external view returns (uint256);\n\n    function approve(address _spender, uint256 _value) external returns (bool);\n\n    function transfer(address _to, uint256 _value) external returns (bool);\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) external returns (bool);\n\n    function permit(\n        address _owner,\n        address _spender,\n        uint256 _value,\n        uint256 _deadline,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    ) external;\n}\n"},"contracts/interfaces/IGMXPriceFeed.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IGMXPriceFeed {\n    function prices(address) external view returns (uint256);\n}\n"},"contracts/interfaces/IPriceFeed.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IPriceFeed {\n    function PRECISION() external view returns (uint256);\n    \n    function getHighestPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view returns (uint256);\n\n    function getLowestPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view returns (uint256);\n}\n"},"contracts/interfaces/IPriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IPriceFeedIntegration {\n    function PRECISION() external view returns (uint256);\n    \n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view returns (uint256);\n}\n"},"contracts/interfaces/IWETH.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.8.4;\r\n\r\ninterface IWETH {\r\n    function deposit() external payable;\r\n\r\n    function transfer(address _to, uint256 _value) external returns (bool);\r\n\r\n    function withdraw(uint256) external;\r\n}\r\n"},"contracts/libraries/ChainId.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.0;\n\n/// @title Function for getting the current chain ID\nlibrary ChainId {\n    /// @dev Gets the current chain ID\n    /// @return chainId The current chain ID\n    function get() internal view returns (uint256 chainId) {\n        assembly {\n            chainId := chainid()\n        }\n    }\n}\n"},"contracts/libraries/LowGasSafeMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.0;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nlibrary LowGasSafeMath {\n    /// @notice Returns x + y, reverts if sum overflows uint256\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    /// @notice Returns x - y, reverts if underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    /// @notice Returns x * y, reverts if overflows\n    /// @param x The multiplicand\n    /// @param y The multiplier\n    /// @return z The product of x and y\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(x == 0 || (z = x * y) / x == y);\n    }\n\n    /// @notice Returns x / y, reverts if y == 0\n    /// @param x The numerator\n    /// @param y The denominator\n    /// @return z The product of x and y\n    function div(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y != 0);\n        z = x / y;\n    }\n\n    /// @notice Returns x + y, reverts if overflows or underflows\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x + y) >= x == (y >= 0));\n    }\n\n    /// @notice Returns x - y, reverts if overflows or underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x - y) <= x == (y >= 0));\n    }\n}"},"contracts/libraries/Math.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint _x, uint _y) internal pure returns (uint z) {\n        z = _x < _y ? _x : _y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint _y) internal pure returns (uint z) {\n        if (_y > 3) {\n            z = _y;\n            uint x = _y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (_y / x + x) / 2;\n            }\n        } else if (_y != 0) {\n            z = 1;\n        }\n    }\n}\n"},"contracts/libraries/PoolAddress.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\n/// @title Provides functions for deriving a pool address from the pool deployer, tokens\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH =\n        0x5d5042c6f18fddfd115258692fd1791bd001ac84854ff0ae0ec27cbf2c2a40aa;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token;\n    }\n\n    function getPoolKey(\n        address _token\n    ) internal pure returns (PoolKey memory) {\n        return PoolKey({token: _token});\n    }\n\n    function computeAddress(\n        address _poolDeployer,\n        PoolKey memory _key\n    ) internal pure returns (address pool) {\n        pool = address(\n            uint160(\n                uint256(\n                    keccak256(\n                        abi.encodePacked(\n                            hex\"ff\",\n                            _poolDeployer,\n                            keccak256(abi.encode(_key.token)),\n                            POOL_INIT_CODE_HASH\n                        )\n                    )\n                )\n            )\n        );\n    }\n}\n"},"contracts/libraries/TransferHelper.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address _token, address _to, uint256 _value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeApprove: approve failed\"\n        );\n    }\n\n    function safeTransfer(\n        address _token,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address _token,\n        address _from,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address _to, uint256 _value) internal {\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"},"contracts/PriceFeed.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"./interfaces/IPriceFeed.sol\";\nimport \"./interfaces/IPriceFeedIntegration.sol\";\n\ncontract PriceFeed is IPriceFeed {\n    uint256 public constant override PRECISION = 1e30;\n    address public manager;\n    address[] public integrations;\n\n    event SetManager(address manager);\n    event SetIntegrations(address[] integrations);\n\n    error Forbidden(address sender);\n\n    constructor() {\n        manager = msg.sender;\n    }\n\n    modifier onlyManager() {\n        if (msg.sender != manager) revert Forbidden(msg.sender);\n        _;\n    }\n\n    function setManager(address _manager) external onlyManager {\n        manager = _manager;\n\n        emit SetManager(_manager);\n    }\n\n    function setIntegrations(\n        address[] memory _integrations\n    ) external onlyManager {\n        integrations = _integrations;\n\n        emit SetIntegrations(_integrations);\n    }\n\n    function getHighestPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view override returns (uint256 highestPrice) {\n        uint256 length = integrations.length;\n        for (uint256 i = 0; i < length; i++) {\n            IPriceFeedIntegration integration = IPriceFeedIntegration(\n                integrations[i]\n            );\n            uint256 price = integration.getPrice(_baseToken, _quoteToken);\n            uint256 prec = integration.PRECISION();\n            price = (price * PRECISION) / prec;\n\n            if (price > highestPrice) {\n                highestPrice = price;\n            }\n        }\n    }\n\n    function getLowestPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view override returns (uint256 lowestPrice) {\n        uint256 length = integrations.length;\n        for (uint256 i = 0; i < length; i++) {\n            IPriceFeedIntegration integration = IPriceFeedIntegration(\n                integrations[i]\n            );\n            uint256 price = integration.getPrice(_baseToken, _quoteToken);\n            uint256 prec = integration.PRECISION();\n            price = (price * PRECISION) / prec;\n\n            if (price > 0 && price < lowestPrice) {\n                lowestPrice = price;\n            }\n        }\n    }\n}\n"},"contracts/test/MockERC20.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MockERC20 is ERC20, Ownable {\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 supply\n    ) public ERC20(name, symbol) {\n        _mint(msg.sender, supply);\n    }\n\n    function burn(address account, uint256 amount) public virtual {\n        _burn(account, amount);\n    }\n}\n"},"contracts/TokenReader.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\npragma abicoder v2;\n\nimport \"./interfaces/IERC20.sol\";\n\ncontract TokenReader {\n    function getTokenSupplies(\n        address[] memory _tokens\n    ) external view returns (uint256[] memory) {\n        uint256 length = _tokens.length;\n        uint256[] memory supplies = new uint256[](length);\n        for (uint256 i = 0; i < length; i++) {\n            require(_tokens[i] != address(0), \"TokenReader: ZERO_ADDRESS\");\n            supplies[i] = IERC20(_tokens[i]).totalSupply();\n        }\n        return supplies;\n    }\n\n    function getTokenDecimals(\n        address[] memory _tokens\n    ) external view returns (uint256[] memory) {\n        uint256 length = _tokens.length;\n        uint256[] memory decimals = new uint256[](length);\n        for (uint256 i = 0; i < length; i++) {\n            require(_tokens[i] != address(0), \"TokenReader: ZERO_ADDRESS\");\n            decimals[i] = IERC20(_tokens[i]).decimals();\n        }\n        return decimals;\n    }\n\n    function getTokensBalance(\n        address _user,\n        address[] memory _tokens\n    ) external view returns (uint256[] memory) {\n        uint256 length = _tokens.length;\n        uint256[] memory balances = new uint256[](length);\n        for (uint256 i = 0; i < length; i++) {\n            require(_tokens[i] != address(0), \"TokenReader: ZERO_ADDRESS\");\n            balances[i] = IERC20(_tokens[i]).balanceOf(_user);\n        }\n        return balances;\n    }\n\n    function getTokenBalances(\n        address[] memory _users,\n        address _token\n    ) external view returns (uint256[] memory) {\n        require(_token != address(0), \"TokenReader: ZERO_ADDRESS\");\n        uint256 length = _users.length;\n        uint256[] memory balances = new uint256[](length);\n        for (uint256 i = 0; i < length; i++) {\n            balances[i] = IERC20(_token).balanceOf(_users[i]);\n        }\n        return balances;\n    }\n\n    function getTokensAllowance(\n        address _user,\n        address[] memory _tokens,\n        address _spender\n    ) external view returns (uint256[] memory) {\n        uint256 length = _tokens.length;\n        uint256[] memory allowances = new uint256[](length);\n        for (uint256 i = 0; i < length; i++) {\n            require(_tokens[i] != address(0), \"TokenReader: ZERO_ADDRESS\");\n            allowances[i] = IERC20(_tokens[i]).allowance(_user, _spender);\n        }\n        return allowances;\n    }\n\n    function getTokenAllowances(\n        address[] memory _users,\n        address _token,\n        address _spender\n    ) external view returns (uint256[] memory) {\n        require(_token != address(0), \"TokenReader: ZERO_ADDRESS\");\n        uint256 length = _users.length;\n        uint256[] memory allowances = new uint256[](length);\n        for (uint256 i = 0; i < length; i++) {\n            allowances[i] = IERC20(_token).allowance(_users[i], _spender);\n        }\n        return allowances;\n    }\n}\n"},"contracts/UniswapV3PriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\";\nimport \"./interfaces/IPriceFeedIntegration.sol\";\nimport \"./interfaces/IERC20.sol\";\n\ncontract UniswapV3PriceFeedIntegration is IPriceFeedIntegration {\n    uint256 public constant override PRECISION = 1e30;\n    address public immutable factory;\n    uint24[] public feeTiers = [100, 500, 3000, 10000];\n\n    constructor(address _factory) {\n        factory = _factory;\n    }\n\n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view override returns (uint256 price) {\n        uint256 length = feeTiers.length;\n        IUniswapV3Factory _factory = IUniswapV3Factory(factory);\n        uint256 bestLiquidity;\n        for (uint256 i = 0; i < length; i++) {\n            address poolAddress = _factory.getPool(\n                _baseToken,\n                _quoteToken,\n                feeTiers[i]\n            );\n            if (poolAddress != address(0)) {\n                IUniswapV3Pool pool = IUniswapV3Pool(poolAddress);\n                address token0 = pool.token0();\n                uint256 balance0 = IERC20(token0).balanceOf(poolAddress);\n                address token1 = pool.token1();\n                uint256 balance1 = IERC20(token1).balanceOf(poolAddress);\n                (uint160 sqrtPriceX96, , , , , , ) = pool.slot0();\n                uint256 price0 = (uint256(sqrtPriceX96) ** 2 * PRECISION) /\n                    (FixedPoint96.Q96 ** 2);\n                uint256 liquidity = (balance0 * price0) / PRECISION + balance1;\n                if (liquidity > bestLiquidity) {\n                    bestLiquidity = liquidity;\n                    uint256 prec0 = 10 ** IERC20(token0).decimals();\n                    uint256 prec1 = 10 ** IERC20(token1).decimals();\n                    price = (price0 * prec0) / prec1;\n                }\n            }\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/base/Owned.sol:14:5:\n   |\n14 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":324,"file":"contracts/base/Owned.sol","start":268},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> contracts/base/Utils.sol:9:5:\n  |\n9 |     constructor() public {}\n  |     ^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":151,"file":"contracts/base/Utils.sol","start":128},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/base/BancorConverterRegistry.sol:35:5:\n   |\n35 |     constructor() public {}\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":1353,"file":"contracts/base/BancorConverterRegistry.sol","start":1330},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> contracts/test/MockERC20.sol:8:5:\n  |\n8 |     constructor(\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":393,"file":"contracts/test/MockERC20.sol","start":224},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[824],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":825,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":824,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,824],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[824],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802]},"id":700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":778,"src":"130:22:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":803,"src":"153:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":825,"src":"195:33:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":119,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":824,"src":"1550:7:1"},"id":120,"nodeType":"InheritanceSpecifier","src":"1550:7:1"},{"baseName":{"id":121,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1559:6:1"},"id":122,"nodeType":"InheritanceSpecifier","src":"1559:6:1"},{"baseName":{"id":123,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1567:14:1"},"id":124,"nodeType":"InheritanceSpecifier","src":"1567:14:1"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"230:1301:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":699,"linearizedBaseContracts":[699,802,777,824],"name":"ERC20","nameLocation":"1541:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":128,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:1","nodeType":"VariableDeclaration","scope":699,"src":"1588:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":127,"keyType":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":134,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:1","nodeType":"VariableDeclaration","scope":699,"src":"1640:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":133,"keyType":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":132,"keyType":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":136,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:1","nodeType":"VariableDeclaration","scope":699,"src":"1714:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":138,"mutability":"mutable","name":"_name","nameLocation":"1764:5:1","nodeType":"VariableDeclaration","scope":699,"src":"1749:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":137,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":140,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:1","nodeType":"VariableDeclaration","scope":699,"src":"1775:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":139,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":156,"nodeType":"Block","src":"2036:57:1","statements":[{"expression":{"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":148,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2046:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":149,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2054:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":151,"nodeType":"ExpressionStatement","src":"2046:13:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2079:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":155,"nodeType":"ExpressionStatement","src":"2069:17:1"}]},"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"1804:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"name_","nameLocation":"2006:5:1","nodeType":"VariableDeclaration","scope":157,"src":"1992:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":142,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:1","nodeType":"VariableDeclaration","scope":157,"src":"2013:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":144,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:1"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"2036:0:1"},"scope":699,"src":"1980:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[789],"body":{"id":166,"nodeType":"Block","src":"2227:29:1","statements":[{"expression":{"id":164,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2244:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"2237:12:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"2099:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":167,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:1","nodeType":"FunctionDefinition","overrides":{"id":160,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:1"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2171:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"2212:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":161,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:1"},"scope":699,"src":"2158:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[795],"body":{"id":176,"nodeType":"Block","src":"2440:31:1","statements":[{"expression":{"id":174,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2457:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":173,"id":175,"nodeType":"Return","src":"2450:14:1"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"2262:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":177,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:1","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:1"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"2384:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2425:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":171,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:1"},"scope":699,"src":"2369:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[801],"body":{"id":186,"nodeType":"Block","src":"3169:26:1","statements":[{"expression":{"hexValue":"3138","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":183,"id":185,"nodeType":"Return","src":"3179:9:1"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2477:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":187,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:1","nodeType":"FunctionDefinition","overrides":{"id":180,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:1"},"parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"3121:2:1"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":187,"src":"3162:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:1"},"scope":699,"src":"3104:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[726],"body":{"id":196,"nodeType":"Block","src":"3325:36:1","statements":[{"expression":{"id":194,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3342:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"3335:19:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"3201:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:1","nodeType":"FunctionDefinition","overrides":{"id":190,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:1"},"parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"3275:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"3316:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:1"},"scope":699,"src":"3255:106:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[734],"body":{"id":210,"nodeType":"Block","src":"3502:42:1","statements":[{"expression":{"baseExpression":{"id":206,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3519:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":208,"indexExpression":{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"3529:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":205,"id":209,"nodeType":"Return","src":"3512:25:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"3367:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":211,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:1","nodeType":"FunctionDefinition","overrides":{"id":202,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:1"},"parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"account","nameLocation":"3446:7:1","nodeType":"VariableDeclaration","scope":211,"src":"3438:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"3493:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:1"},"scope":699,"src":"3419:125:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[744],"body":{"id":235,"nodeType":"Block","src":"3825:104:1","statements":[{"assignments":[223],"declarations":[{"constant":false,"id":223,"mutability":"mutable","name":"owner","nameLocation":"3843:5:1","nodeType":"VariableDeclaration","scope":235,"src":"3835:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":226,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":224,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3851:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:1"},{"expression":{"arguments":[{"id":228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3883:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3890:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3894:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":227,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3873:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3873:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"ExpressionStatement","src":"3873:28:1"},{"expression":{"hexValue":"74727565","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":221,"id":234,"nodeType":"Return","src":"3911:11:1"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3550:185:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":236,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:1","nodeType":"FunctionDefinition","overrides":{"id":218,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:1"},"parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"to","nameLocation":"3766:2:1","nodeType":"VariableDeclaration","scope":236,"src":"3758:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"amount","nameLocation":"3778:6:1","nodeType":"VariableDeclaration","scope":236,"src":"3770:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:1"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"3819:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:1"},"scope":699,"src":"3740:189:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":253,"nodeType":"Block","src":"4085:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":247,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4102:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":249,"indexExpression":{"id":248,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4114:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":251,"indexExpression":{"id":250,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4121:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":246,"id":252,"nodeType":"Return","src":"4095:34:1"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3935:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":254,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:1","nodeType":"FunctionDefinition","overrides":{"id":243,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:1"},"parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"4014:5:1","nodeType":"VariableDeclaration","scope":254,"src":"4006:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"spender","nameLocation":"4029:7:1","nodeType":"VariableDeclaration","scope":254,"src":"4021:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"4076:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:1"},"scope":699,"src":"3987:149:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[764],"body":{"id":278,"nodeType":"Block","src":"4533:108:1","statements":[{"assignments":[266],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"owner","nameLocation":"4551:5:1","nodeType":"VariableDeclaration","scope":278,"src":"4543:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4559:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4559:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:1"},{"expression":{"arguments":[{"id":271,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4590:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":272,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4597:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4606:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":270,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4581:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":275,"nodeType":"ExpressionStatement","src":"4581:32:1"},{"expression":{"hexValue":"74727565","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":264,"id":277,"nodeType":"Return","src":"4623:11:1"}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"4142:297:1","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":279,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:1","nodeType":"FunctionDefinition","overrides":{"id":261,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:1"},"parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"spender","nameLocation":"4469:7:1","nodeType":"VariableDeclaration","scope":279,"src":"4461:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"amount","nameLocation":"4486:6:1","nodeType":"VariableDeclaration","scope":279,"src":"4478:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"4527:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:1"},"scope":699,"src":"4444:197:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[776],"body":{"id":311,"nodeType":"Block","src":"5306:153:1","statements":[{"assignments":[293],"declarations":[{"constant":false,"id":293,"mutability":"mutable","name":"spender","nameLocation":"5324:7:1","nodeType":"VariableDeclaration","scope":311,"src":"5316:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":296,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":294,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5334:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5334:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:1"},{"expression":{"arguments":[{"id":298,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5372:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"5378:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":300,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5387:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":297,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5356:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5356:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"ExpressionStatement","src":"5356:38:1"},{"expression":{"arguments":[{"id":304,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5414:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5420:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5424:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":303,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5404:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"5404:27:1"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":291,"id":310,"nodeType":"Return","src":"5441:11:1"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"4647:551:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:1","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:1"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"from","nameLocation":"5233:4:1","nodeType":"VariableDeclaration","scope":312,"src":"5225:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"to","nameLocation":"5247:2:1","nodeType":"VariableDeclaration","scope":312,"src":"5239:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"amount","nameLocation":"5259:6:1","nodeType":"VariableDeclaration","scope":312,"src":"5251:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:1"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"5300:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:1"},"scope":699,"src":"5203:256:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":340,"nodeType":"Block","src":"5948:140:1","statements":[{"assignments":[323],"declarations":[{"constant":false,"id":323,"mutability":"mutable","name":"owner","nameLocation":"5966:5:1","nodeType":"VariableDeclaration","scope":340,"src":"5958:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":324,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5974:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5974:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:1"},{"expression":{"arguments":[{"id":328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6005:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":329,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6012:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6031:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6038:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":330,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6021:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":334,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"6049:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":327,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5996:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5996:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"5996:64:1"},{"expression":{"hexValue":"74727565","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":321,"id":339,"nodeType":"Return","src":"6070:11:1"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"5465:384:1","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":341,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:1","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5889:7:1","nodeType":"VariableDeclaration","scope":341,"src":"5881:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:1","nodeType":"VariableDeclaration","scope":341,"src":"5898:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:1"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"5942:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:1"},"scope":699,"src":"5854:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":381,"nodeType":"Block","src":"6674:328:1","statements":[{"assignments":[352],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"owner","nameLocation":"6692:5:1","nodeType":"VariableDeclaration","scope":381,"src":"6684:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":353,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"6700:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:1"},{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:1","nodeType":"VariableDeclaration","scope":381,"src":"6722:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":362,"initialValue":{"arguments":[{"id":359,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6759:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6766:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":358,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6749:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6749:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":364,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6792:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":365,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6812:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6784:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"6784:85:1"},{"id":378,"nodeType":"UncheckedBlock","src":"6879:95:1","statements":[{"expression":{"arguments":[{"id":371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6912:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6919:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":373,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6928:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":374,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6947:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6903:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6903:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"6903:60:1"}]},{"expression":{"hexValue":"74727565","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":350,"id":380,"nodeType":"Return","src":"6984:11:1"}]},"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"6094:476:1","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"spender","nameLocation":"6610:7:1","nodeType":"VariableDeclaration","scope":382,"src":"6602:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:1","nodeType":"VariableDeclaration","scope":382,"src":"6619:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:1"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"6668:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:1"},"scope":699,"src":"6575:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7534:710:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7552:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:1","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7560:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"7544:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7630:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:1","typeDescriptions":{}}},"id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7636:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"7622:64:1"},{"expression":{"arguments":[{"id":413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7718:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7724:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7728:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7697:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7697:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"7697:38:1"},{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:1","nodeType":"VariableDeclaration","scope":458,"src":"7746:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":423,"initialValue":{"baseExpression":{"id":420,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7768:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":422,"indexExpression":{"id":421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7778:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7801:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7816:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7793:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"7793:72:1"},{"id":445,"nodeType":"UncheckedBlock","src":"7875:273:1","statements":[{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":431,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":433,"indexExpression":{"id":432,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7909:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7917:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7931:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":438,"nodeType":"ExpressionStatement","src":"7899:38:1"},{"expression":{"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":439,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8114:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":441,"indexExpression":{"id":440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8124:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8131:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":444,"nodeType":"ExpressionStatement","src":"8114:23:1"}]},{"eventCall":{"arguments":[{"id":447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8172:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8178:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8182:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8163:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8163:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"EmitStatement","src":"8158:31:1"},{"expression":{"arguments":[{"id":453,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8220:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8226:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8230:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"8200:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8200:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"8200:37:1"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"7008:443:1","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:1","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"from","nameLocation":"7483:4:1","nodeType":"VariableDeclaration","scope":459,"src":"7475:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"to","nameLocation":"7497:2:1","nodeType":"VariableDeclaration","scope":459,"src":"7489:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"amount","nameLocation":"7509:6:1","nodeType":"VariableDeclaration","scope":459,"src":"7501:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:1"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"7534:0:1"},"scope":699,"src":"7456:788:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"8585:470:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":468,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8603:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:1","typeDescriptions":{}}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8614:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8595:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"8595:65:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:1","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8692:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8704:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8713:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8671:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"8671:49:1"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"8731:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":487,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8747:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"8731:22:1"},{"id":496,"nodeType":"UncheckedBlock","src":"8763:175:1","statements":[{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":490,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":492,"indexExpression":{"id":491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8909:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8921:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"nodeType":"ExpressionStatement","src":"8899:28:1"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:1","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8961:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8973:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8982:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":497,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8952:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8952:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"EmitStatement","src":"8947:42:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:1","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9020:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"9032:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"9041:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9000:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9000:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"9000:48:1"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"8250:265:1","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:1","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"account","nameLocation":"8543:7:1","nodeType":"VariableDeclaration","scope":516,"src":"8535:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"amount","nameLocation":"8560:6:1","nodeType":"VariableDeclaration","scope":516,"src":"8552:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:1"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"8585:0:1"},"scope":699,"src":"8520:535:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"9440:594:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9458:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:1","typeDescriptions":{}}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9469:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"9450:67:1"},{"expression":{"arguments":[{"id":535,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9549:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:1","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9558:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9570:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":534,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9528:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9528:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"9528:49:1"},{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:1","nodeType":"VariableDeclaration","scope":587,"src":"9588:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":548,"initialValue":{"baseExpression":{"id":545,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9613:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":547,"indexExpression":{"id":546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9623:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9649:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9667:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9641:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"9641:71:1"},{"id":568,"nodeType":"UncheckedBlock","src":"9722:194:1","statements":[{"expression":{"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":556,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9746:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":558,"indexExpression":{"id":557,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9756:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9767:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9784:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":563,"nodeType":"ExpressionStatement","src":"9746:44:1"},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":564,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"9883:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9899:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"9883:22:1"}]},{"eventCall":{"arguments":[{"id":570,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9940:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:1","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9949:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9961:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":569,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9931:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9931:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"EmitStatement","src":"9926:42:1"},{"expression":{"arguments":[{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:1","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10008:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"10020:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9979:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9979:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"9979:48:1"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"9061:309:1","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:1","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"account","nameLocation":"9398:7:1","nodeType":"VariableDeclaration","scope":588,"src":"9390:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"amount","nameLocation":"9415:6:1","nodeType":"VariableDeclaration","scope":588,"src":"9407:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:1"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"9440:0:1"},"scope":699,"src":"9375:659:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"10540:257:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10558:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:1","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10567:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10550:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"10550:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10636:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:1","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10647:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10628:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"10628:68:1"},{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":618,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"10707:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":621,"indexExpression":{"id":619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10719:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"id":620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10726:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":623,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10737:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":625,"nodeType":"ExpressionStatement","src":"10707:36:1"},{"eventCall":{"arguments":[{"id":627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10767:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10774:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10783:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10758:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"EmitStatement","src":"10753:37:1"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"10040:412:1","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:1","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"owner","nameLocation":"10483:5:1","nodeType":"VariableDeclaration","scope":633,"src":"10475:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"spender","nameLocation":"10498:7:1","nodeType":"VariableDeclaration","scope":633,"src":"10490:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"amount","nameLocation":"10515:6:1","nodeType":"VariableDeclaration","scope":633,"src":"10507:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:1"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"10540:0:1"},"scope":699,"src":"10457:340:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"11168:321:1","statements":[{"assignments":[644],"declarations":[{"constant":false,"id":644,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:1","nodeType":"VariableDeclaration","scope":675,"src":"11178:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[{"id":646,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11215:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11222:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"11205:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11205:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":650,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11244:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11264:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11264:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":674,"nodeType":"IfStatement","src":"11240:243:1","trueBody":{"id":673,"nodeType":"Block","src":"11283:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11305:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11325:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11297:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"11297:68:1"},{"id":672,"nodeType":"UncheckedBlock","src":"11379:94:1","statements":[{"expression":{"arguments":[{"id":665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11416:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11423:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11432:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11451:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":664,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"11407:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11407:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"11407:51:1"}]}]}}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"10803:270:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:1","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"owner","nameLocation":"11111:5:1","nodeType":"VariableDeclaration","scope":676,"src":"11103:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"spender","nameLocation":"11126:7:1","nodeType":"VariableDeclaration","scope":676,"src":"11118:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"amount","nameLocation":"11143:6:1","nodeType":"VariableDeclaration","scope":676,"src":"11135:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:1"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"11168:0:1"},"scope":699,"src":"11078:411:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":686,"nodeType":"Block","src":"12162:2:1","statements":[]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"11495:573:1","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:1","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"from","nameLocation":"12111:4:1","nodeType":"VariableDeclaration","scope":687,"src":"12103:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"to","nameLocation":"12125:2:1","nodeType":"VariableDeclaration","scope":687,"src":"12117:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"amount","nameLocation":"12137:6:1","nodeType":"VariableDeclaration","scope":687,"src":"12129:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:1"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"12162:0:1"},"scope":699,"src":"12073:91:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"12840:2:1","statements":[]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"12170:577:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:1","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"from","nameLocation":"12789:4:1","nodeType":"VariableDeclaration","scope":698,"src":"12781:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"to","nameLocation":"12803:2:1","nodeType":"VariableDeclaration","scope":698,"src":"12795:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"amount","nameLocation":"12815:6:1","nodeType":"VariableDeclaration","scope":698,"src":"12807:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:1"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"12840:0:1"},"scope":699,"src":"12752:90:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":700,"src":"1532:11312:1","usedErrors":[]}],"src":"105:12740:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":701,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":777,"linearizedBaseContracts":[777],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":711,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":711,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":711,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":711,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":720,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":720,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":720,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":720,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":726,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":726,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":777,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":734,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":734,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":777,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":744,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":744,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":744,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":741,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":777,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":754,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":754,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":777,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":764,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":764,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":764,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":777,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"from","nameLocation":"2676:4:2","nodeType":"VariableDeclaration","scope":776,"src":"2668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"to","nameLocation":"2690:2:2","nodeType":"VariableDeclaration","scope":776,"src":"2682:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"amount","nameLocation":"2702:6:2","nodeType":"VariableDeclaration","scope":776,"src":"2694:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"2728:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":773,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:2"},"scope":777,"src":"2646:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":778,"src":"202:2534:2","usedErrors":[]}],"src":"106:2631:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[777],"IERC20Metadata":[802]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":803,"sourceUnit":778,"src":"135:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":782,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"305:6:3"},"id":783,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"160:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":802,"linearizedBaseContracts":[802,777],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":786,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":802,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":795,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":792,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":802,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":801,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":798,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":802,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":803,"src":"277:405:3","usedErrors":[]}],"src":"110:573:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[824]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:4"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"111:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824],"name":"Context","nameLocation":"626:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":813,"nodeType":"Block","src":"702:34:4","statements":[{"expression":{"expression":{"id":810,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":809,"id":812,"nodeType":"Return","src":"712:17:4"}]},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:4","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"659:2:4"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"693:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:4"},"scope":824,"src":"640:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"809:32:4","statements":[{"expression":{"expression":{"id":819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":818,"id":821,"nodeType":"Return","src":"819:15:4"}]},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:4","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"759:2:4"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"793:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":816,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:4"},"scope":824,"src":"742:99:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":825,"src":"608:235:4","usedErrors":[]}],"src":"86:758:4"},"id":4},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[907]},"id":908,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"71:163:5","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":907,"linearizedBaseContracts":[907],"name":"IUniswapV3Factory","nameLocation":"244:17:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"268:185:5","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"id":834,"name":"OwnerChanged","nameLocation":"464:12:5","nodeType":"EventDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"oldOwner","nameLocation":"493:8:5","nodeType":"VariableDeclaration","scope":834,"src":"477:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"519:8:5","nodeType":"VariableDeclaration","scope":834,"src":"503:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:5"},"src":"458:71:5"},{"anonymous":false,"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"535:421:5","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"id":847,"name":"PoolCreated","nameLocation":"967:11:5","nodeType":"EventDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1004:6:5","nodeType":"VariableDeclaration","scope":847,"src":"988:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1036:6:5","nodeType":"VariableDeclaration","scope":847,"src":"1020:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1067:3:5","nodeType":"VariableDeclaration","scope":847,"src":"1052:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":840,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:5","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"1086:11:5","nodeType":"VariableDeclaration","scope":847,"src":"1080:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":842,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":845,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1115:4:5","nodeType":"VariableDeclaration","scope":847,"src":"1107:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:5"},"src":"961:165:5"},{"anonymous":false,"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"1132:275:5","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"id":854,"name":"FeeAmountEnabled","nameLocation":"1418:16:5","nodeType":"EventDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1450:3:5","nodeType":"VariableDeclaration","scope":854,"src":"1435:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":849,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:5","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":852,"indexed":true,"mutability":"mutable","name":"tickSpacing","nameLocation":"1469:11:5","nodeType":"VariableDeclaration","scope":854,"src":"1455:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":851,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:5"},"src":"1412:70:5"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1488:163:5","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":860,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1665:5:5","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[],"src":"1670:2:5"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":860,"src":"1696:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:5"},"scope":907,"src":"1656:49:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"1711:348:5","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":868,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nameLocation":"2073:20:5","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"fee","nameLocation":"2101:3:5","nodeType":"VariableDeclaration","scope":868,"src":"2094:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":862,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:5","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:5"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"2129:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":865,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:5"},"scope":907,"src":"2064:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"2142:471:5","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":880,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2627:7:5","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"tokenA","nameLocation":"2652:6:5","nodeType":"VariableDeclaration","scope":880,"src":"2644:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"tokenB","nameLocation":"2676:6:5","nodeType":"VariableDeclaration","scope":880,"src":"2668:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"fee","nameLocation":"2699:3:5","nodeType":"VariableDeclaration","scope":880,"src":"2692:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":874,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:5","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:5"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"pool","nameLocation":"2740:4:5","nodeType":"VariableDeclaration","scope":880,"src":"2732:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:5"},"scope":907,"src":"2618:128:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"2752:554:5","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":892,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3320:10:5","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"tokenA","nameLocation":"3348:6:5","nodeType":"VariableDeclaration","scope":892,"src":"3340:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"tokenB","nameLocation":"3372:6:5","nodeType":"VariableDeclaration","scope":892,"src":"3364:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"fee","nameLocation":"3395:3:5","nodeType":"VariableDeclaration","scope":892,"src":"3388:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":886,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:5","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:5"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"pool","nameLocation":"3431:4:5","nodeType":"VariableDeclaration","scope":892,"src":"3423:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:5"},"scope":907,"src":"3311:126:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"3443:144:5","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":898,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"3601:8:5","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"_owner","nameLocation":"3618:6:5","nodeType":"VariableDeclaration","scope":898,"src":"3610:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:5"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"3634:0:5"},"scope":907,"src":"3592:43:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"3641:326:5","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":906,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nameLocation":"3981:15:5","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"fee","nameLocation":"4004:3:5","nodeType":"VariableDeclaration","scope":906,"src":"3997:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":900,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:5","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"tickSpacing","nameLocation":"4015:11:5","nodeType":"VariableDeclaration","scope":906,"src":"4009:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":902,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:5"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[],"src":"4036:0:5"},"scope":907,"src":"3972:65:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":908,"src":"234:3805:5","usedErrors":[]}],"src":"45:3995:5"},"id":5},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","exportedSymbols":{"IUniswapV3Pool":[929],"IUniswapV3PoolActions":[1025],"IUniswapV3PoolDerivedState":[1056],"IUniswapV3PoolEvents":[1175],"IUniswapV3PoolImmutables":[1215],"IUniswapV3PoolOwnerActions":[1241],"IUniswapV3PoolState":[1349]},"id":930,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":909,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:6"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","file":"./pool/IUniswapV3PoolImmutables.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":930,"sourceUnit":1216,"src":"71:45:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","file":"./pool/IUniswapV3PoolState.sol","id":911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":930,"sourceUnit":1350,"src":"117:40:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","file":"./pool/IUniswapV3PoolDerivedState.sol","id":912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":930,"sourceUnit":1057,"src":"158:47:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","file":"./pool/IUniswapV3PoolActions.sol","id":913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":930,"sourceUnit":1026,"src":"206:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","file":"./pool/IUniswapV3PoolOwnerActions.sol","id":914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":930,"sourceUnit":1242,"src":"249:47:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","file":"./pool/IUniswapV3PoolEvents.sol","id":915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":930,"sourceUnit":1176,"src":"297:41:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":917,"name":"IUniswapV3PoolImmutables","nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"637:24:6"},"id":918,"nodeType":"InheritanceSpecifier","src":"637:24:6"},{"baseName":{"id":919,"name":"IUniswapV3PoolState","nodeType":"IdentifierPath","referencedDeclaration":1349,"src":"667:19:6"},"id":920,"nodeType":"InheritanceSpecifier","src":"667:19:6"},{"baseName":{"id":921,"name":"IUniswapV3PoolDerivedState","nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"692:26:6"},"id":922,"nodeType":"InheritanceSpecifier","src":"692:26:6"},{"baseName":{"id":923,"name":"IUniswapV3PoolActions","nodeType":"IdentifierPath","referencedDeclaration":1025,"src":"724:21:6"},"id":924,"nodeType":"InheritanceSpecifier","src":"724:21:6"},{"baseName":{"id":925,"name":"IUniswapV3PoolOwnerActions","nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"751:26:6"},"id":926,"nodeType":"InheritanceSpecifier","src":"751:26:6"},{"baseName":{"id":927,"name":"IUniswapV3PoolEvents","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"783:20:6"},"id":928,"nodeType":"InheritanceSpecifier","src":"783:20:6"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"340:265:6","text":"@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"},"fullyImplemented":false,"id":929,"linearizedBaseContracts":[929,1175,1241,1025,1056,1349,1215],"name":"IUniswapV3Pool","nameLocation":"615:14:6","nodeType":"ContractDefinition","nodes":[],"scope":930,"src":"605:203:6","usedErrors":[]}],"src":"45:764:6"},"id":6},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","exportedSymbols":{"IUniswapV3PoolActions":[1025]},"id":1026,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":931,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"71:102:7","text":"@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"},"fullyImplemented":false,"id":1025,"linearizedBaseContracts":[1025],"name":"IUniswapV3PoolActions","nameLocation":"183:21:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"211:206:7","text":"@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"},"functionSelector":"f637731d","id":938,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"431:10:7","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"450:12:7","nodeType":"VariableDeclaration","scope":938,"src":"442:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":934,"name":"uint160","nodeType":"ElementaryTypeName","src":"442:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"441:22:7"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"472:0:7"},"scope":1025,"src":"422:51:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"479:1029:7","text":"@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"},"functionSelector":"3c8a7d8d","id":956,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1522:4:7","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"recipient","nameLocation":"1544:9:7","nodeType":"VariableDeclaration","scope":956,"src":"1536:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"tickLower","nameLocation":"1569:9:7","nodeType":"VariableDeclaration","scope":956,"src":"1563:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":942,"name":"int24","nodeType":"ElementaryTypeName","src":"1563:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"tickUpper","nameLocation":"1594:9:7","nodeType":"VariableDeclaration","scope":956,"src":"1588:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":944,"name":"int24","nodeType":"ElementaryTypeName","src":"1588:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"amount","nameLocation":"1621:6:7","nodeType":"VariableDeclaration","scope":956,"src":"1613:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":946,"name":"uint128","nodeType":"ElementaryTypeName","src":"1613:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"data","nameLocation":"1652:4:7","nodeType":"VariableDeclaration","scope":956,"src":"1637:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":948,"name":"bytes","nodeType":"ElementaryTypeName","src":"1637:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1526:136:7"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"amount0","nameLocation":"1689:7:7","nodeType":"VariableDeclaration","scope":956,"src":"1681:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"amount1","nameLocation":"1706:7:7","nodeType":"VariableDeclaration","scope":956,"src":"1698:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1680:34:7"},"scope":1025,"src":"1513:202:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"1721:1053:7","text":"@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"4f1eb3d8","id":974,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nameLocation":"2788:7:7","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"recipient","nameLocation":"2813:9:7","nodeType":"VariableDeclaration","scope":974,"src":"2805:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"tickLower","nameLocation":"2838:9:7","nodeType":"VariableDeclaration","scope":974,"src":"2832:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":960,"name":"int24","nodeType":"ElementaryTypeName","src":"2832:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"tickUpper","nameLocation":"2863:9:7","nodeType":"VariableDeclaration","scope":974,"src":"2857:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":962,"name":"int24","nodeType":"ElementaryTypeName","src":"2857:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"amount0Requested","nameLocation":"2890:16:7","nodeType":"VariableDeclaration","scope":974,"src":"2882:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":964,"name":"uint128","nodeType":"ElementaryTypeName","src":"2882:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"amount1Requested","nameLocation":"2924:16:7","nodeType":"VariableDeclaration","scope":974,"src":"2916:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":966,"name":"uint128","nodeType":"ElementaryTypeName","src":"2916:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2795:151:7"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"amount0","nameLocation":"2973:7:7","nodeType":"VariableDeclaration","scope":974,"src":"2965:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":969,"name":"uint128","nodeType":"ElementaryTypeName","src":"2965:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"amount1","nameLocation":"2990:7:7","nodeType":"VariableDeclaration","scope":974,"src":"2982:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":971,"name":"uint128","nodeType":"ElementaryTypeName","src":"2982:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2964:34:7"},"scope":1025,"src":"2779:220:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"3005:631:7","text":"@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"},"functionSelector":"a34123a7","id":988,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"3650:4:7","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"tickLower","nameLocation":"3670:9:7","nodeType":"VariableDeclaration","scope":988,"src":"3664:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":976,"name":"int24","nodeType":"ElementaryTypeName","src":"3664:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"tickUpper","nameLocation":"3695:9:7","nodeType":"VariableDeclaration","scope":988,"src":"3689:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":978,"name":"int24","nodeType":"ElementaryTypeName","src":"3689:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"amount","nameLocation":"3722:6:7","nodeType":"VariableDeclaration","scope":988,"src":"3714:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":980,"name":"uint128","nodeType":"ElementaryTypeName","src":"3714:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3654:80:7"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"amount0","nameLocation":"3761:7:7","nodeType":"VariableDeclaration","scope":988,"src":"3753:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3753:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"amount1","nameLocation":"3778:7:7","nodeType":"VariableDeclaration","scope":988,"src":"3770:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3752:34:7"},"scope":1025,"src":"3641:146:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"3793:1015:7","text":"@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"},"functionSelector":"128acb08","id":1006,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"4822:4:7","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"recipient","nameLocation":"4844:9:7","nodeType":"VariableDeclaration","scope":1006,"src":"4836:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"zeroForOne","nameLocation":"4868:10:7","nodeType":"VariableDeclaration","scope":1006,"src":"4863:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":992,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"amountSpecified","nameLocation":"4895:15:7","nodeType":"VariableDeclaration","scope":1006,"src":"4888:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":994,"name":"int256","nodeType":"ElementaryTypeName","src":"4888:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"4928:17:7","nodeType":"VariableDeclaration","scope":1006,"src":"4920:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":996,"name":"uint160","nodeType":"ElementaryTypeName","src":"4920:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"data","nameLocation":"4970:4:7","nodeType":"VariableDeclaration","scope":1006,"src":"4955:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":998,"name":"bytes","nodeType":"ElementaryTypeName","src":"4955:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4826:154:7"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"amount0","nameLocation":"5006:7:7","nodeType":"VariableDeclaration","scope":1006,"src":"4999:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1001,"name":"int256","nodeType":"ElementaryTypeName","src":"4999:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"amount1","nameLocation":"5022:7:7","nodeType":"VariableDeclaration","scope":1006,"src":"5015:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1003,"name":"int256","nodeType":"ElementaryTypeName","src":"5015:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4998:32:7"},"scope":1025,"src":"4813:218:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"5037:657:7","text":"@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"},"functionSelector":"490e6cbc","id":1018,"implemented":false,"kind":"function","modifiers":[],"name":"flash","nameLocation":"5708:5:7","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"recipient","nameLocation":"5731:9:7","nodeType":"VariableDeclaration","scope":1018,"src":"5723:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"5723:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"amount0","nameLocation":"5758:7:7","nodeType":"VariableDeclaration","scope":1018,"src":"5750:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"amount1","nameLocation":"5783:7:7","nodeType":"VariableDeclaration","scope":1018,"src":"5775:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"5775:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"data","nameLocation":"5815:4:7","nodeType":"VariableDeclaration","scope":1018,"src":"5800:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1014,"name":"bytes","nodeType":"ElementaryTypeName","src":"5800:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5713:112:7"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[],"src":"5834:0:7"},"scope":1025,"src":"5699:136:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"5841:367:7","text":"@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"},"functionSelector":"32148f67","id":1024,"implemented":false,"kind":"function","modifiers":[],"name":"increaseObservationCardinalityNext","nameLocation":"6222:34:7","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"6264:26:7","nodeType":"VariableDeclaration","scope":1024,"src":"6257:33:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1020,"name":"uint16","nodeType":"ElementaryTypeName","src":"6257:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6256:35:7"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"6300:0:7"},"scope":1025,"src":"6213:88:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1026,"src":"173:6130:7","usedErrors":[]}],"src":"45:6259:7"},"id":7},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","exportedSymbols":{"IUniswapV3PoolDerivedState":[1056]},"id":1057,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1027,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"71:222:8","text":"@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."},"fullyImplemented":false,"id":1056,"linearizedBaseContracts":[1056],"name":"IUniswapV3PoolDerivedState","nameLocation":"303:26:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"336:1045:8","text":"@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"},"functionSelector":"883bdbfd","id":1041,"implemented":false,"kind":"function","modifiers":[],"name":"observe","nameLocation":"1395:7:8","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"secondsAgos","nameLocation":"1421:11:8","nodeType":"VariableDeclaration","scope":1041,"src":"1403:29:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":1030,"name":"uint32","nodeType":"ElementaryTypeName","src":"1403:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1031,"nodeType":"ArrayTypeName","src":"1403:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"}],"src":"1402:31:8"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"tickCumulatives","nameLocation":"1496:15:8","nodeType":"VariableDeclaration","scope":1041,"src":"1481:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[]"},"typeName":{"baseType":{"id":1034,"name":"int56","nodeType":"ElementaryTypeName","src":"1481:5:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":1035,"nodeType":"ArrayTypeName","src":"1481:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128s","nameLocation":"1530:34:8","nodeType":"VariableDeclaration","scope":1041,"src":"1513:51:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[]"},"typeName":{"baseType":{"id":1037,"name":"uint160","nodeType":"ElementaryTypeName","src":"1513:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":1038,"nodeType":"ArrayTypeName","src":"1513:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}},"visibility":"internal"}],"src":"1480:85:8"},"scope":1056,"src":"1386:180:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"1572:771:8","text":"@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"},"functionSelector":"a38807f2","id":1055,"implemented":false,"kind":"function","modifiers":[],"name":"snapshotCumulativesInside","nameLocation":"2357:25:8","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"tickLower","nameLocation":"2389:9:8","nodeType":"VariableDeclaration","scope":1055,"src":"2383:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1043,"name":"int24","nodeType":"ElementaryTypeName","src":"2383:5:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"tickUpper","nameLocation":"2406:9:8","nodeType":"VariableDeclaration","scope":1055,"src":"2400:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1045,"name":"int24","nodeType":"ElementaryTypeName","src":"2400:5:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2382:34:8"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"tickCumulativeInside","nameLocation":"2483:20:8","nodeType":"VariableDeclaration","scope":1055,"src":"2477:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":1048,"name":"int56","nodeType":"ElementaryTypeName","src":"2477:5:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"secondsPerLiquidityInsideX128","nameLocation":"2525:29:8","nodeType":"VariableDeclaration","scope":1055,"src":"2517:37:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1050,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"secondsInside","nameLocation":"2575:13:8","nodeType":"VariableDeclaration","scope":1055,"src":"2568:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1052,"name":"uint32","nodeType":"ElementaryTypeName","src":"2568:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2463:135:8"},"scope":1056,"src":"2348:251:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1057,"src":"293:2308:8","usedErrors":[]}],"src":"45:2557:8"},"id":8},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","exportedSymbols":{"IUniswapV3PoolEvents":[1175]},"id":1176,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1058,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"71:88:9","text":"@title Events emitted by a pool\n @notice Contains all events emitted by the pool"},"fullyImplemented":true,"id":1175,"linearizedBaseContracts":[1175],"name":"IUniswapV3PoolEvents","nameLocation":"169:20:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"196:344:9","text":"@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"},"id":1066,"name":"Initialize","nameLocation":"551:10:9","nodeType":"EventDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"570:12:9","nodeType":"VariableDeclaration","scope":1066,"src":"562:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1061,"name":"uint160","nodeType":"ElementaryTypeName","src":"562:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1064,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"590:4:9","nodeType":"VariableDeclaration","scope":1066,"src":"584:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1063,"name":"int24","nodeType":"ElementaryTypeName","src":"584:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"561:34:9"},"src":"545:51:9"},{"anonymous":false,"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"602:551:9","text":"@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"},"id":1083,"name":"Mint","nameLocation":"1164:4:9","nodeType":"EventDefinition","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1186:6:9","nodeType":"VariableDeclaration","scope":1083,"src":"1178:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1218:5:9","nodeType":"VariableDeclaration","scope":1083,"src":"1202:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1247:9:9","nodeType":"VariableDeclaration","scope":1083,"src":"1233:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1072,"name":"int24","nodeType":"ElementaryTypeName","src":"1233:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1075,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"1280:9:9","nodeType":"VariableDeclaration","scope":1083,"src":"1266:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1074,"name":"int24","nodeType":"ElementaryTypeName","src":"1266:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1077,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1307:6:9","nodeType":"VariableDeclaration","scope":1083,"src":"1299:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1076,"name":"uint128","nodeType":"ElementaryTypeName","src":"1299:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1079,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1331:7:9","nodeType":"VariableDeclaration","scope":1083,"src":"1323:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1081,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1356:7:9","nodeType":"VariableDeclaration","scope":1083,"src":"1348:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1168:201:9"},"src":"1158:212:9"},{"anonymous":false,"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"1376:493:9","text":"@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"},"id":1098,"name":"Collect","nameLocation":"1880:7:9","nodeType":"EventDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1913:5:9","nodeType":"VariableDeclaration","scope":1098,"src":"1897:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1088,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"1936:9:9","nodeType":"VariableDeclaration","scope":1098,"src":"1928:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1969:9:9","nodeType":"VariableDeclaration","scope":1098,"src":"1955:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1089,"name":"int24","nodeType":"ElementaryTypeName","src":"1955:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1092,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2002:9:9","nodeType":"VariableDeclaration","scope":1098,"src":"1988:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1091,"name":"int24","nodeType":"ElementaryTypeName","src":"1988:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1094,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2029:7:9","nodeType":"VariableDeclaration","scope":1098,"src":"2021:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1093,"name":"uint128","nodeType":"ElementaryTypeName","src":"2021:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1096,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2054:7:9","nodeType":"VariableDeclaration","scope":1098,"src":"2046:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1095,"name":"uint128","nodeType":"ElementaryTypeName","src":"2046:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1887:180:9"},"src":"1874:194:9"},{"anonymous":false,"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"2074:523:9","text":"@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"},"id":1113,"name":"Burn","nameLocation":"2608:4:9","nodeType":"EventDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2638:5:9","nodeType":"VariableDeclaration","scope":1113,"src":"2622:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"2622:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"2667:9:9","nodeType":"VariableDeclaration","scope":1113,"src":"2653:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1102,"name":"int24","nodeType":"ElementaryTypeName","src":"2653:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1105,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2700:9:9","nodeType":"VariableDeclaration","scope":1113,"src":"2686:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1104,"name":"int24","nodeType":"ElementaryTypeName","src":"2686:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1107,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2727:6:9","nodeType":"VariableDeclaration","scope":1113,"src":"2719:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1106,"name":"uint128","nodeType":"ElementaryTypeName","src":"2719:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1109,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2751:7:9","nodeType":"VariableDeclaration","scope":1113,"src":"2743:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1111,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2776:7:9","nodeType":"VariableDeclaration","scope":1113,"src":"2768:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:177:9"},"src":"2602:188:9"},{"anonymous":false,"documentation":{"id":1114,"nodeType":"StructuredDocumentation","src":"2796:600:9","text":"@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"},"id":1130,"name":"Swap","nameLocation":"3407:4:9","nodeType":"EventDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3437:6:9","nodeType":"VariableDeclaration","scope":1130,"src":"3421:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"3421:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1118,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3469:9:9","nodeType":"VariableDeclaration","scope":1130,"src":"3453:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"3453:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1120,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"3495:7:9","nodeType":"VariableDeclaration","scope":1130,"src":"3488:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1119,"name":"int256","nodeType":"ElementaryTypeName","src":"3488:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1122,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"3519:7:9","nodeType":"VariableDeclaration","scope":1130,"src":"3512:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1121,"name":"int256","nodeType":"ElementaryTypeName","src":"3512:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1124,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"3544:12:9","nodeType":"VariableDeclaration","scope":1130,"src":"3536:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1123,"name":"uint160","nodeType":"ElementaryTypeName","src":"3536:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1126,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"3574:9:9","nodeType":"VariableDeclaration","scope":1130,"src":"3566:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1125,"name":"uint128","nodeType":"ElementaryTypeName","src":"3566:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1128,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"3599:4:9","nodeType":"VariableDeclaration","scope":1130,"src":"3593:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1127,"name":"int24","nodeType":"ElementaryTypeName","src":"3593:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3411:198:9"},"src":"3401:209:9"},{"anonymous":false,"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"3616:562:9","text":"@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"},"id":1145,"name":"Flash","nameLocation":"4189:5:9","nodeType":"EventDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4220:6:9","nodeType":"VariableDeclaration","scope":1145,"src":"4204:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4252:9:9","nodeType":"VariableDeclaration","scope":1145,"src":"4236:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"4279:7:9","nodeType":"VariableDeclaration","scope":1145,"src":"4271:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1139,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"4304:7:9","nodeType":"VariableDeclaration","scope":1145,"src":"4296:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"4296:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1141,"indexed":false,"mutability":"mutable","name":"paid0","nameLocation":"4329:5:9","nodeType":"VariableDeclaration","scope":1145,"src":"4321:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1143,"indexed":false,"mutability":"mutable","name":"paid1","nameLocation":"4352:5:9","nodeType":"VariableDeclaration","scope":1145,"src":"4344:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"4344:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4194:169:9"},"src":"4183:181:9"},{"anonymous":false,"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"4370:451:9","text":"@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"},"id":1152,"name":"IncreaseObservationCardinalityNext","nameLocation":"4832:34:9","nodeType":"EventDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextOld","nameLocation":"4883:29:9","nodeType":"VariableDeclaration","scope":1152,"src":"4876:36:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1147,"name":"uint16","nodeType":"ElementaryTypeName","src":"4876:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1150,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextNew","nameLocation":"4929:29:9","nodeType":"VariableDeclaration","scope":1152,"src":"4922:36:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1149,"name":"uint16","nodeType":"ElementaryTypeName","src":"4922:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4866:98:9"},"src":"4826:139:9"},{"anonymous":false,"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"4971:370:9","text":"@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"},"id":1163,"name":"SetFeeProtocol","nameLocation":"5352:14:9","nodeType":"EventDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"indexed":false,"mutability":"mutable","name":"feeProtocol0Old","nameLocation":"5373:15:9","nodeType":"VariableDeclaration","scope":1163,"src":"5367:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1154,"name":"uint8","nodeType":"ElementaryTypeName","src":"5367:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1157,"indexed":false,"mutability":"mutable","name":"feeProtocol1Old","nameLocation":"5396:15:9","nodeType":"VariableDeclaration","scope":1163,"src":"5390:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1156,"name":"uint8","nodeType":"ElementaryTypeName","src":"5390:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1159,"indexed":false,"mutability":"mutable","name":"feeProtocol0New","nameLocation":"5419:15:9","nodeType":"VariableDeclaration","scope":1163,"src":"5413:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1158,"name":"uint8","nodeType":"ElementaryTypeName","src":"5413:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1161,"indexed":false,"mutability":"mutable","name":"feeProtocol1New","nameLocation":"5442:15:9","nodeType":"VariableDeclaration","scope":1163,"src":"5436:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1160,"name":"uint8","nodeType":"ElementaryTypeName","src":"5436:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5366:92:9"},"src":"5346:113:9"},{"anonymous":false,"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"5465:384:9","text":"@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"},"id":1174,"name":"CollectProtocol","nameLocation":"5860:15:9","nodeType":"EventDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5892:6:9","nodeType":"VariableDeclaration","scope":1174,"src":"5876:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"5876:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"5916:9:9","nodeType":"VariableDeclaration","scope":1174,"src":"5900:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"5935:7:9","nodeType":"VariableDeclaration","scope":1174,"src":"5927:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1169,"name":"uint128","nodeType":"ElementaryTypeName","src":"5927:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1172,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"5952:7:9","nodeType":"VariableDeclaration","scope":1174,"src":"5944:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1171,"name":"uint128","nodeType":"ElementaryTypeName","src":"5944:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5875:85:9"},"src":"5854:107:9"}],"scope":1176,"src":"159:5804:9","usedErrors":[]}],"src":"45:5919:9"},"id":9},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","exportedSymbols":{"IUniswapV3PoolImmutables":[1215]},"id":1216,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1177,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"71:153:10","text":"@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"},"fullyImplemented":false,"id":1215,"linearizedBaseContracts":[1215],"name":"IUniswapV3PoolImmutables","nameLocation":"234:24:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"265:138:10","text":"@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"},"functionSelector":"c45a0155","id":1184,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"417:7:10","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"424:2:10"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1184,"src":"450:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"449:9:10"},"scope":1215,"src":"408:51:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"465:113:10","text":"@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"0dfe1681","id":1190,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"592:6:10","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"598:2:10"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"624:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"623:9:10"},"scope":1215,"src":"583:50:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"639:114:10","text":"@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"d21220a7","id":1196,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"767:6:10","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"773:2:10"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1196,"src":"799:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"798:9:10"},"scope":1215,"src":"758:50:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"814:84:10","text":"@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"},"functionSelector":"ddca3f43","id":1202,"implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"912:3:10","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[],"src":"915:2:10"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"941:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1199,"name":"uint24","nodeType":"ElementaryTypeName","src":"941:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"940:8:10"},"scope":1215,"src":"903:46:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"955:358:10","text":"@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"},"functionSelector":"d0c93a7c","id":1208,"implemented":false,"kind":"function","modifiers":[],"name":"tickSpacing","nameLocation":"1327:11:10","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"1338:2:10"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1208,"src":"1364:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1205,"name":"int24","nodeType":"ElementaryTypeName","src":"1364:5:10","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1363:7:10"},"scope":1215,"src":"1318:53:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"1377:363:10","text":"@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"},"functionSelector":"70cf754a","id":1214,"implemented":false,"kind":"function","modifiers":[],"name":"maxLiquidityPerTick","nameLocation":"1754:19:10","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[],"src":"1773:2:10"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1214,"src":"1799:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1211,"name":"uint128","nodeType":"ElementaryTypeName","src":"1799:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1798:9:10"},"scope":1215,"src":"1745:63:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1216,"src":"224:1586:10","usedErrors":[]}],"src":"45:1766:10"},"id":10},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","exportedSymbols":{"IUniswapV3PoolOwnerActions":[1241]},"id":1242,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1217,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"71:116:11","text":"@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"},"fullyImplemented":false,"id":1241,"linearizedBaseContracts":[1241],"name":"IUniswapV3PoolOwnerActions","nameLocation":"197:26:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"230:205:11","text":"@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"},"functionSelector":"8206a4d1","id":1226,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeProtocol","nameLocation":"449:14:11","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"feeProtocol0","nameLocation":"470:12:11","nodeType":"VariableDeclaration","scope":1226,"src":"464:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1220,"name":"uint8","nodeType":"ElementaryTypeName","src":"464:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"feeProtocol1","nameLocation":"490:12:11","nodeType":"VariableDeclaration","scope":1226,"src":"484:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1222,"name":"uint8","nodeType":"ElementaryTypeName","src":"484:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"463:40:11"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[],"src":"512:0:11"},"scope":1241,"src":"440:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"519:483:11","text":"@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"},"functionSelector":"85b66729","id":1240,"implemented":false,"kind":"function","modifiers":[],"name":"collectProtocol","nameLocation":"1016:15:11","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"recipient","nameLocation":"1049:9:11","nodeType":"VariableDeclaration","scope":1240,"src":"1041:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"amount0Requested","nameLocation":"1076:16:11","nodeType":"VariableDeclaration","scope":1240,"src":"1068:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1230,"name":"uint128","nodeType":"ElementaryTypeName","src":"1068:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"amount1Requested","nameLocation":"1110:16:11","nodeType":"VariableDeclaration","scope":1240,"src":"1102:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1232,"name":"uint128","nodeType":"ElementaryTypeName","src":"1102:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1031:101:11"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"amount0","nameLocation":"1159:7:11","nodeType":"VariableDeclaration","scope":1240,"src":"1151:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1235,"name":"uint128","nodeType":"ElementaryTypeName","src":"1151:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"amount1","nameLocation":"1176:7:11","nodeType":"VariableDeclaration","scope":1240,"src":"1168:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1237,"name":"uint128","nodeType":"ElementaryTypeName","src":"1168:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1150:34:11"},"scope":1241,"src":"1007:178:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1242,"src":"187:1000:11","usedErrors":[]}],"src":"45:1143:11"},"id":11},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","exportedSymbols":{"IUniswapV3PoolState":[1349]},"id":1350,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1243,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"71:169:12","text":"@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"},"fullyImplemented":false,"id":1349,"linearizedBaseContracts":[1349],"name":"IUniswapV3PoolState","nameLocation":"250:19:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"276:1140:12","text":"@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"},"functionSelector":"3850c7bd","id":1262,"implemented":false,"kind":"function","modifiers":[],"name":"slot0","nameLocation":"1430:5:12","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"1435:2:12"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"1506:12:12","nodeType":"VariableDeclaration","scope":1262,"src":"1498:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1247,"name":"uint160","nodeType":"ElementaryTypeName","src":"1498:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"tick","nameLocation":"1538:4:12","nodeType":"VariableDeclaration","scope":1262,"src":"1532:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1249,"name":"int24","nodeType":"ElementaryTypeName","src":"1532:5:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"observationIndex","nameLocation":"1563:16:12","nodeType":"VariableDeclaration","scope":1262,"src":"1556:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1251,"name":"uint16","nodeType":"ElementaryTypeName","src":"1556:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"observationCardinality","nameLocation":"1600:22:12","nodeType":"VariableDeclaration","scope":1262,"src":"1593:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1253,"name":"uint16","nodeType":"ElementaryTypeName","src":"1593:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"1643:26:12","nodeType":"VariableDeclaration","scope":1262,"src":"1636:33:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1255,"name":"uint16","nodeType":"ElementaryTypeName","src":"1636:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"feeProtocol","nameLocation":"1689:11:12","nodeType":"VariableDeclaration","scope":1262,"src":"1683:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1257,"name":"uint8","nodeType":"ElementaryTypeName","src":"1683:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"unlocked","nameLocation":"1719:8:12","nodeType":"VariableDeclaration","scope":1262,"src":"1714:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1259,"name":"bool","nodeType":"ElementaryTypeName","src":"1714:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1484:253:12"},"scope":1349,"src":"1421:317:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1744:168:12","text":"@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"f3058399","id":1268,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal0X128","nameLocation":"1926:20:12","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"1946:2:12"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1268,"src":"1972:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1971:9:12"},"scope":1349,"src":"1917:64:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"1987:168:12","text":"@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"46141319","id":1274,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal1X128","nameLocation":"2169:20:12","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[],"src":"2189:2:12"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1274,"src":"2215:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2215:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2214:9:12"},"scope":1349,"src":"2160:64:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"2230:147:12","text":"@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"},"functionSelector":"1ad8b03b","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFees","nameLocation":"2391:12:12","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"2403:2:12"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"token0","nameLocation":"2437:6:12","nodeType":"VariableDeclaration","scope":1282,"src":"2429:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1277,"name":"uint128","nodeType":"ElementaryTypeName","src":"2429:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"token1","nameLocation":"2453:6:12","nodeType":"VariableDeclaration","scope":1282,"src":"2445:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1279,"name":"uint128","nodeType":"ElementaryTypeName","src":"2445:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2428:32:12"},"scope":1349,"src":"2382:79:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"2467:150:12","text":"@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"},"functionSelector":"1a686502","id":1288,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"2631:9:12","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[],"src":"2640:2:12"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"2666:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1285,"name":"uint128","nodeType":"ElementaryTypeName","src":"2666:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2665:9:12"},"scope":1349,"src":"2622:53:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"2681:1244:12","text":"@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."},"functionSelector":"f30dba93","id":1310,"implemented":false,"kind":"function","modifiers":[],"name":"ticks","nameLocation":"3939:5:12","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"tick","nameLocation":"3951:4:12","nodeType":"VariableDeclaration","scope":1310,"src":"3945:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1290,"name":"int24","nodeType":"ElementaryTypeName","src":"3945:5:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3944:12:12"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"liquidityGross","nameLocation":"4025:14:12","nodeType":"VariableDeclaration","scope":1310,"src":"4017:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1293,"name":"uint128","nodeType":"ElementaryTypeName","src":"4017:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"liquidityNet","nameLocation":"4060:12:12","nodeType":"VariableDeclaration","scope":1310,"src":"4053:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1295,"name":"int128","nodeType":"ElementaryTypeName","src":"4053:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"feeGrowthOutside0X128","nameLocation":"4094:21:12","nodeType":"VariableDeclaration","scope":1310,"src":"4086:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"4086:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"feeGrowthOutside1X128","nameLocation":"4137:21:12","nodeType":"VariableDeclaration","scope":1310,"src":"4129:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"tickCumulativeOutside","nameLocation":"4178:21:12","nodeType":"VariableDeclaration","scope":1310,"src":"4172:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":1301,"name":"int56","nodeType":"ElementaryTypeName","src":"4172:5:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"secondsPerLiquidityOutsideX128","nameLocation":"4221:30:12","nodeType":"VariableDeclaration","scope":1310,"src":"4213:38:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1303,"name":"uint160","nodeType":"ElementaryTypeName","src":"4213:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1306,"mutability":"mutable","name":"secondsOutside","nameLocation":"4272:14:12","nodeType":"VariableDeclaration","scope":1310,"src":"4265:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1305,"name":"uint32","nodeType":"ElementaryTypeName","src":"4265:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"initialized","nameLocation":"4305:11:12","nodeType":"VariableDeclaration","scope":1310,"src":"4300:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1307,"name":"bool","nodeType":"ElementaryTypeName","src":"4300:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4003:323:12"},"scope":1349,"src":"3930:397:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"4333:99:12","text":"@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"functionSelector":"5339c296","id":1318,"implemented":false,"kind":"function","modifiers":[],"name":"tickBitmap","nameLocation":"4446:10:12","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"wordPosition","nameLocation":"4463:12:12","nodeType":"VariableDeclaration","scope":1318,"src":"4457:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":1312,"name":"int16","nodeType":"ElementaryTypeName","src":"4457:5:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"4456:20:12"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"4500:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"4500:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:9:12"},"scope":1349,"src":"4437:72:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"4515:700:12","text":"@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"},"functionSelector":"514ea4bf","id":1334,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nameLocation":"5229:9:12","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"key","nameLocation":"5247:3:12","nodeType":"VariableDeclaration","scope":1334,"src":"5239:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5239:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5238:13:12"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"_liquidity","nameLocation":"5320:10:12","nodeType":"VariableDeclaration","scope":1334,"src":"5312:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1323,"name":"uint128","nodeType":"ElementaryTypeName","src":"5312:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"feeGrowthInside0LastX128","nameLocation":"5352:24:12","nodeType":"VariableDeclaration","scope":1334,"src":"5344:32:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"feeGrowthInside1LastX128","nameLocation":"5398:24:12","nodeType":"VariableDeclaration","scope":1334,"src":"5390:32:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"5390:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"tokensOwed0","nameLocation":"5444:11:12","nodeType":"VariableDeclaration","scope":1334,"src":"5436:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1329,"name":"uint128","nodeType":"ElementaryTypeName","src":"5436:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"tokensOwed1","nameLocation":"5477:11:12","nodeType":"VariableDeclaration","scope":1334,"src":"5469:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1331,"name":"uint128","nodeType":"ElementaryTypeName","src":"5469:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5298:200:12"},"scope":1349,"src":"5220:279:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"5505:749:12","text":"@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"},"functionSelector":"252c09d7","id":1348,"implemented":false,"kind":"function","modifiers":[],"name":"observations","nameLocation":"6268:12:12","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"index","nameLocation":"6289:5:12","nodeType":"VariableDeclaration","scope":1348,"src":"6281:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"6281:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6280:15:12"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"blockTimestamp","nameLocation":"6363:14:12","nodeType":"VariableDeclaration","scope":1348,"src":"6356:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1339,"name":"uint32","nodeType":"ElementaryTypeName","src":"6356:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"tickCumulative","nameLocation":"6397:14:12","nodeType":"VariableDeclaration","scope":1348,"src":"6391:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":1341,"name":"int56","nodeType":"ElementaryTypeName","src":"6391:5:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nameLocation":"6433:33:12","nodeType":"VariableDeclaration","scope":1348,"src":"6425:41:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1343,"name":"uint160","nodeType":"ElementaryTypeName","src":"6425:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"initialized","nameLocation":"6485:11:12","nodeType":"VariableDeclaration","scope":1348,"src":"6480:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1345,"name":"bool","nodeType":"ElementaryTypeName","src":"6480:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6342:164:12"},"scope":1349,"src":"6259:248:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1350,"src":"240:6269:12","usedErrors":[]}],"src":"45:6465:12"},"id":12},"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol","exportedSymbols":{"FixedPoint96":[1359]},"id":1360,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1351,"literals":["solidity",">=","0.4",".0"],"nodeType":"PragmaDirective","src":"45:24:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"71:174:13","text":"@title FixedPoint96\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n @dev Used in SqrtPriceMath.sol"},"fullyImplemented":true,"id":1359,"linearizedBaseContracts":[1359],"name":"FixedPoint96","nameLocation":"253:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1355,"mutability":"constant","name":"RESOLUTION","nameLocation":"296:10:13","nodeType":"VariableDeclaration","scope":1359,"src":"272:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1353,"name":"uint8","nodeType":"ElementaryTypeName","src":"272:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3936","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"309:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"constant":true,"id":1358,"mutability":"constant","name":"Q96","nameLocation":"343:3:13","nodeType":"VariableDeclaration","scope":1359,"src":"317:59:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307831303030303030303030303030303030303030303030303030","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"349:27:13","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"},"value":"0x1000000000000000000000000"},"visibility":"internal"}],"scope":1360,"src":"245:134:13","usedErrors":[]}],"src":"45:335:13"},"id":13},"contracts/ChainlinkPriceFeedIntegration.sol":{"ast":{"absolutePath":"contracts/ChainlinkPriceFeedIntegration.sol","exportedSymbols":{"ChainlinkPriceFeedIntegration":[1524],"IChainlinkPriceFeed":[3165],"IPriceFeedIntegration":[3303]},"id":1525,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1361,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:14"},{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","file":"./interfaces/IPriceFeedIntegration.sol","id":1362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1525,"sourceUnit":3304,"src":"71:48:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IChainlinkPriceFeed.sol","file":"./interfaces/IChainlinkPriceFeed.sol","id":1363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1525,"sourceUnit":3166,"src":"120:46:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1364,"name":"IPriceFeedIntegration","nodeType":"IdentifierPath","referencedDeclaration":3303,"src":"210:21:14"},"id":1365,"nodeType":"InheritanceSpecifier","src":"210:21:14"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1524,"linearizedBaseContracts":[1524,3303],"name":"ChainlinkPriceFeedIntegration","nameLocation":"177:29:14","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3293],"constant":true,"functionSelector":"aaf5eb68","id":1369,"mutability":"constant","name":"PRECISION","nameLocation":"271:9:14","nodeType":"VariableDeclaration","overrides":{"id":1367,"nodeType":"OverrideSpecifier","overrides":[],"src":"262:8:14"},"scope":1524,"src":"238:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"238:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"316538","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"283:3:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"1e8"},"visibility":"public"},{"constant":false,"functionSelector":"481c6a75","id":1371,"mutability":"mutable","name":"manager","nameLocation":"307:7:14","nodeType":"VariableDeclaration","scope":1524,"src":"292:22:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"292:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":1375,"mutability":"mutable","name":"feeds","nameLocation":"348:5:14","nodeType":"VariableDeclaration","scope":1524,"src":"320:33:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1374,"keyType":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"320:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"339:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"anonymous":false,"id":1379,"name":"SetManager","nameLocation":"366:10:14","nodeType":"EventDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"indexed":false,"mutability":"mutable","name":"manager","nameLocation":"385:7:14","nodeType":"VariableDeclaration","scope":1379,"src":"377:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"377:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"376:17:14"},"src":"360:34:14"},{"anonymous":false,"id":1385,"name":"SetPriceFeed","nameLocation":"405:12:14","nodeType":"EventDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"426:5:14","nodeType":"VariableDeclaration","scope":1385,"src":"418:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1383,"indexed":false,"mutability":"mutable","name":"feed","nameLocation":"441:4:14","nodeType":"VariableDeclaration","scope":1385,"src":"433:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"433:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"417:29:14"},"src":"399:48:14"},{"id":1389,"name":"Forbidden","nameLocation":"459:9:14","nodeType":"ErrorDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"sender","nameLocation":"477:6:14","nodeType":"VariableDeclaration","scope":1389,"src":"469:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"469:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"468:16:14"},"src":"453:32:14"},{"id":1393,"name":"InvalidFeed","nameLocation":"496:11:14","nodeType":"ErrorDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"token","nameLocation":"516:5:14","nodeType":"VariableDeclaration","scope":1393,"src":"508:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:15:14"},"src":"490:33:14"},{"body":{"id":1401,"nodeType":"Block","src":"543:37:14","statements":[{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1396,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"553:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1397,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"563:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"563:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"553:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1400,"nodeType":"ExpressionStatement","src":"553:20:14"}]},"id":1402,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"540:2:14"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"543:0:14"},"scope":1524,"src":"529:51:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1415,"nodeType":"Block","src":"609:83:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1404,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"623:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"623:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1406,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"637:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"623:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"619:55:14","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"663:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"663:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1408,"name":"Forbidden","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"653:9:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"653:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1412,"nodeType":"RevertStatement","src":"646:28:14"}},{"id":1414,"nodeType":"PlaceholderStatement","src":"684:1:14"}]},"id":1416,"name":"onlyManager","nameLocation":"595:11:14","nodeType":"ModifierDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"606:2:14"},"src":"586:106:14","virtual":false,"visibility":"internal"},{"body":{"id":1431,"nodeType":"Block","src":"757:71:14","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1423,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"767:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1424,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"777:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"767:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"nodeType":"ExpressionStatement","src":"767:18:14"},{"eventCall":{"arguments":[{"id":1428,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"812:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1427,"name":"SetManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"801:10:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"801:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"EmitStatement","src":"796:25:14"}]},"functionSelector":"d0ebdbe7","id":1432,"implemented":true,"kind":"function","modifiers":[{"id":1421,"kind":"modifierInvocation","modifierName":{"id":1420,"name":"onlyManager","nodeType":"IdentifierPath","referencedDeclaration":1416,"src":"745:11:14"},"nodeType":"ModifierInvocation","src":"745:11:14"}],"name":"setManager","nameLocation":"707:10:14","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"_manager","nameLocation":"726:8:14","nodeType":"VariableDeclaration","scope":1432,"src":"718:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"717:18:14"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"757:0:14"},"scope":1524,"src":"698:130:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1452,"nodeType":"Block","src":"908:81:14","statements":[{"expression":{"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1441,"name":"feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"918:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1443,"indexExpression":{"id":1442,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"924:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"918:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1444,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"934:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"918:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1446,"nodeType":"ExpressionStatement","src":"918:21:14"},{"eventCall":{"arguments":[{"id":1448,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"968:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1449,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"976:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1447,"name":"SetPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"955:12:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"EmitStatement","src":"950:32:14"}]},"functionSelector":"76e11286","id":1453,"implemented":true,"kind":"function","modifiers":[{"id":1439,"kind":"modifierInvocation","modifierName":{"id":1438,"name":"onlyManager","nodeType":"IdentifierPath","referencedDeclaration":1416,"src":"896:11:14"},"nodeType":"ModifierInvocation","src":"896:11:14"}],"name":"setPriceFeed","nameLocation":"843:12:14","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"_token","nameLocation":"864:6:14","nodeType":"VariableDeclaration","scope":1453,"src":"856:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"_feed","nameLocation":"880:5:14","nodeType":"VariableDeclaration","scope":1453,"src":"872:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"855:31:14"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"908:0:14"},"scope":1524,"src":"834:155:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1485,"nodeType":"Block","src":"1065:163:14","statements":[{"assignments":[1461],"declarations":[{"constant":false,"id":1461,"mutability":"mutable","name":"feed","nameLocation":"1083:4:14","nodeType":"VariableDeclaration","scope":1485,"src":"1075:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1465,"initialValue":{"baseExpression":{"id":1462,"name":"feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"1090:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1464,"indexExpression":{"id":1463,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"1096:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1090:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1075:28:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"1117:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1133:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1125:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"1125:7:14","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1125:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1117:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1476,"nodeType":"IfStatement","src":"1113:50:14","trueBody":{"errorCall":{"arguments":[{"id":1473,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"1156:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"InvalidFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"1144:11:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1144:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"RevertStatement","src":"1137:26:14"}},{"expression":{"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1477,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1173:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1479,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"1201:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1478,"name":"IChainlinkPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"1181:19:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IChainlinkPriceFeed_$3165_$","typeString":"type(contract IChainlinkPriceFeed)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1181:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IChainlinkPriceFeed_$3165","typeString":"contract IChainlinkPriceFeed"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestAnswer","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"1181:38:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1181:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1173:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1484,"nodeType":"ExpressionStatement","src":"1173:48:14"}]},"id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"_price","nameLocation":"1004:6:14","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"_token","nameLocation":"1019:6:14","nodeType":"VariableDeclaration","scope":1486,"src":"1011:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1010:16:14"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"price","nameLocation":"1058:5:14","nodeType":"VariableDeclaration","scope":1486,"src":"1050:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1050:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1049:15:14"},"scope":1524,"src":"995:233:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3302],"body":{"id":1522,"nodeType":"Block","src":"1362:206:14","statements":[{"assignments":[1497],"declarations":[{"constant":false,"id":1497,"mutability":"mutable","name":"basePrice","nameLocation":"1380:9:14","nodeType":"VariableDeclaration","scope":1522,"src":"1372:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1501,"initialValue":{"arguments":[{"id":1499,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"1399:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1498,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1392:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1392:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1372:38:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1502,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1424:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1424:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1521,"nodeType":"IfStatement","src":"1420:142:14","trueBody":{"id":1520,"nodeType":"Block","src":"1439:123:14","statements":[{"assignments":[1506],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"quotePrice","nameLocation":"1461:10:14","nodeType":"VariableDeclaration","scope":1520,"src":"1453:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1453:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1510,"initialValue":{"arguments":[{"id":1508,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1481:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1507,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1474:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1474:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1453:40:14"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1511,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"1507:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1512,"name":"quotePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"1516:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1513,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"1529:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1516:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1515:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1516,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1542:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1515:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1507:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1519,"nodeType":"ExpressionStatement","src":"1507:44:14"}]}}]},"functionSelector":"ac41865a","id":1523,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"1243:8:14","nodeType":"FunctionDefinition","overrides":{"id":1492,"nodeType":"OverrideSpecifier","overrides":[],"src":"1329:8:14"},"parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"_baseToken","nameLocation":"1269:10:14","nodeType":"VariableDeclaration","scope":1523,"src":"1261:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"_quoteToken","nameLocation":"1297:11:14","nodeType":"VariableDeclaration","scope":1523,"src":"1289:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1251:63:14"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"price","nameLocation":"1355:5:14","nodeType":"VariableDeclaration","scope":1523,"src":"1347:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1346:15:14"},"scope":1524,"src":"1234:334:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1525,"src":"168:1402:14","usedErrors":[1389,1393]}],"src":"45:1526:14"},"id":14},"contracts/GMXPriceFeedIntegration.sol":{"ast":{"absolutePath":"contracts/GMXPriceFeedIntegration.sol","exportedSymbols":{"GMXPriceFeedIntegration":[1601],"IGMXPriceFeed":[3260],"IPriceFeedIntegration":[3303]},"id":1602,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1526,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:15"},{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","file":"./interfaces/IPriceFeedIntegration.sol","id":1527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1602,"sourceUnit":3304,"src":"71:48:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGMXPriceFeed.sol","file":"./interfaces/IGMXPriceFeed.sol","id":1528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1602,"sourceUnit":3261,"src":"120:40:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1529,"name":"IPriceFeedIntegration","nodeType":"IdentifierPath","referencedDeclaration":3303,"src":"198:21:15"},"id":1530,"nodeType":"InheritanceSpecifier","src":"198:21:15"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1601,"linearizedBaseContracts":[1601,3303],"name":"GMXPriceFeedIntegration","nameLocation":"171:23:15","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3293],"constant":true,"functionSelector":"aaf5eb68","id":1534,"mutability":"constant","name":"PRECISION","nameLocation":"259:9:15","nodeType":"VariableDeclaration","overrides":{"id":1532,"nodeType":"OverrideSpecifier","overrides":[],"src":"250:8:15"},"scope":1601,"src":"226:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"226:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653330","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"271:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"value":"1e30"},"visibility":"public"},{"constant":false,"functionSelector":"37a7b7d8","id":1536,"mutability":"immutable","name":"feed","nameLocation":"306:4:15","nodeType":"VariableDeclaration","scope":1601,"src":"281:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"281:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":1545,"nodeType":"Block","src":"390:29:15","statements":[{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1541,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"400:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1542,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"407:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"400:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1544,"nodeType":"ExpressionStatement","src":"400:12:15"}]},"id":1546,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"_feed","nameLocation":"383:5:15","nodeType":"VariableDeclaration","scope":1546,"src":"375:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"375:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"374:15:15"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[],"src":"390:0:15"},"scope":1601,"src":"363:56:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1562,"nodeType":"Block","src":"495:59:15","statements":[{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1553,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"505:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1558,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"540:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1555,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"527:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1554,"name":"IGMXPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"513:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXPriceFeed_$3260_$","typeString":"type(contract IGMXPriceFeed)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"513:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXPriceFeed_$3260","typeString":"contract IGMXPriceFeed"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"prices","nodeType":"MemberAccess","referencedDeclaration":3259,"src":"513:26:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"513:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"505:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"505:42:15"}]},"id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"_price","nameLocation":"434:6:15","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"_token","nameLocation":"449:6:15","nodeType":"VariableDeclaration","scope":1563,"src":"441:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"441:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"440:16:15"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"price","nameLocation":"488:5:15","nodeType":"VariableDeclaration","scope":1563,"src":"480:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"480:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"479:15:15"},"scope":1601,"src":"425:129:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3302],"body":{"id":1599,"nodeType":"Block","src":"688:206:15","statements":[{"assignments":[1574],"declarations":[{"constant":false,"id":1574,"mutability":"mutable","name":"basePrice","nameLocation":"706:9:15","nodeType":"VariableDeclaration","scope":1599,"src":"698:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1578,"initialValue":{"arguments":[{"id":1576,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"725:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"718:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"718:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"698:38:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1579,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"750:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"762:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"750:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1598,"nodeType":"IfStatement","src":"746:142:15","trueBody":{"id":1597,"nodeType":"Block","src":"765:123:15","statements":[{"assignments":[1583],"declarations":[{"constant":false,"id":1583,"mutability":"mutable","name":"quotePrice","nameLocation":"787:10:15","nodeType":"VariableDeclaration","scope":1597,"src":"779:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1587,"initialValue":{"arguments":[{"id":1585,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"807:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1584,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"800:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"800:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"779:40:15"},{"expression":{"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1588,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"833:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1589,"name":"quotePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"842:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1590,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"855:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"842:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"841:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1593,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"868:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"841:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"833:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1596,"nodeType":"ExpressionStatement","src":"833:44:15"}]}}]},"functionSelector":"ac41865a","id":1600,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"569:8:15","nodeType":"FunctionDefinition","overrides":{"id":1569,"nodeType":"OverrideSpecifier","overrides":[],"src":"655:8:15"},"parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"_baseToken","nameLocation":"595:10:15","nodeType":"VariableDeclaration","scope":1600,"src":"587:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"_quoteToken","nameLocation":"623:11:15","nodeType":"VariableDeclaration","scope":1600,"src":"615:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"577:63:15"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"price","nameLocation":"681:5:15","nodeType":"VariableDeclaration","scope":1600,"src":"673:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"672:15:15"},"scope":1601,"src":"560:334:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1602,"src":"162:734:15","usedErrors":[]}],"src":"45:852:15"},"id":15},"contracts/PriceFeed.sol":{"ast":{"absolutePath":"contracts/PriceFeed.sol","exportedSymbols":{"IPriceFeed":[3286],"IPriceFeedIntegration":[3303],"PriceFeed":[1828]},"id":1829,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1603,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:16"},{"absolutePath":"contracts/interfaces/IPriceFeed.sol","file":"./interfaces/IPriceFeed.sol","id":1604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1829,"sourceUnit":3287,"src":"71:37:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","file":"./interfaces/IPriceFeedIntegration.sol","id":1605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1829,"sourceUnit":3304,"src":"109:48:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1606,"name":"IPriceFeed","nodeType":"IdentifierPath","referencedDeclaration":3286,"src":"181:10:16"},"id":1607,"nodeType":"InheritanceSpecifier","src":"181:10:16"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1828,"linearizedBaseContracts":[1828,3286],"name":"PriceFeed","nameLocation":"168:9:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3267],"constant":true,"functionSelector":"aaf5eb68","id":1611,"mutability":"constant","name":"PRECISION","nameLocation":"231:9:16","nodeType":"VariableDeclaration","overrides":{"id":1609,"nodeType":"OverrideSpecifier","overrides":[],"src":"222:8:16"},"scope":1828,"src":"198:49:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"198:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653330","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"243:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"value":"1e30"},"visibility":"public"},{"constant":false,"functionSelector":"481c6a75","id":1613,"mutability":"mutable","name":"manager","nameLocation":"268:7:16","nodeType":"VariableDeclaration","scope":1828,"src":"253:22:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"253:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"790bde32","id":1616,"mutability":"mutable","name":"integrations","nameLocation":"298:12:16","nodeType":"VariableDeclaration","scope":1828,"src":"281:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"281:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1615,"nodeType":"ArrayTypeName","src":"281:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"id":1620,"name":"SetManager","nameLocation":"323:10:16","nodeType":"EventDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"indexed":false,"mutability":"mutable","name":"manager","nameLocation":"342:7:16","nodeType":"VariableDeclaration","scope":1620,"src":"334:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"334:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"333:17:16"},"src":"317:34:16"},{"anonymous":false,"id":1625,"name":"SetIntegrations","nameLocation":"362:15:16","nodeType":"EventDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"indexed":false,"mutability":"mutable","name":"integrations","nameLocation":"388:12:16","nodeType":"VariableDeclaration","scope":1625,"src":"378:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"378:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1622,"nodeType":"ArrayTypeName","src":"378:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"377:24:16"},"src":"356:46:16"},{"id":1629,"name":"Forbidden","nameLocation":"414:9:16","nodeType":"ErrorDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"sender","nameLocation":"432:6:16","nodeType":"VariableDeclaration","scope":1629,"src":"424:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"423:16:16"},"src":"408:32:16"},{"body":{"id":1637,"nodeType":"Block","src":"460:37:16","statements":[{"expression":{"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1632,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"470:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"480:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"480:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"470:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1636,"nodeType":"ExpressionStatement","src":"470:20:16"}]},"id":1638,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[],"src":"457:2:16"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[],"src":"460:0:16"},"scope":1828,"src":"446:51:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1651,"nodeType":"Block","src":"526:83:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1640,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"540:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"540:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1642,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"554:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"540:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1649,"nodeType":"IfStatement","src":"536:55:16","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1645,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"580:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"580:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1644,"name":"Forbidden","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"570:9:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"570:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1648,"nodeType":"RevertStatement","src":"563:28:16"}},{"id":1650,"nodeType":"PlaceholderStatement","src":"601:1:16"}]},"id":1652,"name":"onlyManager","nameLocation":"512:11:16","nodeType":"ModifierDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[],"src":"523:2:16"},"src":"503:106:16","virtual":false,"visibility":"internal"},{"body":{"id":1667,"nodeType":"Block","src":"674:71:16","statements":[{"expression":{"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1659,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"684:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1660,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"694:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"684:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1662,"nodeType":"ExpressionStatement","src":"684:18:16"},{"eventCall":{"arguments":[{"id":1664,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"729:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1663,"name":"SetManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"718:10:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"718:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1666,"nodeType":"EmitStatement","src":"713:25:16"}]},"functionSelector":"d0ebdbe7","id":1668,"implemented":true,"kind":"function","modifiers":[{"id":1657,"kind":"modifierInvocation","modifierName":{"id":1656,"name":"onlyManager","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"662:11:16"},"nodeType":"ModifierInvocation","src":"662:11:16"}],"name":"setManager","nameLocation":"624:10:16","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"_manager","nameLocation":"643:8:16","nodeType":"VariableDeclaration","scope":1668,"src":"635:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"634:18:16"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[],"src":"674:0:16"},"scope":1828,"src":"615:130:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1684,"nodeType":"Block","src":"843:91:16","statements":[{"expression":{"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"integrations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"853:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1677,"name":"_integrations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"868:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"853:28:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1679,"nodeType":"ExpressionStatement","src":"853:28:16"},{"eventCall":{"arguments":[{"id":1681,"name":"_integrations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"913:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1680,"name":"SetIntegrations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"897:15:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"897:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"EmitStatement","src":"892:35:16"}]},"functionSelector":"10466861","id":1685,"implemented":true,"kind":"function","modifiers":[{"id":1674,"kind":"modifierInvocation","modifierName":{"id":1673,"name":"onlyManager","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"831:11:16"},"nodeType":"ModifierInvocation","src":"831:11:16"}],"name":"setIntegrations","nameLocation":"760:15:16","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"_integrations","nameLocation":"802:13:16","nodeType":"VariableDeclaration","scope":1685,"src":"785:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"785:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1670,"nodeType":"ArrayTypeName","src":"785:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"775:46:16"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[],"src":"843:0:16"},"scope":1828,"src":"751:183:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3276],"body":{"id":1753,"nodeType":"Block","src":"1082:496:16","statements":[{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"length","nameLocation":"1100:6:16","nodeType":"VariableDeclaration","scope":1753,"src":"1092:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1699,"initialValue":{"expression":{"id":1697,"name":"integrations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1109:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1109:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:36:16"},{"body":{"id":1751,"nodeType":"Block","src":"1175:397:16","statements":[{"assignments":[1712],"declarations":[{"constant":false,"id":1712,"mutability":"mutable","name":"integration","nameLocation":"1211:11:16","nodeType":"VariableDeclaration","scope":1751,"src":"1189:33:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"},"typeName":{"id":1711,"nodeType":"UserDefinedTypeName","pathNode":{"id":1710,"name":"IPriceFeedIntegration","nodeType":"IdentifierPath","referencedDeclaration":3303,"src":"1189:21:16"},"referencedDeclaration":3303,"src":"1189:21:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"}},"visibility":"internal"}],"id":1718,"initialValue":{"arguments":[{"baseExpression":{"id":1714,"name":"integrations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1264:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1716,"indexExpression":{"id":1715,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1277:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1264:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1713,"name":"IPriceFeedIntegration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"1225:21:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceFeedIntegration_$3303_$","typeString":"type(contract IPriceFeedIntegration)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1225:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"}},"nodeType":"VariableDeclarationStatement","src":"1189:104:16"},{"assignments":[1720],"declarations":[{"constant":false,"id":1720,"mutability":"mutable","name":"price","nameLocation":"1315:5:16","nodeType":"VariableDeclaration","scope":1751,"src":"1307:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1726,"initialValue":{"arguments":[{"id":1723,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"1344:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1724,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"1356:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1721,"name":"integration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"1323:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":3302,"src":"1323:20:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1323:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1307:61:16"},{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"prec","nameLocation":"1390:4:16","nodeType":"VariableDeclaration","scope":1751,"src":"1382:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"1382:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1732,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1729,"name":"integration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"1397:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PRECISION","nodeType":"MemberAccess","referencedDeclaration":3293,"src":"1397:21:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1397:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1382:38:16"},{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1733,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"1434:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"1443:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1735,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"1451:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1443:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1442:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1738,"name":"prec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"1464:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1442:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1434:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1741,"nodeType":"ExpressionStatement","src":"1434:34:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1742,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"1487:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1743,"name":"highestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1495:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1487:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1750,"nodeType":"IfStatement","src":"1483:79:16","trueBody":{"id":1749,"nodeType":"Block","src":"1509:53:16","statements":[{"expression":{"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1745,"name":"highestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1527:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1746,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"1542:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1527:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1748,"nodeType":"ExpressionStatement","src":"1527:20:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1704,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1158:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1705,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1162:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1158:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1752,"initializationExpression":{"assignments":[1701],"declarations":[{"constant":false,"id":1701,"mutability":"mutable","name":"i","nameLocation":"1151:1:16","nodeType":"VariableDeclaration","scope":1752,"src":"1143:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1703,"initialValue":{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1155:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1143:13:16"},"loopExpression":{"expression":{"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1170:3:16","subExpression":{"id":1707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1170:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1709,"nodeType":"ExpressionStatement","src":"1170:3:16"},"nodeType":"ForStatement","src":"1138:434:16"}]},"functionSelector":"1a102f67","id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"getHighestPrice","nameLocation":"949:15:16","nodeType":"FunctionDefinition","overrides":{"id":1691,"nodeType":"OverrideSpecifier","overrides":[],"src":"1042:8:16"},"parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"_baseToken","nameLocation":"982:10:16","nodeType":"VariableDeclaration","scope":1754,"src":"974:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"_quoteToken","nameLocation":"1010:11:16","nodeType":"VariableDeclaration","scope":1754,"src":"1002:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"964:63:16"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"highestPrice","nameLocation":"1068:12:16","nodeType":"VariableDeclaration","scope":1754,"src":"1060:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1059:22:16"},"scope":1828,"src":"940:638:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3285],"body":{"id":1826,"nodeType":"Block","src":"1724:507:16","statements":[{"assignments":[1765],"declarations":[{"constant":false,"id":1765,"mutability":"mutable","name":"length","nameLocation":"1742:6:16","nodeType":"VariableDeclaration","scope":1826,"src":"1734:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1768,"initialValue":{"expression":{"id":1766,"name":"integrations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1751:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1751:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1734:36:16"},{"body":{"id":1824,"nodeType":"Block","src":"1817:408:16","statements":[{"assignments":[1781],"declarations":[{"constant":false,"id":1781,"mutability":"mutable","name":"integration","nameLocation":"1853:11:16","nodeType":"VariableDeclaration","scope":1824,"src":"1831:33:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"},"typeName":{"id":1780,"nodeType":"UserDefinedTypeName","pathNode":{"id":1779,"name":"IPriceFeedIntegration","nodeType":"IdentifierPath","referencedDeclaration":3303,"src":"1831:21:16"},"referencedDeclaration":3303,"src":"1831:21:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"}},"visibility":"internal"}],"id":1787,"initialValue":{"arguments":[{"baseExpression":{"id":1783,"name":"integrations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1906:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1785,"indexExpression":{"id":1784,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1919:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1906:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1782,"name":"IPriceFeedIntegration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"1867:21:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceFeedIntegration_$3303_$","typeString":"type(contract IPriceFeedIntegration)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1867:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"}},"nodeType":"VariableDeclarationStatement","src":"1831:104:16"},{"assignments":[1789],"declarations":[{"constant":false,"id":1789,"mutability":"mutable","name":"price","nameLocation":"1957:5:16","nodeType":"VariableDeclaration","scope":1824,"src":"1949:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1795,"initialValue":{"arguments":[{"id":1792,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"1986:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1793,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"1998:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1790,"name":"integration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"1965:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":3302,"src":"1965:20:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1965:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1949:61:16"},{"assignments":[1797],"declarations":[{"constant":false,"id":1797,"mutability":"mutable","name":"prec","nameLocation":"2032:4:16","nodeType":"VariableDeclaration","scope":1824,"src":"2024:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2024:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1801,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1798,"name":"integration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2039:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedIntegration_$3303","typeString":"contract IPriceFeedIntegration"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PRECISION","nodeType":"MemberAccess","referencedDeclaration":3293,"src":"2039:21:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2039:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2024:38:16"},{"expression":{"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1802,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"2076:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"2085:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1804,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"2093:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2085:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2084:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1807,"name":"prec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"2106:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2084:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2076:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"nodeType":"ExpressionStatement","src":"2076:34:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"2129:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2137:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2129:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1814,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"2142:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1815,"name":"lowestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"2150:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2142:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2129:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1823,"nodeType":"IfStatement","src":"2125:90:16","trueBody":{"id":1822,"nodeType":"Block","src":"2163:52:16","statements":[{"expression":{"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1818,"name":"lowestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"2181:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1819,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"2195:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2181:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1821,"nodeType":"ExpressionStatement","src":"2181:19:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1800:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1774,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"1804:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1800:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1825,"initializationExpression":{"assignments":[1770],"declarations":[{"constant":false,"id":1770,"mutability":"mutable","name":"i","nameLocation":"1793:1:16","nodeType":"VariableDeclaration","scope":1825,"src":"1785:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"1785:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1772,"initialValue":{"hexValue":"30","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1785:13:16"},"loopExpression":{"expression":{"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1812:3:16","subExpression":{"id":1776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1812:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1778,"nodeType":"ExpressionStatement","src":"1812:3:16"},"nodeType":"ForStatement","src":"1780:445:16"}]},"functionSelector":"e6c14362","id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"getLowestPrice","nameLocation":"1593:14:16","nodeType":"FunctionDefinition","overrides":{"id":1760,"nodeType":"OverrideSpecifier","overrides":[],"src":"1685:8:16"},"parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"_baseToken","nameLocation":"1625:10:16","nodeType":"VariableDeclaration","scope":1827,"src":"1617:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"1617:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"_quoteToken","nameLocation":"1653:11:16","nodeType":"VariableDeclaration","scope":1827,"src":"1645:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"1645:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1607:63:16"},"returnParameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"lowestPrice","nameLocation":"1711:11:16","nodeType":"VariableDeclaration","scope":1827,"src":"1703:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1703:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1702:21:16"},"scope":1828,"src":"1584:647:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1829,"src":"159:2074:16","usedErrors":[1629]}],"src":"45:2189:16"},"id":16},"contracts/TokenReader.sol":{"ast":{"absolutePath":"contracts/TokenReader.sol","exportedSymbols":{"IERC20":[3250],"TokenReader":[2231]},"id":2232,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1830,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:17"},{"id":1831,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:17"},{"absolutePath":"contracts/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":1832,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2232,"sourceUnit":3251,"src":"91:33:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2231,"linearizedBaseContracts":[2231],"name":"TokenReader","nameLocation":"135:11:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":1895,"nodeType":"Block","src":"260:325:17","statements":[{"assignments":[1842],"declarations":[{"constant":false,"id":1842,"mutability":"mutable","name":"length","nameLocation":"278:6:17","nodeType":"VariableDeclaration","scope":1895,"src":"270:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"270:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1845,"initialValue":{"expression":{"id":1843,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"287:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"287:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"270:31:17"},{"assignments":[1850],"declarations":[{"constant":false,"id":1850,"mutability":"mutable","name":"supplies","nameLocation":"328:8:17","nodeType":"VariableDeclaration","scope":1895,"src":"311:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ArrayTypeName","src":"311:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1856,"initialValue":{"arguments":[{"id":1854,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"353:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"339:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ArrayTypeName","src":"343:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"339:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"311:49:17"},{"body":{"id":1891,"nodeType":"Block","src":"407:147:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1868,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"429:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1870,"indexExpression":{"id":1869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"437:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"429:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"451:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"443:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:17","typeDescriptions":{}}},"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"443:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"429:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5265616465723a205a45524f5f41444452455353","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"455:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""},"value":"TokenReader: ZERO_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""}],"id":1867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"421:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"421:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1878,"nodeType":"ExpressionStatement","src":"421:62:17"},{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1879,"name":"supplies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"497:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1881,"indexExpression":{"id":1880,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"506:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"497:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":1883,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"518:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1885,"indexExpression":{"id":1884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"526:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"518:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1882,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"511:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"511:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":3187,"src":"511:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"511:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1890,"nodeType":"ExpressionStatement","src":"497:46:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"390:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1862,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"394:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"390:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1892,"initializationExpression":{"assignments":[1858],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"i","nameLocation":"383:1:17","nodeType":"VariableDeclaration","scope":1892,"src":"375:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"375:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1860,"initialValue":{"hexValue":"30","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"387:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"375:13:17"},"loopExpression":{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"402:3:17","subExpression":{"id":1864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"402:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"402:3:17"},"nodeType":"ForStatement","src":"370:184:17"},{"expression":{"id":1893,"name":"supplies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"570:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1840,"id":1894,"nodeType":"Return","src":"563:15:17"}]},"functionSelector":"1e6a1597","id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenSupplies","nameLocation":"162:16:17","nodeType":"FunctionDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"_tokens","nameLocation":"205:7:17","nodeType":"VariableDeclaration","scope":1896,"src":"188:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"188:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1834,"nodeType":"ArrayTypeName","src":"188:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"178:40:17"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1896,"src":"242:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"242:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1838,"nodeType":"ArrayTypeName","src":"242:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"241:18:17"},"scope":2231,"src":"153:432:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1959,"nodeType":"Block","src":"698:322:17","statements":[{"assignments":[1906],"declarations":[{"constant":false,"id":1906,"mutability":"mutable","name":"length","nameLocation":"716:6:17","nodeType":"VariableDeclaration","scope":1959,"src":"708:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1909,"initialValue":{"expression":{"id":1907,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"725:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"725:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"708:31:17"},{"assignments":[1914],"declarations":[{"constant":false,"id":1914,"mutability":"mutable","name":"decimals","nameLocation":"766:8:17","nodeType":"VariableDeclaration","scope":1959,"src":"749:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1913,"nodeType":"ArrayTypeName","src":"749:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1920,"initialValue":{"arguments":[{"id":1918,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"791:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"777:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1916,"nodeType":"ArrayTypeName","src":"781:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"777:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"749:49:17"},{"body":{"id":1955,"nodeType":"Block","src":"845:144:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1932,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"867:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1934,"indexExpression":{"id":1933,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"875:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"867:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"889:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"881:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"881:7:17","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"867:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5265616465723a205a45524f5f41444452455353","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"893:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""},"value":"TokenReader: ZERO_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""}],"id":1931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"859:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"859:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1942,"nodeType":"ExpressionStatement","src":"859:62:17"},{"expression":{"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1943,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"935:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1945,"indexExpression":{"id":1944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"944:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"935:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":1947,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"956:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1949,"indexExpression":{"id":1948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"964:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"956:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1946,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"949:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"949:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"949:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"949:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"935:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1954,"nodeType":"ExpressionStatement","src":"935:43:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"828:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1926,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"832:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"828:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1956,"initializationExpression":{"assignments":[1922],"declarations":[{"constant":false,"id":1922,"mutability":"mutable","name":"i","nameLocation":"821:1:17","nodeType":"VariableDeclaration","scope":1956,"src":"813:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1921,"name":"uint256","nodeType":"ElementaryTypeName","src":"813:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1924,"initialValue":{"hexValue":"30","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"825:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"813:13:17"},"loopExpression":{"expression":{"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"840:3:17","subExpression":{"id":1928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"840:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"nodeType":"ExpressionStatement","src":"840:3:17"},"nodeType":"ForStatement","src":"808:181:17"},{"expression":{"id":1957,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1005:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1904,"id":1958,"nodeType":"Return","src":"998:15:17"}]},"functionSelector":"706e2f9b","id":1960,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenDecimals","nameLocation":"600:16:17","nodeType":"FunctionDefinition","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"_tokens","nameLocation":"643:7:17","nodeType":"VariableDeclaration","scope":1960,"src":"626:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1898,"nodeType":"ArrayTypeName","src":"626:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"616:40:17"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"680:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1902,"nodeType":"ArrayTypeName","src":"680:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"679:18:17"},"scope":2231,"src":"591:429:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2026,"nodeType":"Block","src":"1156:328:17","statements":[{"assignments":[1972],"declarations":[{"constant":false,"id":1972,"mutability":"mutable","name":"length","nameLocation":"1174:6:17","nodeType":"VariableDeclaration","scope":2026,"src":"1166:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1975,"initialValue":{"expression":{"id":1973,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"1183:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1183:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1166:31:17"},{"assignments":[1980],"declarations":[{"constant":false,"id":1980,"mutability":"mutable","name":"balances","nameLocation":"1224:8:17","nodeType":"VariableDeclaration","scope":2026,"src":"1207:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1979,"nodeType":"ArrayTypeName","src":"1207:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1986,"initialValue":{"arguments":[{"id":1984,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"1249:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1235:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1982,"nodeType":"ArrayTypeName","src":"1239:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1235:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1207:49:17"},{"body":{"id":2022,"nodeType":"Block","src":"1303:150:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1998,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"1325:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2000,"indexExpression":{"id":1999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1333:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1325:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1347:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1339:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:17","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1339:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1325:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5265616465723a205a45524f5f41444452455353","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1351:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""},"value":"TokenReader: ZERO_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""}],"id":1997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1317:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1317:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2008,"nodeType":"ExpressionStatement","src":"1317:62:17"},{"expression":{"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2009,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"1393:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2011,"indexExpression":{"id":2010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1402:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1393:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2018,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1436:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":2013,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"1414:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2015,"indexExpression":{"id":2014,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1422:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1414:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2012,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1407:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1407:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"1407:28:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1407:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1393:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2021,"nodeType":"ExpressionStatement","src":"1393:49:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1286:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1992,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"1290:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1286:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2023,"initializationExpression":{"assignments":[1988],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"i","nameLocation":"1279:1:17","nodeType":"VariableDeclaration","scope":2023,"src":"1271:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1990,"initialValue":{"hexValue":"30","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1283:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1271:13:17"},"loopExpression":{"expression":{"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1298:3:17","subExpression":{"id":1994,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1298:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1996,"nodeType":"ExpressionStatement","src":"1298:3:17"},"nodeType":"ForStatement","src":"1266:187:17"},{"expression":{"id":2024,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"1469:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1970,"id":2025,"nodeType":"Return","src":"1462:15:17"}]},"functionSelector":"37860a08","id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"getTokensBalance","nameLocation":"1035:16:17","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"_user","nameLocation":"1069:5:17","nodeType":"VariableDeclaration","scope":2027,"src":"1061:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"_tokens","nameLocation":"1101:7:17","nodeType":"VariableDeclaration","scope":2027,"src":"1084:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1963,"name":"address","nodeType":"ElementaryTypeName","src":"1084:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1964,"nodeType":"ArrayTypeName","src":"1084:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1051:63:17"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2027,"src":"1138:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1138:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1968,"nodeType":"ArrayTypeName","src":"1138:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1137:18:17"},"scope":2231,"src":"1026:458:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2091,"nodeType":"Block","src":"1620:319:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"1638:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1656:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1648:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:17","typeDescriptions":{}}},"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1648:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1638:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5265616465723a205a45524f5f41444452455353","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1660:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""},"value":"TokenReader: ZERO_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""}],"id":2038,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1630:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1630:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2047,"nodeType":"ExpressionStatement","src":"1630:58:17"},{"assignments":[2049],"declarations":[{"constant":false,"id":2049,"mutability":"mutable","name":"length","nameLocation":"1706:6:17","nodeType":"VariableDeclaration","scope":2091,"src":"1698:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2052,"initialValue":{"expression":{"id":2050,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1715:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1715:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1698:30:17"},{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"balances","nameLocation":"1755:8:17","nodeType":"VariableDeclaration","scope":2091,"src":"1738:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"1738:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2056,"nodeType":"ArrayTypeName","src":"1738:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2063,"initialValue":{"arguments":[{"id":2061,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1780:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1766:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ArrayTypeName","src":"1770:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1766:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1738:49:17"},{"body":{"id":2087,"nodeType":"Block","src":"1834:74:17","statements":[{"expression":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2074,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1848:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2076,"indexExpression":{"id":2075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"1857:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1848:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2081,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1887:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2083,"indexExpression":{"id":2082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"1894:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1887:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2078,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"1869:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2077,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1862:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"1862:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1848:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"nodeType":"ExpressionStatement","src":"1848:49:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"1817:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2069,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1821:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1817:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2088,"initializationExpression":{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"i","nameLocation":"1810:1:17","nodeType":"VariableDeclaration","scope":2088,"src":"1802:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2067,"initialValue":{"hexValue":"30","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1814:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1802:13:17"},"loopExpression":{"expression":{"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1829:3:17","subExpression":{"id":2071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"1829:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2073,"nodeType":"ExpressionStatement","src":"1829:3:17"},"nodeType":"ForStatement","src":"1797:111:17"},{"expression":{"id":2089,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1924:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2037,"id":2090,"nodeType":"Return","src":"1917:15:17"}]},"functionSelector":"c3fae362","id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenBalances","nameLocation":"1499:16:17","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"_users","nameLocation":"1542:6:17","nodeType":"VariableDeclaration","scope":2092,"src":"1525:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2029,"nodeType":"ArrayTypeName","src":"1525:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"_token","nameLocation":"1566:6:17","nodeType":"VariableDeclaration","scope":2092,"src":"1558:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"1558:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1515:63:17"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2092,"src":"1602:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1602:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ArrayTypeName","src":"1602:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1601:18:17"},"scope":2231,"src":"1490:449:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2161,"nodeType":"Block","src":"2103:344:17","statements":[{"assignments":[2106],"declarations":[{"constant":false,"id":2106,"mutability":"mutable","name":"length","nameLocation":"2121:6:17","nodeType":"VariableDeclaration","scope":2161,"src":"2113:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2113:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2109,"initialValue":{"expression":{"id":2107,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2130:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2130:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2113:31:17"},{"assignments":[2114],"declarations":[{"constant":false,"id":2114,"mutability":"mutable","name":"allowances","nameLocation":"2171:10:17","nodeType":"VariableDeclaration","scope":2161,"src":"2154:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ArrayTypeName","src":"2154:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2120,"initialValue":{"arguments":[{"id":2118,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2198:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2184:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2188:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ArrayTypeName","src":"2188:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2184:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2154:51:17"},{"body":{"id":2157,"nodeType":"Block","src":"2252:162:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2132,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2274:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2134,"indexExpression":{"id":2133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2282:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2274:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2288:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"2288:7:17","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2288:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2274:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5265616465723a205a45524f5f41444452455353","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2300:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""},"value":"TokenReader: ZERO_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""}],"id":2131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2266:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2266:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2142,"nodeType":"ExpressionStatement","src":"2266:62:17"},{"expression":{"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2143,"name":"allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2342:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2145,"indexExpression":{"id":2144,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2353:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2342:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2152,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"2387:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2153,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"2394:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":2147,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2365:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2149,"indexExpression":{"id":2148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2373:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2365:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2146,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"2358:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2358:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"2358:28:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2358:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2342:61:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2156,"nodeType":"ExpressionStatement","src":"2342:61:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2235:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2126,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2239:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2235:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2158,"initializationExpression":{"assignments":[2122],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"i","nameLocation":"2228:1:17","nodeType":"VariableDeclaration","scope":2158,"src":"2220:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2220:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2124,"initialValue":{"hexValue":"30","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2220:13:17"},"loopExpression":{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2247:3:17","subExpression":{"id":2128,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2247:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2130,"nodeType":"ExpressionStatement","src":"2247:3:17"},"nodeType":"ForStatement","src":"2215:199:17"},{"expression":{"id":2159,"name":"allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2430:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2104,"id":2160,"nodeType":"Return","src":"2423:17:17"}]},"functionSelector":"4e11048f","id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"getTokensAllowance","nameLocation":"1954:18:17","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"_user","nameLocation":"1990:5:17","nodeType":"VariableDeclaration","scope":2162,"src":"1982:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"_tokens","nameLocation":"2022:7:17","nodeType":"VariableDeclaration","scope":2162,"src":"2005:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2096,"nodeType":"ArrayTypeName","src":"2005:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"_spender","nameLocation":"2047:8:17","nodeType":"VariableDeclaration","scope":2162,"src":"2039:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1972:89:17"},"returnParameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2162,"src":"2085:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2102,"nodeType":"ArrayTypeName","src":"2085:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2084:18:17"},"scope":2231,"src":"1945:502:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2229,"nodeType":"Block","src":"2611:335:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"2629:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:17","typeDescriptions":{}}},"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2629:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5265616465723a205a45524f5f41444452455353","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2651:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""},"value":"TokenReader: ZERO_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13","typeString":"literal_string \"TokenReader: ZERO_ADDRESS\""}],"id":2175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2621:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2621:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2184,"nodeType":"ExpressionStatement","src":"2621:58:17"},{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"length","nameLocation":"2697:6:17","nodeType":"VariableDeclaration","scope":2229,"src":"2689:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2689:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2189,"initialValue":{"expression":{"id":2187,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2706:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2706:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2689:30:17"},{"assignments":[2194],"declarations":[{"constant":false,"id":2194,"mutability":"mutable","name":"allowances","nameLocation":"2746:10:17","nodeType":"VariableDeclaration","scope":2229,"src":"2729:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2729:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2193,"nodeType":"ArrayTypeName","src":"2729:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2200,"initialValue":{"arguments":[{"id":2198,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"2773:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2759:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"2763:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2196,"nodeType":"ArrayTypeName","src":"2763:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2759:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2729:51:17"},{"body":{"id":2225,"nodeType":"Block","src":"2827:86:17","statements":[{"expression":{"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2211,"name":"allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2841:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2213,"indexExpression":{"id":2212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"2852:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2841:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2218,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2882:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2220,"indexExpression":{"id":2219,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"2889:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2882:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2221,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"2893:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2215,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"2864:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2214,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"2857:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2857:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"2857:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2857:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2841:61:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2224,"nodeType":"ExpressionStatement","src":"2841:61:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2205,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"2810:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2206,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"2814:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2810:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"initializationExpression":{"assignments":[2202],"declarations":[{"constant":false,"id":2202,"mutability":"mutable","name":"i","nameLocation":"2803:1:17","nodeType":"VariableDeclaration","scope":2226,"src":"2795:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"2795:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2204,"initialValue":{"hexValue":"30","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2807:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2795:13:17"},"loopExpression":{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2822:3:17","subExpression":{"id":2208,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"2822:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2210,"nodeType":"ExpressionStatement","src":"2822:3:17"},"nodeType":"ForStatement","src":"2790:123:17"},{"expression":{"id":2227,"name":"allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2929:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2174,"id":2228,"nodeType":"Return","src":"2922:17:17"}]},"functionSelector":"63f35cdd","id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenAllowances","nameLocation":"2462:18:17","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"_users","nameLocation":"2507:6:17","nodeType":"VariableDeclaration","scope":2230,"src":"2490:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2163,"name":"address","nodeType":"ElementaryTypeName","src":"2490:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2164,"nodeType":"ArrayTypeName","src":"2490:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"_token","nameLocation":"2531:6:17","nodeType":"VariableDeclaration","scope":2230,"src":"2523:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"2523:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"_spender","nameLocation":"2555:8:17","nodeType":"VariableDeclaration","scope":2230,"src":"2547:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2168,"name":"address","nodeType":"ElementaryTypeName","src":"2547:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2480:89:17"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2230,"src":"2593:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ArrayTypeName","src":"2593:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2592:18:17"},"scope":2231,"src":"2453:493:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2232,"src":"126:2822:17","usedErrors":[]}],"src":"45:2904:17"},"id":17},"contracts/UniswapV3PriceFeedIntegration.sol":{"ast":{"absolutePath":"contracts/UniswapV3PriceFeedIntegration.sol","exportedSymbols":{"FixedPoint96":[1359],"IERC20":[3250],"IPriceFeedIntegration":[3303],"IUniswapV3Factory":[907],"IUniswapV3Pool":[929],"IUniswapV3PoolActions":[1025],"IUniswapV3PoolDerivedState":[1056],"IUniswapV3PoolEvents":[1175],"IUniswapV3PoolImmutables":[1215],"IUniswapV3PoolOwnerActions":[1241],"IUniswapV3PoolState":[1349],"UniswapV3PriceFeedIntegration":[2432]},"id":2433,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2233,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:18"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":2234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2433,"sourceUnit":908,"src":"71:69:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","id":2235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2433,"sourceUnit":930,"src":"141:66:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol","file":"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol","id":2236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2433,"sourceUnit":1360,"src":"208:63:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","file":"./interfaces/IPriceFeedIntegration.sol","id":2237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2433,"sourceUnit":3304,"src":"272:48:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":2238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2433,"sourceUnit":3251,"src":"321:33:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2239,"name":"IPriceFeedIntegration","nodeType":"IdentifierPath","referencedDeclaration":3303,"src":"398:21:18"},"id":2240,"nodeType":"InheritanceSpecifier","src":"398:21:18"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2432,"linearizedBaseContracts":[2432,3303],"name":"UniswapV3PriceFeedIntegration","nameLocation":"365:29:18","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3293],"constant":true,"functionSelector":"aaf5eb68","id":2244,"mutability":"constant","name":"PRECISION","nameLocation":"459:9:18","nodeType":"VariableDeclaration","overrides":{"id":2242,"nodeType":"OverrideSpecifier","overrides":[],"src":"450:8:18"},"scope":2432,"src":"426:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653330","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"471:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"value":"1e30"},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":2246,"mutability":"immutable","name":"factory","nameLocation":"506:7:18","nodeType":"VariableDeclaration","scope":2432,"src":"481:32:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"481:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"230ed44a","id":2254,"mutability":"mutable","name":"feeTiers","nameLocation":"535:8:18","nodeType":"VariableDeclaration","scope":2432,"src":"519:50:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[]"},"typeName":{"baseType":{"id":2247,"name":"uint24","nodeType":"ElementaryTypeName","src":"519:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":2248,"nodeType":"ArrayTypeName","src":"519:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"value":{"components":[{"hexValue":"313030","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"547:3:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"353030","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:3:18","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},{"hexValue":"33303030","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:18","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},{"hexValue":"3130303030","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"563:5:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"}],"id":2253,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"546:23:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$4_memory_ptr","typeString":"uint16[4] memory"}},"visibility":"public"},{"body":{"id":2263,"nodeType":"Block","src":"606:35:18","statements":[{"expression":{"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2259,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"616:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2260,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"626:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"616:18:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2262,"nodeType":"ExpressionStatement","src":"616:18:18"}]},"id":2264,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"_factory","nameLocation":"596:8:18","nodeType":"VariableDeclaration","scope":2264,"src":"588:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"587:18:18"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[],"src":"606:0:18"},"scope":2432,"src":"576:65:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3302],"body":{"id":2430,"nodeType":"Block","src":"775:1298:18","statements":[{"assignments":[2275],"declarations":[{"constant":false,"id":2275,"mutability":"mutable","name":"length","nameLocation":"793:6:18","nodeType":"VariableDeclaration","scope":2430,"src":"785:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2278,"initialValue":{"expression":{"id":2276,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"802:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"802:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"785:32:18"},{"assignments":[2281],"declarations":[{"constant":false,"id":2281,"mutability":"mutable","name":"_factory","nameLocation":"845:8:18","nodeType":"VariableDeclaration","scope":2430,"src":"827:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$907","typeString":"contract IUniswapV3Factory"},"typeName":{"id":2280,"nodeType":"UserDefinedTypeName","pathNode":{"id":2279,"name":"IUniswapV3Factory","nodeType":"IdentifierPath","referencedDeclaration":907,"src":"827:17:18"},"referencedDeclaration":907,"src":"827:17:18","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$907","typeString":"contract IUniswapV3Factory"}},"visibility":"internal"}],"id":2285,"initialValue":{"arguments":[{"id":2283,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"874:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2282,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"856:17:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$907_$","typeString":"type(contract IUniswapV3Factory)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"856:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$907","typeString":"contract IUniswapV3Factory"}},"nodeType":"VariableDeclarationStatement","src":"827:55:18"},{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"bestLiquidity","nameLocation":"900:13:18","nodeType":"VariableDeclaration","scope":2430,"src":"892:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2288,"nodeType":"VariableDeclarationStatement","src":"892:21:18"},{"body":{"id":2428,"nodeType":"Block","src":"960:1107:18","statements":[{"assignments":[2300],"declarations":[{"constant":false,"id":2300,"mutability":"mutable","name":"poolAddress","nameLocation":"982:11:18","nodeType":"VariableDeclaration","scope":2428,"src":"974:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2309,"initialValue":{"arguments":[{"id":2303,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"1030:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2304,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"1058:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2305,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"1087:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":2307,"indexExpression":{"id":2306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"1096:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1087:11:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":2301,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"996:8:18","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$907","typeString":"contract IUniswapV3Factory"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":880,"src":"996:16:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"996:116:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"974:138:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2310,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1130:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1153:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1145:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2311,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:18","typeDescriptions":{}}},"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1145:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1130:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2427,"nodeType":"IfStatement","src":"1126:931:18","trueBody":{"id":2426,"nodeType":"Block","src":"1157:900:18","statements":[{"assignments":[2318],"declarations":[{"constant":false,"id":2318,"mutability":"mutable","name":"pool","nameLocation":"1190:4:18","nodeType":"VariableDeclaration","scope":2426,"src":"1175:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$929","typeString":"contract IUniswapV3Pool"},"typeName":{"id":2317,"nodeType":"UserDefinedTypeName","pathNode":{"id":2316,"name":"IUniswapV3Pool","nodeType":"IdentifierPath","referencedDeclaration":929,"src":"1175:14:18"},"referencedDeclaration":929,"src":"1175:14:18","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$929","typeString":"contract IUniswapV3Pool"}},"visibility":"internal"}],"id":2322,"initialValue":{"arguments":[{"id":2320,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1212:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2319,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"1197:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Pool_$929_$","typeString":"type(contract IUniswapV3Pool)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1197:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$929","typeString":"contract IUniswapV3Pool"}},"nodeType":"VariableDeclarationStatement","src":"1175:49:18"},{"assignments":[2324],"declarations":[{"constant":false,"id":2324,"mutability":"mutable","name":"token0","nameLocation":"1250:6:18","nodeType":"VariableDeclaration","scope":2426,"src":"1242:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"1242:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2328,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2325,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"1259:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$929","typeString":"contract IUniswapV3Pool"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":1190,"src":"1259:11:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1242:30:18"},{"assignments":[2330],"declarations":[{"constant":false,"id":2330,"mutability":"mutable","name":"balance0","nameLocation":"1298:8:18","nodeType":"VariableDeclaration","scope":2426,"src":"1290:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2337,"initialValue":{"arguments":[{"id":2335,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1334:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2332,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"1316:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2331,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1309:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1309:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"1309:24:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1309:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1290:56:18"},{"assignments":[2339],"declarations":[{"constant":false,"id":2339,"mutability":"mutable","name":"token1","nameLocation":"1372:6:18","nodeType":"VariableDeclaration","scope":2426,"src":"1364:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"1364:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2343,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2340,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"1381:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$929","typeString":"contract IUniswapV3Pool"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":1196,"src":"1381:11:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1381:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1364:30:18"},{"assignments":[2345],"declarations":[{"constant":false,"id":2345,"mutability":"mutable","name":"balance1","nameLocation":"1420:8:18","nodeType":"VariableDeclaration","scope":2426,"src":"1412:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2352,"initialValue":{"arguments":[{"id":2350,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1456:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2347,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1438:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2346,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1431:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1431:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"1431:24:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1431:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1412:56:18"},{"assignments":[2354,null,null,null,null,null,null],"declarations":[{"constant":false,"id":2354,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"1495:12:18","nodeType":"VariableDeclaration","scope":2426,"src":"1487:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2353,"name":"uint160","nodeType":"ElementaryTypeName","src":"1487:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},null,null,null,null,null,null],"id":2358,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2355,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"1523:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$929","typeString":"contract IUniswapV3Pool"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"slot0","nodeType":"MemberAccess","referencedDeclaration":1262,"src":"1523:10:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$","typeString":"function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1523:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$","typeString":"tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1486:49:18"},{"assignments":[2360],"declarations":[{"constant":false,"id":2360,"mutability":"mutable","name":"price0","nameLocation":"1561:6:18","nodeType":"VariableDeclaration","scope":2426,"src":"1553:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2376,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2363,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"1579:12:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1571:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1571:7:18","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1571:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1596:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1571:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2367,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"1600:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1571:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1570:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2370,"name":"FixedPoint96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"1634:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint96_$1359_$","typeString":"type(library FixedPoint96)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q96","nodeType":"MemberAccess","referencedDeclaration":1358,"src":"1634:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1654:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1634:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1633:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1570:86:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1553:103:18"},{"assignments":[2378],"declarations":[{"constant":false,"id":2378,"mutability":"mutable","name":"liquidity","nameLocation":"1682:9:18","nodeType":"VariableDeclaration","scope":2426,"src":"1674:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2387,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1695:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2380,"name":"price0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"1706:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1695:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1694:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2383,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"1716:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1694:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2385,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"1728:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1694:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1674:62:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"1758:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2389,"name":"bestLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1770:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1758:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2425,"nodeType":"IfStatement","src":"1754:289:18","trueBody":{"id":2424,"nodeType":"Block","src":"1785:258:18","statements":[{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2391,"name":"bestLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1807:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2392,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"1823:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1807:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2394,"nodeType":"ExpressionStatement","src":"1807:25:18"},{"assignments":[2396],"declarations":[{"constant":false,"id":2396,"mutability":"mutable","name":"prec0","nameLocation":"1862:5:18","nodeType":"VariableDeclaration","scope":2424,"src":"1854:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2404,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1870:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2399,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"1883:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2398,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1876:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1876:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"1876:23:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1876:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1870:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1854:47:18"},{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"prec1","nameLocation":"1931:5:18","nodeType":"VariableDeclaration","scope":2424,"src":"1923:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2414,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1939:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2409,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1952:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2408,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1945:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3250_$","typeString":"type(contract IERC20)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1945:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3250","typeString":"contract IERC20"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"1945:23:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1945:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1939:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1923:47:18"},{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"1992:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"price0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"2001:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2417,"name":"prec0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"2010:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2001:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2000:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2420,"name":"prec1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"2019:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2000:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1992:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2423,"nodeType":"ExpressionStatement","src":"1992:32:18"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"943:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2294,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"947:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"943:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2429,"initializationExpression":{"assignments":[2290],"declarations":[{"constant":false,"id":2290,"mutability":"mutable","name":"i","nameLocation":"936:1:18","nodeType":"VariableDeclaration","scope":2429,"src":"928:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2292,"initialValue":{"hexValue":"30","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"928:13:18"},"loopExpression":{"expression":{"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"955:3:18","subExpression":{"id":2296,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"955:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2298,"nodeType":"ExpressionStatement","src":"955:3:18"},"nodeType":"ForStatement","src":"923:1144:18"}]},"functionSelector":"ac41865a","id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"656:8:18","nodeType":"FunctionDefinition","overrides":{"id":2270,"nodeType":"OverrideSpecifier","overrides":[],"src":"742:8:18"},"parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"_baseToken","nameLocation":"682:10:18","nodeType":"VariableDeclaration","scope":2431,"src":"674:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"_quoteToken","nameLocation":"710:11:18","nodeType":"VariableDeclaration","scope":2431,"src":"702:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"664:63:18"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"price","nameLocation":"768:5:18","nodeType":"VariableDeclaration","scope":2431,"src":"760:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"760:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"759:15:18"},"scope":2432,"src":"647:1426:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2433,"src":"356:1719:18","usedErrors":[]}],"src":"45:2031:18"},"id":18},"contracts/base/BancorConverterRegistry.sol":{"ast":{"absolutePath":"contracts/base/BancorConverterRegistry.sol","exportedSymbols":{"BancorConverterRegistry":[2692],"Owned":[3107],"Utils":[3157]},"id":2693,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2434,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"48:24:19"},{"absolutePath":"contracts/base/Owned.sol","file":"./Owned.sol","id":2435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2693,"sourceUnit":3108,"src":"76:21:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/base/Utils.sol","file":"./Utils.sol","id":2436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2693,"sourceUnit":3158,"src":"99:21:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2438,"name":"Owned","nodeType":"IdentifierPath","referencedDeclaration":3107,"src":"637:5:19"},"id":2439,"nodeType":"InheritanceSpecifier","src":"637:5:19"},{"baseName":{"id":2440,"name":"Utils","nodeType":"IdentifierPath","referencedDeclaration":3157,"src":"644:5:19"},"id":2441,"nodeType":"InheritanceSpecifier","src":"644:5:19"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"124:475:19","text":"Bancor Converter Registry\nThe bancor converter registry keeps converter addresses by token addresses and vice versa.\nThe owner can update converter addresses so that a the token address always points to\nthe updated list of converters for each token.\nThe contract also allows to iterate through all the tokens in the network.\nNote that converter addresses for each token are returned in ascending order (from oldest\nto latest)."},"fullyImplemented":true,"id":2692,"linearizedBaseContracts":[2692,3157,3107],"name":"BancorConverterRegistry","nameLocation":"610:23:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2445,"mutability":"mutable","name":"tokensRegistered","nameLocation":"690:16:19","nodeType":"VariableDeclaration","scope":2692,"src":"657:49:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2444,"keyType":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"657:24:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2443,"name":"bool","nodeType":"ElementaryTypeName","src":"676:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":2450,"mutability":"mutable","name":"tokensToConverters","nameLocation":"789:18:19","nodeType":"VariableDeclaration","scope":2692,"src":"751:56:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":2449,"keyType":{"id":2446,"name":"address","nodeType":"ElementaryTypeName","src":"759:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"751:29:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueType":{"baseType":{"id":2447,"name":"address","nodeType":"ElementaryTypeName","src":"770:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2448,"nodeType":"ArrayTypeName","src":"770:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"private"},{"constant":false,"id":2454,"mutability":"mutable","name":"convertersToTokens","nameLocation":"890:18:19","nodeType":"VariableDeclaration","scope":2692,"src":"854:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":2453,"keyType":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"862:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"854:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":2452,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"functionSelector":"4f64b2be","id":2457,"mutability":"mutable","name":"tokens","nameLocation":"970:6:19","nodeType":"VariableDeclaration","scope":2692,"src":"953:23:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":2455,"name":"address","nodeType":"ElementaryTypeName","src":"953:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2456,"nodeType":"ArrayTypeName","src":"953:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"id":2463,"name":"ConverterAddition","nameLocation":"1082:17:19","nodeType":"EventDefinition","parameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"indexed":true,"mutability":"mutable","name":"_token","nameLocation":"1116:6:19","nodeType":"VariableDeclaration","scope":2463,"src":"1100:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2458,"name":"address","nodeType":"ElementaryTypeName","src":"1100:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2461,"indexed":false,"mutability":"mutable","name":"_address","nameLocation":"1132:8:19","nodeType":"VariableDeclaration","scope":2463,"src":"1124:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"1124:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1099:42:19"},"src":"1076:66:19"},{"anonymous":false,"id":2469,"name":"ConverterRemoval","nameLocation":"1220:16:19","nodeType":"EventDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"indexed":true,"mutability":"mutable","name":"_token","nameLocation":"1253:6:19","nodeType":"VariableDeclaration","scope":2469,"src":"1237:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2467,"indexed":false,"mutability":"mutable","name":"_address","nameLocation":"1269:8:19","nodeType":"VariableDeclaration","scope":2469,"src":"1261:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:42:19"},"src":"1214:65:19"},{"body":{"id":2473,"nodeType":"Block","src":"1351:2:19","statements":[]},"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"1287:37:19","text":"@dev constructor"},"id":2474,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[],"src":"1341:2:19"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[],"src":"1351:0:19"},"scope":2692,"src":"1330:23:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2483,"nodeType":"Block","src":"1525:39:19","statements":[{"expression":{"expression":{"id":2480,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1543:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1543:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2479,"id":2482,"nodeType":"Return","src":"1536:20:19"}]},"documentation":{"id":2475,"nodeType":"StructuredDocumentation","src":"1361:106:19","text":"@dev returns the number of tokens in the registry\n@return number of tokens"},"functionSelector":"9f181b5e","id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"tokenCount","nameLocation":"1482:10:19","nodeType":"FunctionDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[],"src":"1492:2:19"},"returnParameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"1516:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1516:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1515:9:19"},"scope":2692,"src":"1473:91:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2497,"nodeType":"Block","src":"1863:59:19","statements":[{"expression":{"expression":{"baseExpression":{"id":2492,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"1881:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2494,"indexExpression":{"id":2493,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"1900:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1881:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1881:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2491,"id":2496,"nodeType":"Return","src":"1874:40:19"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"1572:215:19","text":"@dev returns the number of converters associated with the given token\nor 0 if the token isn't registered\n@param _token   token address\n@return number of converters"},"functionSelector":"cd9d4d66","id":2498,"implemented":true,"kind":"function","modifiers":[],"name":"converterCount","nameLocation":"1802:14:19","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"_token","nameLocation":"1825:6:19","nodeType":"VariableDeclaration","scope":2498,"src":"1817:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2486,"name":"address","nodeType":"ElementaryTypeName","src":"1817:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1816:16:19"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2498,"src":"1854:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1853:9:19"},"scope":2692,"src":"1793:129:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2526,"nodeType":"Block","src":"2307:139:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2508,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2322:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":2509,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"2332:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2511,"indexExpression":{"id":2510,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2351:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2332:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2332:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2322:43:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2519,"nodeType":"IfStatement","src":"2318:66:19","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2382:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2374:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"2374:7:19","typeDescriptions":{}}},"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2374:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2507,"id":2518,"nodeType":"Return","src":"2367:17:19"}},{"expression":{"baseExpression":{"baseExpression":{"id":2520,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"2404:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2522,"indexExpression":{"id":2521,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2423:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2404:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2524,"indexExpression":{"id":2523,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2431:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2404:34:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2507,"id":2525,"nodeType":"Return","src":"2397:41:19"}]},"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"1930:259:19","text":"@dev returns the converter address associated with the given token\nor zero address if no such converter exists\n@param _token   token address\n@param _index   converter index\n@return converter address"},"functionSelector":"90ab3106","id":2527,"implemented":true,"kind":"function","modifiers":[],"name":"converterAddress","nameLocation":"2204:16:19","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"_token","nameLocation":"2239:6:19","nodeType":"VariableDeclaration","scope":2527,"src":"2231:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2500,"name":"address","nodeType":"ElementaryTypeName","src":"2231:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"_index","nameLocation":"2263:6:19","nodeType":"VariableDeclaration","scope":2527,"src":"2256:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2502,"name":"uint32","nodeType":"ElementaryTypeName","src":"2256:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2220:56:19"},"returnParameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2527,"src":"2298:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:9:19"},"scope":2692,"src":"2195:251:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2539,"nodeType":"Block","src":"2754:56:19","statements":[{"expression":{"baseExpression":{"id":2535,"name":"convertersToTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"2772:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2537,"indexExpression":{"id":2536,"name":"_converter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"2791:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2772:30:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2534,"id":2538,"nodeType":"Return","src":"2765:37:19"}]},"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"2454:222:19","text":"@dev returns the token address associated with the given converter\nor zero address if no such converter exists\n@param _converter   converter address\n@return token address"},"functionSelector":"9884e801","id":2540,"implemented":true,"kind":"function","modifiers":[],"name":"tokenAddress","nameLocation":"2691:12:19","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"_converter","nameLocation":"2712:10:19","nodeType":"VariableDeclaration","scope":2540,"src":"2704:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"2704:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:20:19"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2540,"src":"2745:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2532,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2744:9:19"},"scope":2692,"src":"2682:128:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2603,"nodeType":"Block","src":"3210:466:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2557,"name":"convertersToTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3229:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2559,"indexExpression":{"id":2558,"name":"_converter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"3248:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3229:30:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3271:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3263:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2560,"name":"address","nodeType":"ElementaryTypeName","src":"3263:7:19","typeDescriptions":{}}},"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3263:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3229:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3221:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3221:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2566,"nodeType":"ExpressionStatement","src":"3221:53:19"},{"condition":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3339:25:19","subExpression":{"baseExpression":{"id":2567,"name":"tokensRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"3340:16:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2569,"indexExpression":{"id":2568,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3357:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3340:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2584,"nodeType":"IfStatement","src":"3335:123:19","trueBody":{"id":2583,"nodeType":"Block","src":"3366:92:19","statements":[{"expression":{"arguments":[{"id":2574,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3393:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2571,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"3381:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3381:11:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3381:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2576,"nodeType":"ExpressionStatement","src":"3381:19:19"},{"expression":{"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2577,"name":"tokensRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"3415:16:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2579,"indexExpression":{"id":2578,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3432:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3415:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3442:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3415:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2582,"nodeType":"ExpressionStatement","src":"3415:31:19"}]}},{"expression":{"arguments":[{"id":2589,"name":"_converter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"3502:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2585,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"3470:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2587,"indexExpression":{"id":2586,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3489:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3470:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3470:31:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3470:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"ExpressionStatement","src":"3470:43:19"},{"expression":{"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2592,"name":"convertersToTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3524:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2594,"indexExpression":{"id":2593,"name":"_converter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"3543:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3524:30:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2595,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3557:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3524:39:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2597,"nodeType":"ExpressionStatement","src":"3524:39:19"},{"eventCall":{"arguments":[{"id":2599,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3649:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2600,"name":"_converter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"3657:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2598,"name":"ConverterAddition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"3631:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3631:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2602,"nodeType":"EmitStatement","src":"3626:42:19"}]},"documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"2818:235:19","text":"@dev adds a new converter address for a given token to the registry\nthrows if the converter is already registered\n@param _token       token address\n@param _converter   converter address"},"functionSelector":"d26a8d2e","id":2604,"implemented":true,"kind":"function","modifiers":[{"id":2548,"kind":"modifierInvocation","modifierName":{"id":2547,"name":"ownerOnly","nodeType":"IdentifierPath","referencedDeclaration":3059,"src":"3154:9:19"},"nodeType":"ModifierInvocation","src":"3154:9:19"},{"arguments":[{"id":2550,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3177:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2551,"kind":"modifierInvocation","modifierName":{"id":2549,"name":"validAddress","nodeType":"IdentifierPath","referencedDeclaration":3141,"src":"3164:12:19"},"nodeType":"ModifierInvocation","src":"3164:20:19"},{"arguments":[{"id":2553,"name":"_converter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"3198:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2554,"kind":"modifierInvocation","modifierName":{"id":2552,"name":"validAddress","nodeType":"IdentifierPath","referencedDeclaration":3141,"src":"3185:12:19"},"nodeType":"ModifierInvocation","src":"3185:24:19"}],"name":"registerConverter","nameLocation":"3068:17:19","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"_token","nameLocation":"3104:6:19","nodeType":"VariableDeclaration","scope":2604,"src":"3096:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"3096:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2545,"mutability":"mutable","name":"_converter","nameLocation":"3129:10:19","nodeType":"VariableDeclaration","scope":2604,"src":"3121:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"3121:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3085:61:19"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[],"src":"3210:0:19"},"scope":2692,"src":"3059:617:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2681,"nodeType":"Block","src":"4132:756:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4151:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2619,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4160:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2621,"indexExpression":{"id":2620,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4179:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4160:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4160:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4151:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4143:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4143:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2625,"nodeType":"ExpressionStatement","src":"4143:51:19"},{"assignments":[2627],"declarations":[{"constant":false,"id":2627,"mutability":"mutable","name":"converter","nameLocation":"4215:9:19","nodeType":"VariableDeclaration","scope":2681,"src":"4207:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"4207:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2633,"initialValue":{"baseExpression":{"baseExpression":{"id":2628,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4227:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2630,"indexExpression":{"id":2629,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4246:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4227:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2632,"indexExpression":{"id":2631,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4254:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4227:34:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4207:54:19"},{"body":{"id":2663,"nodeType":"Block","src":"4451:92:19","statements":[{"expression":{"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2649,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4466:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2654,"indexExpression":{"id":2650,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4485:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4466:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2655,"indexExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"4493:1:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4497:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4493:5:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4466:33:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":2656,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4502:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2658,"indexExpression":{"id":2657,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4521:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4502:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2660,"indexExpression":{"id":2659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"4529:1:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4502:29:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4466:65:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2662,"nodeType":"ExpressionStatement","src":"4466:65:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"4384:1:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2641,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4388:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2643,"indexExpression":{"id":2642,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4407:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4388:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4388:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4384:37:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2664,"initializationExpression":{"assignments":[2635],"declarations":[{"constant":false,"id":2635,"mutability":"mutable","name":"i","nameLocation":"4355:1:19","nodeType":"VariableDeclaration","scope":2664,"src":"4348:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2634,"name":"uint32","nodeType":"ElementaryTypeName","src":"4348:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2639,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2636,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4359:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4368:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4359:10:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4348:21:19"},"loopExpression":{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4436:3:19","subExpression":{"id":2646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"4436:1:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2648,"nodeType":"ExpressionStatement","src":"4436:3:19"},"nodeType":"ForStatement","src":"4329:214:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2665,"name":"tokensToConverters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4628:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2667,"indexExpression":{"id":2666,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4647:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4628:26:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"4628:30:19","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4628:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2670,"nodeType":"ExpressionStatement","src":"4628:32:19"},{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4742:36:19","subExpression":{"baseExpression":{"id":2671,"name":"convertersToTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"4749:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2673,"indexExpression":{"id":2672,"name":"converter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"4768:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4749:29:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2675,"nodeType":"ExpressionStatement","src":"4742:36:19"},{"eventCall":{"arguments":[{"id":2677,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4862:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2678,"name":"converter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"4870:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2676,"name":"ConverterRemoval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4845:16:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4845:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2680,"nodeType":"EmitStatement","src":"4840:40:19"}]},"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"3684:319:19","text":"@dev removes an existing converter from the registry\nnote that the function doesn't scale and might be needed to be called\nmultiple times when removing an older converter from a large converter list\n@param _token   token address\n@param _index   converter index"},"functionSelector":"38cb066f","id":2682,"implemented":true,"kind":"function","modifiers":[{"id":2612,"kind":"modifierInvocation","modifierName":{"id":2611,"name":"ownerOnly","nodeType":"IdentifierPath","referencedDeclaration":3059,"src":"4101:9:19"},"nodeType":"ModifierInvocation","src":"4101:9:19"},{"arguments":[{"id":2614,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4124:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2615,"kind":"modifierInvocation","modifierName":{"id":2613,"name":"validAddress","nodeType":"IdentifierPath","referencedDeclaration":3141,"src":"4111:12:19"},"nodeType":"ModifierInvocation","src":"4111:20:19"}],"name":"unregisterConverter","nameLocation":"4018:19:19","nodeType":"FunctionDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"_token","nameLocation":"4056:6:19","nodeType":"VariableDeclaration","scope":2682,"src":"4048:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"4048:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"_index","nameLocation":"4080:6:19","nodeType":"VariableDeclaration","scope":2682,"src":"4073:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2608,"name":"uint32","nodeType":"ElementaryTypeName","src":"4073:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4037:56:19"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"4132:0:19"},"scope":2692,"src":"4009:879:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2690,"nodeType":"Block","src":"4950:41:19","statements":[{"expression":{"expression":{"id":2687,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4968:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4968:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2686,"id":2689,"nodeType":"Return","src":"4961:22:19"}]},"functionSelector":"f427fdf9","id":2691,"implemented":true,"kind":"function","modifiers":[],"name":"blockStamp","nameLocation":"4905:10:19","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[],"src":"4915:2:19"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2691,"src":"4941:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"4941:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4940:9:19"},"scope":2692,"src":"4896:95:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2693,"src":"601:4393:19","usedErrors":[]}],"src":"48:4948:19"},"id":19},"contracts/base/Lockable.sol":{"ast":{"absolutePath":"contracts/base/Lockable.sol","exportedSymbols":{"Lockable":[2717]},"id":2718,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2694,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"46:24:20"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2717,"linearizedBaseContracts":[2717],"name":"Lockable","nameLocation":"81:8:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2697,"mutability":"mutable","name":"unlocked","nameLocation":"112:8:20","nodeType":"VariableDeclaration","scope":2717,"src":"96:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"96:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"body":{"id":2715,"nodeType":"Block","src":"147:114:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"165:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"177:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"165:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f636b61626c653a204c4f434b4544","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"180:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f1432bb2e4b822f83f45f3219cef24e0097ef976da0d4bfd1c20be0f4057967","typeString":"literal_string \"Lockable: LOCKED\""},"value":"Lockable: LOCKED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f1432bb2e4b822f83f45f3219cef24e0097ef976da0d4bfd1c20be0f4057967","typeString":"literal_string \"Lockable: LOCKED\""}],"id":2699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"157:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"157:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2705,"nodeType":"ExpressionStatement","src":"157:42:20"},{"expression":{"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2706,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"209:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"220:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"209:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2709,"nodeType":"ExpressionStatement","src":"209:12:20"},{"id":2710,"nodeType":"PlaceholderStatement","src":"231:1:20"},{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2711,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"242:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"253:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"242:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2714,"nodeType":"ExpressionStatement","src":"242:12:20"}]},"id":2716,"name":"lock","nameLocation":"140:4:20","nodeType":"ModifierDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[],"src":"144:2:20"},"src":"131:130:20","virtual":false,"visibility":"internal"}],"scope":2718,"src":"72:191:20","usedErrors":[]}],"src":"46:218:20"},"id":20},"contracts/base/Multicall.sol":{"ast":{"absolutePath":"contracts/base/Multicall.sol","exportedSymbols":{"Multicall":[3026]},"id":3027,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2719,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:21"},{"id":2720,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:21"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3026,"linearizedBaseContracts":[3026],"name":"Multicall","nameLocation":"100:9:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Multicall.Call","id":2725,"members":[{"constant":false,"id":2722,"mutability":"mutable","name":"target","nameLocation":"146:6:21","nodeType":"VariableDeclaration","scope":2725,"src":"138:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2721,"name":"address","nodeType":"ElementaryTypeName","src":"138:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"callData","nameLocation":"168:8:21","nodeType":"VariableDeclaration","scope":2725,"src":"162:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2723,"name":"bytes","nodeType":"ElementaryTypeName","src":"162:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"123:4:21","nodeType":"StructDefinition","scope":3026,"src":"116:67:21","visibility":"public"},{"canonicalName":"Multicall.Result","id":2730,"members":[{"constant":false,"id":2727,"mutability":"mutable","name":"success","nameLocation":"217:7:21","nodeType":"VariableDeclaration","scope":2730,"src":"212:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2726,"name":"bool","nodeType":"ElementaryTypeName","src":"212:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2729,"mutability":"mutable","name":"returnData","nameLocation":"240:10:21","nodeType":"VariableDeclaration","scope":2730,"src":"234:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2728,"name":"bytes","nodeType":"ElementaryTypeName","src":"234:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Result","nameLocation":"195:6:21","nodeType":"StructDefinition","scope":3026,"src":"188:69:21","visibility":"public"},{"body":{"id":2795,"nodeType":"Block","src":"382:375:21","statements":[{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2742,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"392:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2743,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"406:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"406:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"392:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"nodeType":"ExpressionStatement","src":"392:26:21"},{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2747,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"428:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2751,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"453:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"453:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"441:11:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2748,"name":"bytes","nodeType":"ElementaryTypeName","src":"445:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2749,"nodeType":"ArrayTypeName","src":"445:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"441:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"428:39:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2755,"nodeType":"ExpressionStatement","src":"428:39:21"},{"body":{"id":2793,"nodeType":"Block","src":"521:230:21","statements":[{"assignments":[2768,2770],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"success","nameLocation":"541:7:21","nodeType":"VariableDeclaration","scope":2793,"src":"536:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2767,"name":"bool","nodeType":"ElementaryTypeName","src":"536:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"ret","nameLocation":"563:3:21","nodeType":"VariableDeclaration","scope":2793,"src":"550:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2769,"name":"bytes","nodeType":"ElementaryTypeName","src":"550:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2781,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":2776,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"609:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2778,"indexExpression":{"id":2777,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"616:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"609:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2725_memory_ptr","typeString":"struct Multicall.Call memory"}},"id":2779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"609:18:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"baseExpression":{"id":2771,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"570:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2773,"indexExpression":{"id":2772,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"577:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"570:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2725_memory_ptr","typeString":"struct Multicall.Call memory"}},"id":2774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"target","nodeType":"MemberAccess","referencedDeclaration":2722,"src":"570:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"570:21:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"570:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"535:106:21"},{"expression":{"arguments":[{"id":2783,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"663:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d756c746963616c6c206167677265676174653a2063616c6c206661696c6564","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"672:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_f00f29c42686fd9baf65b5bd8fa63c642ded98b2f947cb8aeb6a004fb9f654ec","typeString":"literal_string \"Multicall aggregate: call failed\""},"value":"Multicall aggregate: call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f00f29c42686fd9baf65b5bd8fa63c642ded98b2f947cb8aeb6a004fb9f654ec","typeString":"literal_string \"Multicall aggregate: call failed\""}],"id":2782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"655:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"655:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2786,"nodeType":"ExpressionStatement","src":"655:52:21"},{"expression":{"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2787,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"721:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2789,"indexExpression":{"id":2788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"732:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"721:13:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2790,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"737:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"721:19:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2792,"nodeType":"ExpressionStatement","src":"721:19:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"497:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2761,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"501:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"501:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2794,"initializationExpression":{"assignments":[2757],"declarations":[{"constant":false,"id":2757,"mutability":"mutable","name":"i","nameLocation":"490:1:21","nodeType":"VariableDeclaration","scope":2794,"src":"482:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2759,"initialValue":{"hexValue":"30","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"494:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"482:13:21"},"loopExpression":{"expression":{"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"516:3:21","subExpression":{"id":2764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"516:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2766,"nodeType":"ExpressionStatement","src":"516:3:21"},"nodeType":"ForStatement","src":"477:274:21"}]},"functionSelector":"252dba42","id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"aggregate","nameLocation":"272:9:21","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"_calls","nameLocation":"305:6:21","nodeType":"VariableDeclaration","scope":2796,"src":"291:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call[]"},"typeName":{"baseType":{"id":2732,"nodeType":"UserDefinedTypeName","pathNode":{"id":2731,"name":"Call","nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"291:4:21"},"referencedDeclaration":2725,"src":"291:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2725_storage_ptr","typeString":"struct Multicall.Call"}},"id":2733,"nodeType":"ArrayTypeName","src":"291:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_storage_$dyn_storage_ptr","typeString":"struct Multicall.Call[]"}},"visibility":"internal"}],"src":"281:36:21"},"returnParameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"blockNumber","nameLocation":"342:11:21","nodeType":"VariableDeclaration","scope":2796,"src":"334:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"returnData","nameLocation":"370:10:21","nodeType":"VariableDeclaration","scope":2796,"src":"355:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2738,"name":"bytes","nodeType":"ElementaryTypeName","src":"355:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2739,"nodeType":"ArrayTypeName","src":"355:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"333:48:21"},"scope":3026,"src":"263:494:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2821,"nodeType":"Block","src":"976:124:21","statements":[{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2811,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"987:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2812,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"1000:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2813,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"1011:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result memory[] memory"}}],"id":2814,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"986:36:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bytes32_$_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(uint256,bytes32,struct Multicall.Result memory[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"74727565","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1059:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2817,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"1077:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}],"id":2815,"name":"tryBlockAndAggregate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"1025:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$_t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$_t_bytes32_$_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bool,struct Multicall.Call memory[] memory) returns (uint256,bytes32,struct Multicall.Result memory[] memory)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1025:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bytes32_$_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(uint256,bytes32,struct Multicall.Result memory[] memory)"}},"src":"986:107:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2820,"nodeType":"ExpressionStatement","src":"986:107:21"}]},"functionSelector":"c3077fa9","id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"blockAndAggregate","nameLocation":"772:17:21","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"_calls","nameLocation":"813:6:21","nodeType":"VariableDeclaration","scope":2822,"src":"799:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call[]"},"typeName":{"baseType":{"id":2798,"nodeType":"UserDefinedTypeName","pathNode":{"id":2797,"name":"Call","nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"799:4:21"},"referencedDeclaration":2725,"src":"799:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2725_storage_ptr","typeString":"struct Multicall.Call"}},"id":2799,"nodeType":"ArrayTypeName","src":"799:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_storage_$dyn_storage_ptr","typeString":"struct Multicall.Call[]"}},"visibility":"internal"}],"src":"789:36:21"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"blockNumber","nameLocation":"879:11:21","nodeType":"VariableDeclaration","scope":2822,"src":"871:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"blockHash","nameLocation":"912:9:21","nodeType":"VariableDeclaration","scope":2822,"src":"904:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2809,"mutability":"mutable","name":"returnData","nameLocation":"951:10:21","nodeType":"VariableDeclaration","scope":2822,"src":"935:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result[]"},"typeName":{"baseType":{"id":2807,"nodeType":"UserDefinedTypeName","pathNode":{"id":2806,"name":"Result","nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"935:6:21"},"referencedDeclaration":2730,"src":"935:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Result_$2730_storage_ptr","typeString":"struct Multicall.Result"}},"id":2808,"nodeType":"ArrayTypeName","src":"935:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_storage_$dyn_storage_ptr","typeString":"struct Multicall.Result[]"}},"visibility":"internal"}],"src":"857:114:21"},"scope":3026,"src":"763:337:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2835,"nodeType":"Block","src":"1204:52:21","statements":[{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2829,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"1214:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2831,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"1236:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2830,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"1226:9:21","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1226:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1214:35:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2834,"nodeType":"ExpressionStatement","src":"1214:35:21"}]},"functionSelector":"ee82ac5e","id":2836,"implemented":true,"kind":"function","modifiers":[],"name":"getBlockHash","nameLocation":"1115:12:21","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"_blockNumber","nameLocation":"1145:12:21","nodeType":"VariableDeclaration","scope":2836,"src":"1137:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1127:36:21"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"blockHash","nameLocation":"1193:9:21","nodeType":"VariableDeclaration","scope":2836,"src":"1185:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1185:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1184:19:21"},"scope":3026,"src":"1106:150:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2846,"nodeType":"Block","src":"1330:43:21","statements":[{"expression":{"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"1340:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2842,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1354:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"1354:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2845,"nodeType":"ExpressionStatement","src":"1340:26:21"}]},"functionSelector":"42cbb15c","id":2847,"implemented":true,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"1271:14:21","nodeType":"FunctionDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[],"src":"1285:2:21"},"returnParameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"blockNumber","nameLocation":"1317:11:21","nodeType":"VariableDeclaration","scope":2847,"src":"1309:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:21:21"},"scope":3026,"src":"1262:111:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2857,"nodeType":"Block","src":"1453:42:21","statements":[{"expression":{"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2852,"name":"coinbase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1463:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2853,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1474:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"coinbase","nodeType":"MemberAccess","src":"1474:14:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1463:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2856,"nodeType":"ExpressionStatement","src":"1463:25:21"}]},"functionSelector":"a8b0574e","id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBlockCoinbase","nameLocation":"1388:23:21","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[],"src":"1411:2:21"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"coinbase","nameLocation":"1443:8:21","nodeType":"VariableDeclaration","scope":2858,"src":"1435:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"1435:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1434:18:21"},"scope":3026,"src":"1379:116:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2868,"nodeType":"Block","src":"1607:46:21","statements":[{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2863,"name":"difficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"1617:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2864,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1630:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"difficulty","nodeType":"MemberAccess","src":"1630:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1617:29:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ExpressionStatement","src":"1617:29:21"}]},"functionSelector":"72425d9d","id":2869,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBlockDifficulty","nameLocation":"1510:25:21","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[],"src":"1535:2:21"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"difficulty","nameLocation":"1591:10:21","nodeType":"VariableDeclaration","scope":2869,"src":"1583:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1582:20:21"},"scope":3026,"src":"1501:152:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2879,"nodeType":"Block","src":"1733:42:21","statements":[{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2874,"name":"gaslimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1743:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2875,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1754:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"gaslimit","nodeType":"MemberAccess","src":"1754:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1743:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ExpressionStatement","src":"1743:25:21"}]},"functionSelector":"86d516e8","id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBlockGasLimit","nameLocation":"1668:23:21","nodeType":"FunctionDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[],"src":"1691:2:21"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"gaslimit","nameLocation":"1723:8:21","nodeType":"VariableDeclaration","scope":2880,"src":"1715:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:18:21"},"scope":3026,"src":"1659:116:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2890,"nodeType":"Block","src":"1885:44:21","statements":[{"expression":{"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2885,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1895:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2886,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1907:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1907:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1895:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2889,"nodeType":"ExpressionStatement","src":"1895:27:21"}]},"functionSelector":"0f28c97d","id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBlockTimestamp","nameLocation":"1790:24:21","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[],"src":"1814:2:21"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"timestamp","nameLocation":"1870:9:21","nodeType":"VariableDeclaration","scope":2891,"src":"1862:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1862:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1861:19:21"},"scope":3026,"src":"1781:148:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2903,"nodeType":"Block","src":"2025:40:21","statements":[{"expression":{"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2898,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2035:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2899,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2045:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2045:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2035:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2902,"nodeType":"ExpressionStatement","src":"2035:23:21"}]},"functionSelector":"4d2301cc","id":2904,"implemented":true,"kind":"function","modifiers":[],"name":"getEthBalance","nameLocation":"1944:13:21","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"_addr","nameLocation":"1975:5:21","nodeType":"VariableDeclaration","scope":2904,"src":"1967:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"1967:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1957:29:21"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"balance","nameLocation":"2016:7:21","nodeType":"VariableDeclaration","scope":2904,"src":"2008:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:17:21"},"scope":3026,"src":"1935:130:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2918,"nodeType":"Block","src":"2139:56:21","statements":[{"expression":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2909,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2149:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2911,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2171:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2171:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2171:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2910,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"2161:9:21","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2149:39:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2917,"nodeType":"ExpressionStatement","src":"2149:39:21"}]},"functionSelector":"27e86d6e","id":2919,"implemented":true,"kind":"function","modifiers":[],"name":"getLastBlockHash","nameLocation":"2080:16:21","nodeType":"FunctionDefinition","parameters":{"id":2905,"nodeType":"ParameterList","parameters":[],"src":"2096:2:21"},"returnParameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"blockHash","nameLocation":"2128:9:21","nodeType":"VariableDeclaration","scope":2919,"src":"2120:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2120:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2119:19:21"},"scope":3026,"src":"2071:124:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2987,"nodeType":"Block","src":"2333:413:21","statements":[{"expression":{"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2932,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"2343:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2937,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2369:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2369:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2356:12:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Multicall.Result memory[] memory)"},"typeName":{"baseType":{"id":2934,"nodeType":"UserDefinedTypeName","pathNode":{"id":2933,"name":"Result","nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"2360:6:21"},"referencedDeclaration":2730,"src":"2360:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Result_$2730_storage_ptr","typeString":"struct Multicall.Result"}},"id":2935,"nodeType":"ArrayTypeName","src":"2360:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_storage_$dyn_storage_ptr","typeString":"struct Multicall.Result[]"}}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2356:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result memory[] memory"}},"src":"2343:40:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result memory[] memory"}},"id":2941,"nodeType":"ExpressionStatement","src":"2343:40:21"},{"body":{"id":2985,"nodeType":"Block","src":"2437:303:21","statements":[{"assignments":[2954,2956],"declarations":[{"constant":false,"id":2954,"mutability":"mutable","name":"success","nameLocation":"2457:7:21","nodeType":"VariableDeclaration","scope":2985,"src":"2452:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2953,"name":"bool","nodeType":"ElementaryTypeName","src":"2452:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"ret","nameLocation":"2479:3:21","nodeType":"VariableDeclaration","scope":2985,"src":"2466:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2955,"name":"bytes","nodeType":"ElementaryTypeName","src":"2466:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2967,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":2962,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2525:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2964,"indexExpression":{"id":2963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2532:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2525:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2725_memory_ptr","typeString":"struct Multicall.Call memory"}},"id":2965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"2525:18:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"baseExpression":{"id":2957,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2486:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2959,"indexExpression":{"id":2958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2493:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2486:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2725_memory_ptr","typeString":"struct Multicall.Call memory"}},"id":2960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"target","nodeType":"MemberAccess","referencedDeclaration":2722,"src":"2486:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2486:21:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2451:106:21"},{"condition":{"id":2968,"name":"_requireSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2576:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2975,"nodeType":"IfStatement","src":"2572:107:21","trueBody":{"id":2974,"nodeType":"Block","src":"2593:86:21","statements":[{"expression":{"arguments":[{"id":2970,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2619:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d756c746963616c6c32206167677265676174653a2063616c6c206661696c6564","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2628:35:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd97bfad63caef51f3372eed9dcabcf122404ebbb470c4fd9b09fcde78ebd3cf","typeString":"literal_string \"Multicall2 aggregate: call failed\""},"value":"Multicall2 aggregate: call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd97bfad63caef51f3372eed9dcabcf122404ebbb470c4fd9b09fcde78ebd3cf","typeString":"literal_string \"Multicall2 aggregate: call failed\""}],"id":2969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2611:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2611:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2973,"nodeType":"ExpressionStatement","src":"2611:53:21"}]}},{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2976,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"2693:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result memory[] memory"}},"id":2978,"indexExpression":{"id":2977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2704:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2693:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_Result_$2730_memory_ptr","typeString":"struct Multicall.Result memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2980,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2716:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2981,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2725:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2979,"name":"Result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"2709:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Result_$2730_storage_ptr_$","typeString":"type(struct Multicall.Result storage pointer)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2709:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Result_$2730_memory_ptr","typeString":"struct Multicall.Result memory"}},"src":"2693:36:21","typeDescriptions":{"typeIdentifier":"t_struct$_Result_$2730_memory_ptr","typeString":"struct Multicall.Result memory"}},"id":2984,"nodeType":"ExpressionStatement","src":"2693:36:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2413:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2947,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2417:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2413:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2986,"initializationExpression":{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"i","nameLocation":"2406:1:21","nodeType":"VariableDeclaration","scope":2986,"src":"2398:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"2398:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2945,"initialValue":{"hexValue":"30","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2410:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2398:13:21"},"loopExpression":{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2432:3:21","subExpression":{"id":2950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2432:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ExpressionStatement","src":"2432:3:21"},"nodeType":"ForStatement","src":"2393:347:21"}]},"functionSelector":"bce38bd7","id":2988,"implemented":true,"kind":"function","modifiers":[],"name":"tryAggregate","nameLocation":"2210:12:21","nodeType":"FunctionDefinition","parameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"_requireSuccess","nameLocation":"2237:15:21","nodeType":"VariableDeclaration","scope":2988,"src":"2232:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2920,"name":"bool","nodeType":"ElementaryTypeName","src":"2232:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"_calls","nameLocation":"2276:6:21","nodeType":"VariableDeclaration","scope":2988,"src":"2262:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call[]"},"typeName":{"baseType":{"id":2923,"nodeType":"UserDefinedTypeName","pathNode":{"id":2922,"name":"Call","nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"2262:4:21"},"referencedDeclaration":2725,"src":"2262:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2725_storage_ptr","typeString":"struct Multicall.Call"}},"id":2924,"nodeType":"ArrayTypeName","src":"2262:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_storage_$dyn_storage_ptr","typeString":"struct Multicall.Call[]"}},"visibility":"internal"}],"src":"2222:66:21"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"returnData","nameLocation":"2321:10:21","nodeType":"VariableDeclaration","scope":2988,"src":"2305:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result[]"},"typeName":{"baseType":{"id":2928,"nodeType":"UserDefinedTypeName","pathNode":{"id":2927,"name":"Result","nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"2305:6:21"},"referencedDeclaration":2730,"src":"2305:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Result_$2730_storage_ptr","typeString":"struct Multicall.Result"}},"id":2929,"nodeType":"ArrayTypeName","src":"2305:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_storage_$dyn_storage_ptr","typeString":"struct Multicall.Result[]"}},"visibility":"internal"}],"src":"2304:28:21"},"scope":3026,"src":"2201:545:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3024,"nodeType":"Block","src":"2998:148:21","statements":[{"expression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3008:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3006,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3022:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3022:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3008:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3009,"nodeType":"ExpressionStatement","src":"3008:26:21"},{"expression":{"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3010,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"3044:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3012,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3066:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3066:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3011,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"3056:9:21","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3056:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3044:35:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3016,"nodeType":"ExpressionStatement","src":"3044:35:21"},{"expression":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3017,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3089:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3019,"name":"_requireSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"3115:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3020,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"3132:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call memory[] memory"}],"id":3018,"name":"tryAggregate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"3102:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$_t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bool,struct Multicall.Call memory[] memory) returns (struct Multicall.Result memory[] memory)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3102:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result memory[] memory"}},"src":"3089:50:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result memory[] memory"}},"id":3023,"nodeType":"ExpressionStatement","src":"3089:50:21"}]},"functionSelector":"399542e9","id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"tryBlockAndAggregate","nameLocation":"2761:20:21","nodeType":"FunctionDefinition","parameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"_requireSuccess","nameLocation":"2796:15:21","nodeType":"VariableDeclaration","scope":3025,"src":"2791:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2989,"name":"bool","nodeType":"ElementaryTypeName","src":"2791:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2994,"mutability":"mutable","name":"_calls","nameLocation":"2835:6:21","nodeType":"VariableDeclaration","scope":3025,"src":"2821:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Call[]"},"typeName":{"baseType":{"id":2992,"nodeType":"UserDefinedTypeName","pathNode":{"id":2991,"name":"Call","nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"2821:4:21"},"referencedDeclaration":2725,"src":"2821:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2725_storage_ptr","typeString":"struct Multicall.Call"}},"id":2993,"nodeType":"ArrayTypeName","src":"2821:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2725_storage_$dyn_storage_ptr","typeString":"struct Multicall.Call[]"}},"visibility":"internal"}],"src":"2781:66:21"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"blockNumber","nameLocation":"2901:11:21","nodeType":"VariableDeclaration","scope":3025,"src":"2893:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2893:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"blockHash","nameLocation":"2934:9:21","nodeType":"VariableDeclaration","scope":3025,"src":"2926:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2926:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"returnData","nameLocation":"2973:10:21","nodeType":"VariableDeclaration","scope":3025,"src":"2957:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr","typeString":"struct Multicall.Result[]"},"typeName":{"baseType":{"id":3001,"nodeType":"UserDefinedTypeName","pathNode":{"id":3000,"name":"Result","nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"2957:6:21"},"referencedDeclaration":2730,"src":"2957:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Result_$2730_storage_ptr","typeString":"struct Multicall.Result"}},"id":3002,"nodeType":"ArrayTypeName","src":"2957:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Result_$2730_storage_$dyn_storage_ptr","typeString":"struct Multicall.Result[]"}},"visibility":"internal"}],"src":"2879:114:21"},"scope":3026,"src":"2752:394:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3027,"src":"91:3057:21","usedErrors":[]}],"src":"45:3104:21"},"id":21},"contracts/base/Owned.sol":{"ast":{"absolutePath":"contracts/base/Owned.sol","exportedSymbols":{"Owned":[3107]},"id":3108,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3028,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"46:24:22"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3107,"linearizedBaseContracts":[3107],"name":"Owned","nameLocation":"81:5:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":3030,"mutability":"mutable","name":"owner","nameLocation":"108:5:22","nodeType":"VariableDeclaration","scope":3107,"src":"93:20:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"93:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"d4ee1d90","id":3032,"mutability":"mutable","name":"newOwner","nameLocation":"134:8:22","nodeType":"VariableDeclaration","scope":3107,"src":"119:23:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"119:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"id":3038,"name":"OwnerUpdate","nameLocation":"155:11:22","nodeType":"EventDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"indexed":true,"mutability":"mutable","name":"_prevOwner","nameLocation":"183:10:22","nodeType":"VariableDeclaration","scope":3038,"src":"167:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"167:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3036,"indexed":true,"mutability":"mutable","name":"_newOwner","nameLocation":"211:9:22","nodeType":"VariableDeclaration","scope":3038,"src":"195:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"195:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"166:55:22"},"src":"149:73:22"},{"body":{"id":3047,"nodeType":"Block","src":"289:35:22","statements":[{"expression":{"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3042,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"299:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3043,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"307:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"307:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"299:18:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3046,"nodeType":"ExpressionStatement","src":"299:18:22"}]},"documentation":{"id":3039,"nodeType":"StructuredDocumentation","src":"228:35:22","text":"@dev constructor"},"id":3048,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[],"src":"279:2:22"},"returnParameters":{"id":3041,"nodeType":"ParameterList","parameters":[],"src":"289:0:22"},"scope":3107,"src":"268:56:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3058,"nodeType":"Block","src":"393:56:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3051,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"411:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"411:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3053,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"425:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"411:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"403:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"403:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3056,"nodeType":"ExpressionStatement","src":"403:28:22"},{"id":3057,"nodeType":"PlaceholderStatement","src":"441:1:22"}]},"id":3059,"name":"ownerOnly","nameLocation":"381:9:22","nodeType":"ModifierDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[],"src":"390:2:22"},"src":"372:77:22","virtual":false,"visibility":"internal"},{"body":{"id":3077,"nodeType":"Block","src":"745:74:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"763:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3069,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"776:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"763:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"755:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"755:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3072,"nodeType":"ExpressionStatement","src":"755:27:22"},{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3073,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"792:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3074,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"803:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"792:20:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3076,"nodeType":"ExpressionStatement","src":"792:20:22"}]},"documentation":{"id":3060,"nodeType":"StructuredDocumentation","src":"455:220:22","text":"@dev allows transferring the contract ownership\nthe new owner still needs to accept the transfer\ncan only be called by the contract owner\n@param _newOwner    new contract owner"},"functionSelector":"f2fde38b","id":3078,"implemented":true,"kind":"function","modifiers":[{"id":3065,"kind":"modifierInvocation","modifierName":{"id":3064,"name":"ownerOnly","nodeType":"IdentifierPath","referencedDeclaration":3059,"src":"735:9:22"},"nodeType":"ModifierInvocation","src":"735:9:22"}],"name":"transferOwnership","nameLocation":"689:17:22","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"_newOwner","nameLocation":"715:9:22","nodeType":"VariableDeclaration","scope":3078,"src":"707:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3061,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"706:19:22"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[],"src":"745:0:22"},"scope":3107,"src":"680:139:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3105,"nodeType":"Block","src":"941:148:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"959:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"959:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3085,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"973:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"959:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"951:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"951:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3088,"nodeType":"ExpressionStatement","src":"951:31:22"},{"eventCall":{"arguments":[{"id":3090,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"1009:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3091,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"1016:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3089,"name":"OwnerUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"997:11:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"997:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3093,"nodeType":"EmitStatement","src":"992:33:22"},{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3094,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"1035:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3095,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"1043:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1035:16:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3097,"nodeType":"ExpressionStatement","src":"1035:16:22"},{"expression":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3098,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"1061:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1080:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1072:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:22","typeDescriptions":{}}},"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1072:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1061:21:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3104,"nodeType":"ExpressionStatement","src":"1061:21:22"}]},"documentation":{"id":3079,"nodeType":"StructuredDocumentation","src":"825:75:22","text":"@dev used by a new owner to accept an ownership transfer"},"functionSelector":"79ba5097","id":3106,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"914:15:22","nodeType":"FunctionDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[],"src":"929:2:22"},"returnParameters":{"id":3081,"nodeType":"ParameterList","parameters":[],"src":"941:0:22"},"scope":3107,"src":"905:184:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3108,"src":"72:1019:22","usedErrors":[]}],"src":"46:1046:22"},"id":22},"contracts/base/Utils.sol":{"ast":{"absolutePath":"contracts/base/Utils.sol","exportedSymbols":{"Utils":[3157]},"id":3158,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3109,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"46:24:23"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3157,"linearizedBaseContracts":[3157],"name":"Utils","nameLocation":"81:5:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":3113,"nodeType":"Block","src":"149:2:23","statements":[]},"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"93:30:23","text":"constructor"},"id":3114,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[],"src":"139:2:23"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[],"src":"149:0:23"},"scope":3157,"src":"128:23:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3125,"nodeType":"Block","src":"251:48:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3119,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"269:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"279:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"269:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"261:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"261:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3123,"nodeType":"ExpressionStatement","src":"261:20:23"},{"id":3124,"nodeType":"PlaceholderStatement","src":"291:1:23"}]},"id":3126,"name":"greaterThanZero","nameLocation":"218:15:23","nodeType":"ModifierDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"_amount","nameLocation":"242:7:23","nodeType":"VariableDeclaration","scope":3126,"src":"234:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"234:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"233:17:23"},"src":"209:90:23","virtual":false,"visibility":"internal"},{"body":{"id":3140,"nodeType":"Block","src":"416:59:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"434:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"454:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"446:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:23","typeDescriptions":{}}},"id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"446:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"434:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3130,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"426:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"426:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3138,"nodeType":"ExpressionStatement","src":"426:31:23"},{"id":3139,"nodeType":"PlaceholderStatement","src":"467:1:23"}]},"id":3141,"name":"validAddress","nameLocation":"385:12:23","nodeType":"ModifierDefinition","parameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"_address","nameLocation":"406:8:23","nodeType":"VariableDeclaration","scope":3141,"src":"398:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3127,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"397:18:23"},"src":"376:99:23","virtual":false,"visibility":"internal"},{"body":{"id":3155,"nodeType":"Block","src":"589:62:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"607:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3149,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"627:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_Utils_$3157","typeString":"contract Utils"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Utils_$3157","typeString":"contract Utils"}],"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"619:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3147,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:23","typeDescriptions":{}}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"619:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"607:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"599:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"599:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3153,"nodeType":"ExpressionStatement","src":"599:34:23"},{"id":3154,"nodeType":"PlaceholderStatement","src":"643:1:23"}]},"id":3156,"name":"notThis","nameLocation":"563:7:23","nodeType":"ModifierDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"_address","nameLocation":"579:8:23","nodeType":"VariableDeclaration","scope":3156,"src":"571:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"571:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"570:18:23"},"src":"554:97:23","virtual":false,"visibility":"internal"}],"scope":3158,"src":"72:581:23","usedErrors":[]}],"src":"46:608:23"},"id":23},"contracts/interfaces/IChainlinkPriceFeed.sol":{"ast":{"absolutePath":"contracts/interfaces/IChainlinkPriceFeed.sol","exportedSymbols":{"IChainlinkPriceFeed":[3165]},"id":3166,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3159,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:24"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3165,"linearizedBaseContracts":[3165],"name":"IChainlinkPriceFeed","nameLocation":"81:19:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"50d25bcd","id":3164,"implemented":false,"kind":"function","modifiers":[],"name":"latestAnswer","nameLocation":"116:12:24","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[],"src":"128:2:24"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"154:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"154:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"153:9:24"},"scope":3165,"src":"107:56:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3166,"src":"71:94:24","usedErrors":[]}],"src":"45:121:24"},"id":24},"contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[3250]},"id":3251,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3167,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:25"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3250,"linearizedBaseContracts":[3250],"name":"IERC20","nameLocation":"81:6:25","nodeType":"ContractDefinition","nodes":[{"functionSelector":"06fdde03","id":3172,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"103:4:25","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[],"src":"107:2:25"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3172,"src":"133:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3169,"name":"string","nodeType":"ElementaryTypeName","src":"133:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"132:15:25"},"scope":3250,"src":"94:54:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":3177,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"163:6:25","nodeType":"FunctionDefinition","parameters":{"id":3173,"nodeType":"ParameterList","parameters":[],"src":"169:2:25"},"returnParameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"195:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3174,"name":"string","nodeType":"ElementaryTypeName","src":"195:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"194:15:25"},"scope":3250,"src":"154:56:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":3182,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"225:8:25","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[],"src":"233:2:25"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"259:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3179,"name":"uint8","nodeType":"ElementaryTypeName","src":"259:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"258:7:25"},"scope":3250,"src":"216:50:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":3187,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"281:11:25","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"292:2:25"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"318:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:9:25"},"scope":3250,"src":"272:55:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":3194,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"342:9:25","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3194,"src":"352:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"352:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"351:9:25"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3194,"src":"384:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"384:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"383:9:25"},"scope":3250,"src":"333:60:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":3203,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"408:9:25","nodeType":"FunctionDefinition","parameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"_owner","nameLocation":"435:6:25","nodeType":"VariableDeclaration","scope":3203,"src":"427:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"_spender","nameLocation":"459:8:25","nodeType":"VariableDeclaration","scope":3203,"src":"451:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3197,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"417:56:25"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3203,"src":"497:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:25"},"scope":3250,"src":"399:107:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":3212,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"521:7:25","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"_spender","nameLocation":"537:8:25","nodeType":"VariableDeclaration","scope":3212,"src":"529:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"_value","nameLocation":"555:6:25","nodeType":"VariableDeclaration","scope":3212,"src":"547:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:34:25"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3212,"src":"581:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3209,"name":"bool","nodeType":"ElementaryTypeName","src":"581:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"580:6:25"},"scope":3250,"src":"512:75:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":3221,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"602:8:25","nodeType":"FunctionDefinition","parameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"_to","nameLocation":"619:3:25","nodeType":"VariableDeclaration","scope":3221,"src":"611:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"_value","nameLocation":"632:6:25","nodeType":"VariableDeclaration","scope":3221,"src":"624:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:29:25"},"returnParameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3221,"src":"658:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3218,"name":"bool","nodeType":"ElementaryTypeName","src":"658:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"657:6:25"},"scope":3250,"src":"593:71:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":3232,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"679:12:25","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"_from","nameLocation":"709:5:25","nodeType":"VariableDeclaration","scope":3232,"src":"701:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3222,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"_to","nameLocation":"732:3:25","nodeType":"VariableDeclaration","scope":3232,"src":"724:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"_value","nameLocation":"753:6:25","nodeType":"VariableDeclaration","scope":3232,"src":"745:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"691:74:25"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3232,"src":"784:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3229,"name":"bool","nodeType":"ElementaryTypeName","src":"784:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"783:6:25"},"scope":3250,"src":"670:120:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":3249,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"805:6:25","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"_owner","nameLocation":"829:6:25","nodeType":"VariableDeclaration","scope":3249,"src":"821:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3233,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"_spender","nameLocation":"853:8:25","nodeType":"VariableDeclaration","scope":3249,"src":"845:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3235,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"_value","nameLocation":"879:6:25","nodeType":"VariableDeclaration","scope":3249,"src":"871:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"_deadline","nameLocation":"903:9:25","nodeType":"VariableDeclaration","scope":3249,"src":"895:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3242,"mutability":"mutable","name":"_v","nameLocation":"928:2:25","nodeType":"VariableDeclaration","scope":3249,"src":"922:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3241,"name":"uint8","nodeType":"ElementaryTypeName","src":"922:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3244,"mutability":"mutable","name":"_r","nameLocation":"948:2:25","nodeType":"VariableDeclaration","scope":3249,"src":"940:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"940:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"_s","nameLocation":"968:2:25","nodeType":"VariableDeclaration","scope":3249,"src":"960:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"960:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"811:165:25"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[],"src":"985:0:25"},"scope":3250,"src":"796:190:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3251,"src":"71:917:25","usedErrors":[]}],"src":"45:944:25"},"id":25},"contracts/interfaces/IGMXPriceFeed.sol":{"ast":{"absolutePath":"contracts/interfaces/IGMXPriceFeed.sol","exportedSymbols":{"IGMXPriceFeed":[3260]},"id":3261,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3252,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:26"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3260,"linearizedBaseContracts":[3260],"name":"IGMXPriceFeed","nameLocation":"81:13:26","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cfed246b","id":3259,"implemented":false,"kind":"function","modifiers":[],"name":"prices","nameLocation":"110:6:26","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3259,"src":"117:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3253,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116:9:26"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3259,"src":"149:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"149:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"148:9:26"},"scope":3260,"src":"101:57:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3261,"src":"71:89:26","usedErrors":[]}],"src":"45:116:26"},"id":26},"contracts/interfaces/IPriceFeed.sol":{"ast":{"absolutePath":"contracts/interfaces/IPriceFeed.sol","exportedSymbols":{"IPriceFeed":[3286]},"id":3287,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3262,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:27"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3286,"linearizedBaseContracts":[3286],"name":"IPriceFeed","nameLocation":"81:10:27","nodeType":"ContractDefinition","nodes":[{"functionSelector":"aaf5eb68","id":3267,"implemented":false,"kind":"function","modifiers":[],"name":"PRECISION","nameLocation":"107:9:27","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[],"src":"116:2:27"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3267,"src":"142:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"142:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"141:9:27"},"scope":3286,"src":"98:53:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1a102f67","id":3276,"implemented":false,"kind":"function","modifiers":[],"name":"getHighestPrice","nameLocation":"170:15:27","nodeType":"FunctionDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"_baseToken","nameLocation":"203:10:27","nodeType":"VariableDeclaration","scope":3276,"src":"195:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3268,"name":"address","nodeType":"ElementaryTypeName","src":"195:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"_quoteToken","nameLocation":"231:11:27","nodeType":"VariableDeclaration","scope":3276,"src":"223:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3270,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"185:63:27"},"returnParameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3276,"src":"272:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"271:9:27"},"scope":3286,"src":"161:120:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e6c14362","id":3285,"implemented":false,"kind":"function","modifiers":[],"name":"getLowestPrice","nameLocation":"296:14:27","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"_baseToken","nameLocation":"328:10:27","nodeType":"VariableDeclaration","scope":3285,"src":"320:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3277,"name":"address","nodeType":"ElementaryTypeName","src":"320:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"_quoteToken","nameLocation":"356:11:27","nodeType":"VariableDeclaration","scope":3285,"src":"348:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"310:63:27"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3285,"src":"397:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"396:9:27"},"scope":3286,"src":"287:119:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3287,"src":"71:337:27","usedErrors":[]}],"src":"45:364:27"},"id":27},"contracts/interfaces/IPriceFeedIntegration.sol":{"ast":{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","exportedSymbols":{"IPriceFeedIntegration":[3303]},"id":3304,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3288,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:28"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3303,"linearizedBaseContracts":[3303],"name":"IPriceFeedIntegration","nameLocation":"81:21:28","nodeType":"ContractDefinition","nodes":[{"functionSelector":"aaf5eb68","id":3293,"implemented":false,"kind":"function","modifiers":[],"name":"PRECISION","nameLocation":"118:9:28","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[],"src":"127:2:28"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3293,"src":"153:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"152:9:28"},"scope":3303,"src":"109:53:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ac41865a","id":3302,"implemented":false,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"181:8:28","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"_baseToken","nameLocation":"207:10:28","nodeType":"VariableDeclaration","scope":3302,"src":"199:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3294,"name":"address","nodeType":"ElementaryTypeName","src":"199:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"_quoteToken","nameLocation":"235:11:28","nodeType":"VariableDeclaration","scope":3302,"src":"227:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3296,"name":"address","nodeType":"ElementaryTypeName","src":"227:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"189:63:28"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"276:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"276:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"275:9:28"},"scope":3303,"src":"172:113:28","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3304,"src":"71:216:28","usedErrors":[]}],"src":"45:243:28"},"id":28},"contracts/interfaces/IWETH.sol":{"ast":{"absolutePath":"contracts/interfaces/IWETH.sol","exportedSymbols":{"IWETH":[3323]},"id":3324,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3305,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"46:24:29"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3323,"linearizedBaseContracts":[3323],"name":"IWETH","nameLocation":"84:5:29","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":3308,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"106:7:29","nodeType":"FunctionDefinition","parameters":{"id":3306,"nodeType":"ParameterList","parameters":[],"src":"113:2:29"},"returnParameters":{"id":3307,"nodeType":"ParameterList","parameters":[],"src":"132:0:29"},"scope":3323,"src":"97:36:29","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":3317,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"150:8:29","nodeType":"FunctionDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"_to","nameLocation":"167:3:29","nodeType":"VariableDeclaration","scope":3317,"src":"159:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3309,"name":"address","nodeType":"ElementaryTypeName","src":"159:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3312,"mutability":"mutable","name":"_value","nameLocation":"180:6:29","nodeType":"VariableDeclaration","scope":3317,"src":"172:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"172:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"158:29:29"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"206:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3314,"name":"bool","nodeType":"ElementaryTypeName","src":"206:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"205:6:29"},"scope":3323,"src":"141:71:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":3322,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"229:8:29","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3322,"src":"238:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"238:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"237:9:29"},"returnParameters":{"id":3321,"nodeType":"ParameterList","parameters":[],"src":"255:0:29"},"scope":3323,"src":"220:36:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3324,"src":"74:185:29","usedErrors":[]}],"src":"46:215:29"},"id":29},"contracts/libraries/ChainId.sol":{"ast":{"absolutePath":"contracts/libraries/ChainId.sol","exportedSymbols":{"ChainId":[3335]},"id":3336,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3325,"literals":["solidity",">=","0.7",".0"],"nodeType":"PragmaDirective","src":"45:24:30"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"71:53:30","text":"@title Function for getting the current chain ID"},"fullyImplemented":true,"id":3335,"linearizedBaseContracts":[3335],"name":"ChainId","nameLocation":"132:7:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":3333,"nodeType":"Block","src":"285:69:30","statements":[{"AST":{"nodeType":"YulBlock","src":"304:44:30","statements":[{"nodeType":"YulAssignment","src":"318:20:30","value":{"arguments":[],"functionName":{"name":"chainid","nodeType":"YulIdentifier","src":"329:7:30"},"nodeType":"YulFunctionCall","src":"329:9:30"},"variableNames":[{"name":"chainId","nodeType":"YulIdentifier","src":"318:7:30"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3330,"isOffset":false,"isSlot":false,"src":"318:7:30","valueSize":1}],"id":3332,"nodeType":"InlineAssembly","src":"295:53:30"}]},"documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"146:79:30","text":"@dev Gets the current chain ID\n @return chainId The current chain ID"},"id":3334,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"239:3:30","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[],"src":"242:2:30"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"chainId","nameLocation":"276:7:30","nodeType":"VariableDeclaration","scope":3334,"src":"268:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"268:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"267:17:30"},"scope":3335,"src":"230:124:30","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3336,"src":"124:232:30","usedErrors":[]}],"src":"45:312:30"},"id":30},"contracts/libraries/LowGasSafeMath.sol":{"ast":{"absolutePath":"contracts/libraries/LowGasSafeMath.sol","exportedSymbols":{"LowGasSafeMath":[3488]},"id":3489,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3337,"literals":["solidity",">=","0.7",".0"],"nodeType":"PragmaDirective","src":"45:24:31"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3338,"nodeType":"StructuredDocumentation","src":"71:178:31","text":"@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"},"fullyImplemented":true,"id":3488,"linearizedBaseContracts":[3488],"name":"LowGasSafeMath","nameLocation":"257:14:31","nodeType":"ContractDefinition","nodes":[{"body":{"id":3359,"nodeType":"Block","src":"504:42:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3349,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"523:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3350,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"527:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3351,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"531:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"527:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"523:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"522:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3355,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"537:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"522:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"514:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"514:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3358,"nodeType":"ExpressionStatement","src":"514:25:31"}]},"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"278:152:31","text":"@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"},"id":3360,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"444:3:31","nodeType":"FunctionDefinition","parameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"x","nameLocation":"456:1:31","nodeType":"VariableDeclaration","scope":3360,"src":"448:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3343,"mutability":"mutable","name":"y","nameLocation":"467:1:31","nodeType":"VariableDeclaration","scope":3360,"src":"459:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"447:22:31"},"returnParameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"z","nameLocation":"501:1:31","nodeType":"VariableDeclaration","scope":3360,"src":"493:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"493:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"492:11:31"},"scope":3488,"src":"435:111:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3381,"nodeType":"Block","src":"779:42:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3371,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"798:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3372,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"802:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3373,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"806:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"802:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"798:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"797:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3377,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"812:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"797:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"789:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"789:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3380,"nodeType":"ExpressionStatement","src":"789:25:31"}]},"documentation":{"id":3361,"nodeType":"StructuredDocumentation","src":"552:153:31","text":"@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"},"id":3382,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"719:3:31","nodeType":"FunctionDefinition","parameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"x","nameLocation":"731:1:31","nodeType":"VariableDeclaration","scope":3382,"src":"723:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"y","nameLocation":"742:1:31","nodeType":"VariableDeclaration","scope":3382,"src":"734:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"722:22:31"},"returnParameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"z","nameLocation":"776:1:31","nodeType":"VariableDeclaration","scope":3382,"src":"768:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:11:31"},"scope":3488,"src":"710:111:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"1055:56:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"1073:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1078:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1073:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3396,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"1084:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3397,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"1088:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3398,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"1092:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1088:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1084:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1083:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3402,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"1097:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1083:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3404,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"1102:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1083:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1073:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1065:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3408,"nodeType":"ExpressionStatement","src":"1065:39:31"}]},"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"827:154:31","text":"@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"995:3:31","nodeType":"FunctionDefinition","parameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"x","nameLocation":"1007:1:31","nodeType":"VariableDeclaration","scope":3410,"src":"999:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"y","nameLocation":"1018:1:31","nodeType":"VariableDeclaration","scope":3410,"src":"1010:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"998:22:31"},"returnParameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"z","nameLocation":"1052:1:31","nodeType":"VariableDeclaration","scope":3410,"src":"1044:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:11:31"},"scope":3488,"src":"986:125:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3432,"nodeType":"Block","src":"1340:51:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"1358:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1363:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1358:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1350:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3425,"nodeType":"ExpressionStatement","src":"1350:15:31"},{"expression":{"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3426,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"1375:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3427,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"1379:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3428,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"1383:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1379:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3431,"nodeType":"ExpressionStatement","src":"1375:9:31"}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"1117:149:31","text":"@notice Returns x / y, reverts if y == 0\n @param x The numerator\n @param y The denominator\n @return z The product of x and y"},"id":3433,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"1280:3:31","nodeType":"FunctionDefinition","parameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"x","nameLocation":"1292:1:31","nodeType":"VariableDeclaration","scope":3433,"src":"1284:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"y","nameLocation":"1303:1:31","nodeType":"VariableDeclaration","scope":3433,"src":"1295:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1295:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1283:22:31"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"z","nameLocation":"1337:1:31","nodeType":"VariableDeclaration","scope":3433,"src":"1329:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1329:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1328:11:31"},"scope":3488,"src":"1271:120:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3459,"nodeType":"Block","src":"1622:54:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3444,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"1641:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3445,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"1645:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3446,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"1649:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1645:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1641:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1640:11:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3450,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"1655:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1640:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3452,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"1661:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1666:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1661:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1660:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1640:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1632:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1632:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3458,"nodeType":"ExpressionStatement","src":"1632:37:31"}]},"documentation":{"id":3434,"nodeType":"StructuredDocumentation","src":"1397:154:31","text":"@notice Returns x + y, reverts if overflows or underflows\n @param x The augend\n @param y The addend\n @return z The sum of x and y"},"id":3460,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"1565:3:31","nodeType":"FunctionDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"x","nameLocation":"1576:1:31","nodeType":"VariableDeclaration","scope":3460,"src":"1569:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3435,"name":"int256","nodeType":"ElementaryTypeName","src":"1569:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"y","nameLocation":"1586:1:31","nodeType":"VariableDeclaration","scope":3460,"src":"1579:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3437,"name":"int256","nodeType":"ElementaryTypeName","src":"1579:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1568:20:31"},"returnParameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"z","nameLocation":"1619:1:31","nodeType":"VariableDeclaration","scope":3460,"src":"1612:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3440,"name":"int256","nodeType":"ElementaryTypeName","src":"1612:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1611:10:31"},"scope":3488,"src":"1556:120:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3486,"nodeType":"Block","src":"1919:54:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3471,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"1938:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"1942:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3473,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"1946:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1942:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1938:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1937:11:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3477,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"1952:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1937:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"1958:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1958:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1957:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1937:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1929:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3485,"nodeType":"ExpressionStatement","src":"1929:37:31"}]},"documentation":{"id":3461,"nodeType":"StructuredDocumentation","src":"1682:166:31","text":"@notice Returns x - y, reverts if overflows or underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"},"id":3487,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1862:3:31","nodeType":"FunctionDefinition","parameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"x","nameLocation":"1873:1:31","nodeType":"VariableDeclaration","scope":3487,"src":"1866:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3462,"name":"int256","nodeType":"ElementaryTypeName","src":"1866:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3465,"mutability":"mutable","name":"y","nameLocation":"1883:1:31","nodeType":"VariableDeclaration","scope":3487,"src":"1876:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3464,"name":"int256","nodeType":"ElementaryTypeName","src":"1876:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1865:20:31"},"returnParameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"z","nameLocation":"1916:1:31","nodeType":"VariableDeclaration","scope":3487,"src":"1909:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3467,"name":"int256","nodeType":"ElementaryTypeName","src":"1909:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1908:10:31"},"scope":3488,"src":"1853:120:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3489,"src":"249:1726:31","usedErrors":[]}],"src":"45:1930:31"},"id":31},"contracts/libraries/Math.sol":{"ast":{"absolutePath":"contracts/libraries/Math.sol","exportedSymbols":{"Math":[3564]},"id":3565,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3490,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:32"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3564,"linearizedBaseContracts":[3564],"name":"Math","nameLocation":"132:4:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":3508,"nodeType":"Block","src":"205:38:32","statements":[{"expression":{"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3499,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"215:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"219:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3501,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"224:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"219:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3504,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"234:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"219:17:32","trueExpression":{"id":3503,"name":"_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"229:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"215:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3507,"nodeType":"ExpressionStatement","src":"215:21:32"}]},"id":3509,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"152:3:32","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"_x","nameLocation":"161:2:32","nodeType":"VariableDeclaration","scope":3509,"src":"156:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint","nodeType":"ElementaryTypeName","src":"156:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"_y","nameLocation":"170:2:32","nodeType":"VariableDeclaration","scope":3509,"src":"165:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint","nodeType":"ElementaryTypeName","src":"165:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"155:18:32"},"returnParameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"z","nameLocation":"202:1:32","nodeType":"VariableDeclaration","scope":3509,"src":"197:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint","nodeType":"ElementaryTypeName","src":"197:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"196:8:32"},"scope":3564,"src":"143:100:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3562,"nodeType":"Block","src":"412:244:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"426:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"33","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"431:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"426:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"611:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"617:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"611:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3560,"nodeType":"IfStatement","src":"607:43:32","trueBody":{"id":3559,"nodeType":"Block","src":"620:30:32","statements":[{"expression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3555,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"634:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"638:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"634:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3558,"nodeType":"ExpressionStatement","src":"634:5:32"}]}},"id":3561,"nodeType":"IfStatement","src":"422:228:32","trueBody":{"id":3551,"nodeType":"Block","src":"434:167:32","statements":[{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3519,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"448:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3520,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"452:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"448:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3522,"nodeType":"ExpressionStatement","src":"448:6:32"},{"assignments":[3524],"declarations":[{"constant":false,"id":3524,"mutability":"mutable","name":"x","nameLocation":"473:1:32","nodeType":"VariableDeclaration","scope":3551,"src":"468:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint","nodeType":"ElementaryTypeName","src":"468:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3530,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"477:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"482:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"477:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"486:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"477:10:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"468:19:32"},{"body":{"id":3549,"nodeType":"Block","src":"515:76:32","statements":[{"expression":{"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3534,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"533:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3535,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"537:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"533:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3537,"nodeType":"ExpressionStatement","src":"533:5:32"},{"expression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3538,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"556:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"561:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3540,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"566:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"561:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3542,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"570:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"561:10:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"560:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"575:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"560:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"556:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3548,"nodeType":"ExpressionStatement","src":"556:20:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"508:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3532,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"512:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3550,"nodeType":"WhileStatement","src":"501:90:32"}]}}]},"id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"367:4:32","nodeType":"FunctionDefinition","parameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"_y","nameLocation":"377:2:32","nodeType":"VariableDeclaration","scope":3563,"src":"372:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint","nodeType":"ElementaryTypeName","src":"372:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"371:9:32"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"z","nameLocation":"409:1:32","nodeType":"VariableDeclaration","scope":3563,"src":"404:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint","nodeType":"ElementaryTypeName","src":"404:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:8:32"},"scope":3564,"src":"358:298:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3565,"src":"124:534:32","usedErrors":[]}],"src":"45:614:32"},"id":32},"contracts/libraries/PoolAddress.sol":{"ast":{"absolutePath":"contracts/libraries/PoolAddress.sol","exportedSymbols":{"PoolAddress":[3625]},"id":3626,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3566,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:33"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"71:89:33","text":"@title Provides functions for deriving a pool address from the pool deployer, tokens"},"fullyImplemented":true,"id":3625,"linearizedBaseContracts":[3625],"name":"PoolAddress","nameLocation":"168:11:33","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3570,"mutability":"constant","name":"POOL_INIT_CODE_HASH","nameLocation":"212:19:33","nodeType":"VariableDeclaration","scope":3625,"src":"186:122:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"186:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835643530343263366631386664646664313135323538363932666431373931626430303161633834383534666630616530656332376362663263326134306161","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242:66:33","typeDescriptions":{"typeIdentifier":"t_rational_42206903562193818940008222040791158995996029165915674306550147650191343894698_by_1","typeString":"int_const 4220...(69 digits omitted)...4698"},"value":"0x5d5042c6f18fddfd115258692fd1791bd001ac84854ff0ae0ec27cbf2c2a40aa"},"visibility":"internal"},{"canonicalName":"PoolAddress.PoolKey","id":3573,"members":[{"constant":false,"id":3572,"mutability":"mutable","name":"token","nameLocation":"396:5:33","nodeType":"VariableDeclaration","scope":3573,"src":"388:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3571,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"PoolKey","nameLocation":"370:7:33","nodeType":"StructDefinition","scope":3625,"src":"363:45:33","visibility":"public"},{"body":{"id":3585,"nodeType":"Block","src":"503:48:33","statements":[{"expression":{"arguments":[{"id":3582,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"536:6:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3581,"name":"PoolKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"520:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolKey_$3573_storage_ptr_$","typeString":"type(struct PoolAddress.PoolKey storage pointer)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["token"],"nodeType":"FunctionCall","src":"520:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$3573_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"functionReturnParameters":3580,"id":3584,"nodeType":"Return","src":"513:31:33"}]},"id":3586,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolKey","nameLocation":"423:10:33","nodeType":"FunctionDefinition","parameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"_token","nameLocation":"451:6:33","nodeType":"VariableDeclaration","scope":3586,"src":"443:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3574,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"433:30:33"},"returnParameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3586,"src":"487:14:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$3573_memory_ptr","typeString":"struct PoolAddress.PoolKey"},"typeName":{"id":3578,"nodeType":"UserDefinedTypeName","pathNode":{"id":3577,"name":"PoolKey","nodeType":"IdentifierPath","referencedDeclaration":3573,"src":"487:7:33"},"referencedDeclaration":3573,"src":"487:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$3573_storage_ptr","typeString":"struct PoolAddress.PoolKey"}},"visibility":"internal"}],"src":"486:16:33"},"scope":3625,"src":"414:137:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3623,"nodeType":"Block","src":"684:432:33","statements":[{"expression":{"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3596,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"694:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"ff","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"857:7:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""}},{"id":3607,"name":"_poolDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"894:13:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"expression":{"id":3611,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"958:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$3573_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":3612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3572,"src":"958:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3609,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"947:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"947:10:33","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"947:22:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3608,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"937:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"937:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3615,"name":"POOL_INIT_CODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"1000:19:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3604,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"811:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"811:16:33","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"811:234:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3603,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"776:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"776:291:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"747:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"747:7:33","typeDescriptions":{}}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"747:338:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"722:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3599,"name":"uint160","nodeType":"ElementaryTypeName","src":"722:7:33","typeDescriptions":{}}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"722:377:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"701:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3597,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:33","typeDescriptions":{}}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"701:408:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"694:415:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3622,"nodeType":"ExpressionStatement","src":"694:415:33"}]},"id":3624,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"566:14:33","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"_poolDeployer","nameLocation":"598:13:33","nodeType":"VariableDeclaration","scope":3624,"src":"590:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3587,"name":"address","nodeType":"ElementaryTypeName","src":"590:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"_key","nameLocation":"636:4:33","nodeType":"VariableDeclaration","scope":3624,"src":"621:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$3573_memory_ptr","typeString":"struct PoolAddress.PoolKey"},"typeName":{"id":3590,"nodeType":"UserDefinedTypeName","pathNode":{"id":3589,"name":"PoolKey","nodeType":"IdentifierPath","referencedDeclaration":3573,"src":"621:7:33"},"referencedDeclaration":3573,"src":"621:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$3573_storage_ptr","typeString":"struct PoolAddress.PoolKey"}},"visibility":"internal"}],"src":"580:66:33"},"returnParameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"pool","nameLocation":"678:4:33","nodeType":"VariableDeclaration","scope":3624,"src":"670:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3593,"name":"address","nodeType":"ElementaryTypeName","src":"670:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"669:14:33"},"scope":3625,"src":"557:559:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3626,"src":"160:958:33","usedErrors":[]}],"src":"45:1074:33"},"id":33},"contracts/libraries/TransferHelper.sol":{"ast":{"absolutePath":"contracts/libraries/TransferHelper.sol","exportedSymbols":{"TransferHelper":[3785]},"id":3786,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3627,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:34"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3785,"linearizedBaseContracts":[3785],"name":"TransferHelper","nameLocation":"190:14:34","nodeType":"ContractDefinition","nodes":[{"body":{"id":3669,"nodeType":"Block","src":"286:357:34","statements":[{"assignments":[3637,3639],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"success","nameLocation":"367:7:34","nodeType":"VariableDeclaration","scope":3669,"src":"362:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3636,"name":"bool","nodeType":"ElementaryTypeName","src":"362:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"data","nameLocation":"389:4:34","nodeType":"VariableDeclaration","scope":3669,"src":"376:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3638,"name":"bytes","nodeType":"ElementaryTypeName","src":"376:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3649,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783039356561376233","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"445:10:34","typeDescriptions":{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},"value":"0x095ea7b3"},{"id":3645,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"457:3:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3646,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"462:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3642,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"422:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"422:22:34","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"422:47:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3640,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"397:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"397:11:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"397:82:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"361:118:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3651,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"510:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3652,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"522:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"522:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"537:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"522:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3658,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"553:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"560:4:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3659,"name":"bool","nodeType":"ElementaryTypeName","src":"560:4:34","typeDescriptions":{}}}],"id":3661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"559:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3656,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"542:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"542:10:34","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"542:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"522:44:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"521:46:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"510:57:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"581:45:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""},"value":"TransferHelper::safeApprove: approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""}],"id":3650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"489:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"489:147:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3668,"nodeType":"ExpressionStatement","src":"489:147:34"}]},"id":3670,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"220:11:34","nodeType":"FunctionDefinition","parameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"_token","nameLocation":"240:6:34","nodeType":"VariableDeclaration","scope":3670,"src":"232:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3628,"name":"address","nodeType":"ElementaryTypeName","src":"232:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"_to","nameLocation":"256:3:34","nodeType":"VariableDeclaration","scope":3670,"src":"248:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3630,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"_value","nameLocation":"269:6:34","nodeType":"VariableDeclaration","scope":3670,"src":"261:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"231:45:34"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[],"src":"286:0:34"},"scope":3785,"src":"211:432:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3712,"nodeType":"Block","src":"755:360:34","statements":[{"assignments":[3680,3682],"declarations":[{"constant":false,"id":3680,"mutability":"mutable","name":"success","nameLocation":"837:7:34","nodeType":"VariableDeclaration","scope":3712,"src":"832:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3679,"name":"bool","nodeType":"ElementaryTypeName","src":"832:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3682,"mutability":"mutable","name":"data","nameLocation":"859:4:34","nodeType":"VariableDeclaration","scope":3712,"src":"846:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3681,"name":"bytes","nodeType":"ElementaryTypeName","src":"846:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3692,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30786139303539636262","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:10:34","typeDescriptions":{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},"value":"0xa9059cbb"},{"id":3688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"927:3:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"932:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3685,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"892:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"892:22:34","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"892:47:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3683,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"867:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"867:11:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"867:82:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"831:118:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3694,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"980:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3695,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"992:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"992:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1007:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"992:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3701,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"1023:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1030:4:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3702,"name":"bool","nodeType":"ElementaryTypeName","src":"1030:4:34","typeDescriptions":{}}}],"id":3704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1029:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3699,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1012:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1012:10:34","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1012:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"992:44:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"991:46:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"980:57:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1051:47:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""},"value":"TransferHelper::safeTransfer: transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""}],"id":3693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"959:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"959:149:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3711,"nodeType":"ExpressionStatement","src":"959:149:34"}]},"id":3713,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"658:12:34","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"_token","nameLocation":"688:6:34","nodeType":"VariableDeclaration","scope":3713,"src":"680:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3671,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"_to","nameLocation":"712:3:34","nodeType":"VariableDeclaration","scope":3713,"src":"704:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3673,"name":"address","nodeType":"ElementaryTypeName","src":"704:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"_value","nameLocation":"733:6:34","nodeType":"VariableDeclaration","scope":3713,"src":"725:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"725:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"670:75:34"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[],"src":"755:0:34"},"scope":3785,"src":"649:466:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3758,"nodeType":"Block","src":"1254:383:34","statements":[{"assignments":[3725,3727],"declarations":[{"constant":false,"id":3725,"mutability":"mutable","name":"success","nameLocation":"1348:7:34","nodeType":"VariableDeclaration","scope":3758,"src":"1343:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3724,"name":"bool","nodeType":"ElementaryTypeName","src":"1343:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"data","nameLocation":"1370:4:34","nodeType":"VariableDeclaration","scope":3758,"src":"1357:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3726,"name":"bytes","nodeType":"ElementaryTypeName","src":"1357:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3738,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783233623837326464","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1426:10:34","typeDescriptions":{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},"value":"0x23b872dd"},{"id":3733,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"1438:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3734,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"1445:3:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3735,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"1450:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3730,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1403:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1403:22:34","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1403:54:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3728,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"1378:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1378:11:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1378:89:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1342:125:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"1498:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3741,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"1510:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1510:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1525:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1510:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3747,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"1541:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1548:4:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3748,"name":"bool","nodeType":"ElementaryTypeName","src":"1548:4:34","typeDescriptions":{}}}],"id":3750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1547:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3745,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1530:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1530:10:34","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1530:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1510:44:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1509:46:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1498:57:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1569:51:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""},"value":"TransferHelper::transferFrom: transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""}],"id":3739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1477:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1477:153:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3757,"nodeType":"ExpressionStatement","src":"1477:153:34"}]},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1130:16:34","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"_token","nameLocation":"1164:6:34","nodeType":"VariableDeclaration","scope":3759,"src":"1156:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3714,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"_from","nameLocation":"1188:5:34","nodeType":"VariableDeclaration","scope":3759,"src":"1180:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3716,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"_to","nameLocation":"1211:3:34","nodeType":"VariableDeclaration","scope":3759,"src":"1203:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3718,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"_value","nameLocation":"1232:6:34","nodeType":"VariableDeclaration","scope":3759,"src":"1224:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1146:98:34"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[],"src":"1254:0:34"},"scope":3785,"src":"1121:516:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3783,"nodeType":"Block","src":"1706:189:34","statements":[{"assignments":[3767,null],"declarations":[{"constant":false,"id":3767,"mutability":"mutable","name":"success","nameLocation":"1722:7:34","nodeType":"VariableDeclaration","scope":3783,"src":"1717:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3766,"name":"bool","nodeType":"ElementaryTypeName","src":"1717:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3777,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1759:9:34","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3772,"name":"bytes","nodeType":"ElementaryTypeName","src":"1763:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1759:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3768,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"1735:3:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1735:8:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3770,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"1751:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1735:23:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1735:37:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1716:56:34"},{"expression":{"arguments":[{"id":3779,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"1803:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1824:54:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""},"value":"TransferHelper::safeTransferETH: ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""}],"id":3778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1782:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1782:106:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3782,"nodeType":"ExpressionStatement","src":"1782:106:34"}]},"id":3784,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"1652:15:34","nodeType":"FunctionDefinition","parameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3761,"mutability":"mutable","name":"_to","nameLocation":"1676:3:34","nodeType":"VariableDeclaration","scope":3784,"src":"1668:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3760,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3763,"mutability":"mutable","name":"_value","nameLocation":"1689:6:34","nodeType":"VariableDeclaration","scope":3784,"src":"1681:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1667:29:34"},"returnParameters":{"id":3765,"nodeType":"ParameterList","parameters":[],"src":"1706:0:34"},"scope":3785,"src":"1643:252:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3786,"src":"182:1715:34","usedErrors":[]}],"src":"45:1853:34"},"id":34},"contracts/test/MockERC20.sol":{"ast":{"absolutePath":"contracts/test/MockERC20.sol","exportedSymbols":{"Context":[824],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802],"MockERC20":[3827],"Ownable":[112]},"id":3828,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3787,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:35"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3828,"sourceUnit":700,"src":"71:55:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3828,"sourceUnit":113,"src":"127:52:35","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3790,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"203:5:35"},"id":3791,"nodeType":"InheritanceSpecifier","src":"203:5:35"},{"baseName":{"id":3792,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"210:7:35"},"id":3793,"nodeType":"InheritanceSpecifier","src":"210:7:35"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3827,"linearizedBaseContracts":[3827,112,699,802,777,824],"name":"MockERC20","nameLocation":"190:9:35","nodeType":"ContractDefinition","nodes":[{"body":{"id":3812,"nodeType":"Block","src":"351:42:35","statements":[{"expression":{"arguments":[{"expression":{"id":3807,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"367:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"367:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3809,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"379:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3806,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"361:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"361:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3811,"nodeType":"ExpressionStatement","src":"361:25:35"}]},"id":3813,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3802,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"337:4:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3803,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"343:6:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":3804,"kind":"baseConstructorSpecifier","modifierName":{"id":3801,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"331:5:35"},"nodeType":"ModifierInvocation","src":"331:19:35"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"name","nameLocation":"259:4:35","nodeType":"VariableDeclaration","scope":3813,"src":"245:18:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3794,"name":"string","nodeType":"ElementaryTypeName","src":"245:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"symbol","nameLocation":"287:6:35","nodeType":"VariableDeclaration","scope":3813,"src":"273:20:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3796,"name":"string","nodeType":"ElementaryTypeName","src":"273:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"supply","nameLocation":"311:6:35","nodeType":"VariableDeclaration","scope":3813,"src":"303:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"303:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"235:88:35"},"returnParameters":{"id":3805,"nodeType":"ParameterList","parameters":[],"src":"351:0:35"},"scope":3827,"src":"224:169:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3825,"nodeType":"Block","src":"461:39:35","statements":[{"expression":{"arguments":[{"id":3821,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"477:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3822,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"486:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3820,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"471:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"471:22:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3824,"nodeType":"ExpressionStatement","src":"471:22:35"}]},"functionSelector":"9dc29fac","id":3826,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"408:4:35","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"account","nameLocation":"421:7:35","nodeType":"VariableDeclaration","scope":3826,"src":"413:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3814,"name":"address","nodeType":"ElementaryTypeName","src":"413:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3817,"mutability":"mutable","name":"amount","nameLocation":"438:6:35","nodeType":"VariableDeclaration","scope":3826,"src":"430:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"412:33:35"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[],"src":"461:0:35"},"scope":3827,"src":"399:101:35","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":3828,"src":"181:321:35","usedErrors":[]}],"src":"45:458:35"},"id":35}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":453,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":559,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":620,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"78:821:36","statements":[{"body":{"nodeType":"YulBlock","src":"127:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"136:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"139:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"129:6:36"},"nodeType":"YulFunctionCall","src":"129:12:36"},"nodeType":"YulExpressionStatement","src":"129:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"106:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"114:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"102:3:36"},"nodeType":"YulFunctionCall","src":"102:17:36"},{"name":"end","nodeType":"YulIdentifier","src":"121:3:36"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"98:3:36"},"nodeType":"YulFunctionCall","src":"98:27:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"91:6:36"},"nodeType":"YulFunctionCall","src":"91:35:36"},"nodeType":"YulIf","src":"88:55:36"},{"nodeType":"YulVariableDeclaration","src":"152:23:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"168:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"162:5:36"},"nodeType":"YulFunctionCall","src":"162:13:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"156:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"184:28:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"202:2:36","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"206:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"198:3:36"},"nodeType":"YulFunctionCall","src":"198:10:36"},{"kind":"number","nodeType":"YulLiteral","src":"210:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"194:3:36"},"nodeType":"YulFunctionCall","src":"194:18:36"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"188:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"235:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"237:16:36"},"nodeType":"YulFunctionCall","src":"237:18:36"},"nodeType":"YulExpressionStatement","src":"237:18:36"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"227:2:36"},{"name":"_2","nodeType":"YulIdentifier","src":"231:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"224:2:36"},"nodeType":"YulFunctionCall","src":"224:10:36"},"nodeType":"YulIf","src":"221:36:36"},{"nodeType":"YulVariableDeclaration","src":"266:17:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"280:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"276:3:36"},"nodeType":"YulFunctionCall","src":"276:7:36"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"270:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"292:23:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"312:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"306:5:36"},"nodeType":"YulFunctionCall","src":"306:9:36"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"296:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"324:71:36","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"346:6:36"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"370:2:36"},{"kind":"number","nodeType":"YulLiteral","src":"374:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"366:3:36"},"nodeType":"YulFunctionCall","src":"366:13:36"},{"name":"_3","nodeType":"YulIdentifier","src":"381:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"362:3:36"},"nodeType":"YulFunctionCall","src":"362:22:36"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:36","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"358:3:36"},"nodeType":"YulFunctionCall","src":"358:31:36"},{"name":"_3","nodeType":"YulIdentifier","src":"391:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"354:3:36"},"nodeType":"YulFunctionCall","src":"354:40:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"342:3:36"},"nodeType":"YulFunctionCall","src":"342:53:36"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"328:10:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"454:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"456:16:36"},"nodeType":"YulFunctionCall","src":"456:18:36"},"nodeType":"YulExpressionStatement","src":"456:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"413:10:36"},{"name":"_2","nodeType":"YulIdentifier","src":"425:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"410:2:36"},"nodeType":"YulFunctionCall","src":"410:18:36"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"433:10:36"},{"name":"memPtr","nodeType":"YulIdentifier","src":"445:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"430:2:36"},"nodeType":"YulFunctionCall","src":"430:22:36"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"407:2:36"},"nodeType":"YulFunctionCall","src":"407:46:36"},"nodeType":"YulIf","src":"404:72:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"492:2:36","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"496:10:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"485:6:36"},"nodeType":"YulFunctionCall","src":"485:22:36"},"nodeType":"YulExpressionStatement","src":"485:22:36"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"523:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"531:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"516:6:36"},"nodeType":"YulFunctionCall","src":"516:18:36"},"nodeType":"YulExpressionStatement","src":"516:18:36"},{"nodeType":"YulVariableDeclaration","src":"543:14:36","value":{"kind":"number","nodeType":"YulLiteral","src":"553:4:36","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"547:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"603:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"612:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"615:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"605:6:36"},"nodeType":"YulFunctionCall","src":"605:12:36"},"nodeType":"YulExpressionStatement","src":"605:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"580:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"588:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"576:3:36"},"nodeType":"YulFunctionCall","src":"576:15:36"},{"name":"_4","nodeType":"YulIdentifier","src":"593:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"572:3:36"},"nodeType":"YulFunctionCall","src":"572:24:36"},{"name":"end","nodeType":"YulIdentifier","src":"598:3:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"569:2:36"},"nodeType":"YulFunctionCall","src":"569:33:36"},"nodeType":"YulIf","src":"566:53:36"},{"nodeType":"YulVariableDeclaration","src":"628:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"637:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"632:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"693:87:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"722:6:36"},{"name":"i","nodeType":"YulIdentifier","src":"730:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"718:3:36"},"nodeType":"YulFunctionCall","src":"718:14:36"},{"name":"_4","nodeType":"YulIdentifier","src":"734:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:36"},"nodeType":"YulFunctionCall","src":"714:23:36"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"753:6:36"},{"name":"i","nodeType":"YulIdentifier","src":"761:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"749:3:36"},"nodeType":"YulFunctionCall","src":"749:14:36"},{"name":"_4","nodeType":"YulIdentifier","src":"765:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:36"},"nodeType":"YulFunctionCall","src":"745:23:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"739:5:36"},"nodeType":"YulFunctionCall","src":"739:30:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"707:6:36"},"nodeType":"YulFunctionCall","src":"707:63:36"},"nodeType":"YulExpressionStatement","src":"707:63:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"658:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"661:2:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"655:2:36"},"nodeType":"YulFunctionCall","src":"655:9:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"665:19:36","statements":[{"nodeType":"YulAssignment","src":"667:15:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"676:1:36"},{"name":"_4","nodeType":"YulIdentifier","src":"679:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:36"},"nodeType":"YulFunctionCall","src":"672:10:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"667:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"651:3:36","statements":[]},"src":"647:133:36"},{"body":{"nodeType":"YulBlock","src":"810:59:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"839:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"847:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:36"},"nodeType":"YulFunctionCall","src":"835:15:36"},{"name":"_4","nodeType":"YulIdentifier","src":"852:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:36"},"nodeType":"YulFunctionCall","src":"831:24:36"},{"kind":"number","nodeType":"YulLiteral","src":"857:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"824:6:36"},"nodeType":"YulFunctionCall","src":"824:35:36"},"nodeType":"YulExpressionStatement","src":"824:35:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"795:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"798:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"792:2:36"},"nodeType":"YulFunctionCall","src":"792:9:36"},"nodeType":"YulIf","src":"789:80:36"},{"nodeType":"YulAssignment","src":"878:15:36","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"887:6:36"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"878:5:36"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:36","type":""},{"name":"end","nodeType":"YulTypedName","src":"60:3:36","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"68:5:36","type":""}],"src":"14:885:36"},{"body":{"nodeType":"YulBlock","src":"1022:444:36","statements":[{"body":{"nodeType":"YulBlock","src":"1068:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1077:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1080:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1070:6:36"},"nodeType":"YulFunctionCall","src":"1070:12:36"},"nodeType":"YulExpressionStatement","src":"1070:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1043:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"1052:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1039:3:36"},"nodeType":"YulFunctionCall","src":"1039:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"1064:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1035:3:36"},"nodeType":"YulFunctionCall","src":"1035:32:36"},"nodeType":"YulIf","src":"1032:52:36"},{"nodeType":"YulVariableDeclaration","src":"1093:30:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1113:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1107:5:36"},"nodeType":"YulFunctionCall","src":"1107:16:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1132:28:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1150:2:36","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1154:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1146:3:36"},"nodeType":"YulFunctionCall","src":"1146:10:36"},{"kind":"number","nodeType":"YulLiteral","src":"1158:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1142:3:36"},"nodeType":"YulFunctionCall","src":"1142:18:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1136:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1187:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1196:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1199:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1189:6:36"},"nodeType":"YulFunctionCall","src":"1189:12:36"},"nodeType":"YulExpressionStatement","src":"1189:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1175:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1183:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1172:2:36"},"nodeType":"YulFunctionCall","src":"1172:14:36"},"nodeType":"YulIf","src":"1169:34:36"},{"nodeType":"YulAssignment","src":"1212:71:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"1266:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1251:3:36"},"nodeType":"YulFunctionCall","src":"1251:22:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1275:7:36"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1222:28:36"},"nodeType":"YulFunctionCall","src":"1222:61:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1212:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"1292:41:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1318:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1329:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1314:3:36"},"nodeType":"YulFunctionCall","src":"1314:18:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1308:5:36"},"nodeType":"YulFunctionCall","src":"1308:25:36"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1296:8:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1362:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1371:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1374:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1364:6:36"},"nodeType":"YulFunctionCall","src":"1364:12:36"},"nodeType":"YulExpressionStatement","src":"1364:12:36"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1348:8:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1358:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1345:2:36"},"nodeType":"YulFunctionCall","src":"1345:16:36"},"nodeType":"YulIf","src":"1342:36:36"},{"nodeType":"YulAssignment","src":"1387:73:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:36"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1441:8:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1426:3:36"},"nodeType":"YulFunctionCall","src":"1426:24:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1452:7:36"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1397:28:36"},"nodeType":"YulFunctionCall","src":"1397:63:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1387:6:36"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"980:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"991:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1003:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1011:6:36","type":""}],"src":"904:562:36"},{"body":{"nodeType":"YulBlock","src":"1526:325:36","statements":[{"nodeType":"YulAssignment","src":"1536:22:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1550:1:36","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1553:4:36"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1546:3:36"},"nodeType":"YulFunctionCall","src":"1546:12:36"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1536:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"1567:38:36","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1597:4:36"},{"kind":"number","nodeType":"YulLiteral","src":"1603:1:36","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1593:3:36"},"nodeType":"YulFunctionCall","src":"1593:12:36"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1571:18:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1644:31:36","statements":[{"nodeType":"YulAssignment","src":"1646:27:36","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1660:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"1668:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1656:3:36"},"nodeType":"YulFunctionCall","src":"1656:17:36"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1646:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1624:18:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1617:6:36"},"nodeType":"YulFunctionCall","src":"1617:26:36"},"nodeType":"YulIf","src":"1614:61:36"},{"body":{"nodeType":"YulBlock","src":"1734:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1755:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1762:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1767:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1758:3:36"},"nodeType":"YulFunctionCall","src":"1758:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1748:6:36"},"nodeType":"YulFunctionCall","src":"1748:31:36"},"nodeType":"YulExpressionStatement","src":"1748:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1799:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1802:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1792:6:36"},"nodeType":"YulFunctionCall","src":"1792:15:36"},"nodeType":"YulExpressionStatement","src":"1792:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1827:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1830:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1820:6:36"},"nodeType":"YulFunctionCall","src":"1820:15:36"},"nodeType":"YulExpressionStatement","src":"1820:15:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1690:18:36"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1713:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"1721:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1710:2:36"},"nodeType":"YulFunctionCall","src":"1710:14:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1687:2:36"},"nodeType":"YulFunctionCall","src":"1687:38:36"},"nodeType":"YulIf","src":"1684:161:36"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1506:4:36","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1515:6:36","type":""}],"src":"1471:380:36"},{"body":{"nodeType":"YulBlock","src":"1888:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1905:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1917:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1908:3:36"},"nodeType":"YulFunctionCall","src":"1908:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1898:6:36"},"nodeType":"YulFunctionCall","src":"1898:31:36"},"nodeType":"YulExpressionStatement","src":"1898:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1948:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1938:6:36"},"nodeType":"YulFunctionCall","src":"1938:15:36"},"nodeType":"YulExpressionStatement","src":"1938:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1969:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1972:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1962:6:36"},"nodeType":"YulFunctionCall","src":"1962:15:36"},"nodeType":"YulExpressionStatement","src":"1962:15:36"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1856:127:36"}]},"contents":"{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000aef38038062000aef8339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61085d80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c39190610771565b60405180910390f35b6100df6100da366004610747565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461070b565b61024a565b604051601281526020016100c3565b6100df610131366004610747565b61026e565b6100f36101443660046106b6565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610747565b61029f565b6100df610188366004610747565b61031f565b6100f361019b3660046106d8565b61032d565b6060600380546101af906107ec565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107ec565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107c6565b610358565b6060600480546101af906107ec565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b80356001600160a01b03811681146106b157600080fd5b919050565b6000602082840312156106c857600080fd5b6106d18261069a565b9392505050565b600080604083850312156106eb57600080fd5b6106f48361069a565b91506107026020840161069a565b90509250929050565b60008060006060848603121561072057600080fd5b6107298461069a565b92506107376020850161069a565b9150604084013590509250925092565b6000806040838503121561075a57600080fd5b6107638361069a565b946020939093013593505050565b600060208083528351808285015260005b8181101561079e57858101830151858201604001528201610782565b818111156107b0576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156107e757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061080057607f821691505b6020821081141561082157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220efb1ae490d600bbc337fc46e5c4c62b0b1f953a762e6f08fc79b95b635561b5c64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xAEF CODESIZE SUB DUP1 PUSH3 0xAEF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x85D DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D1 DUP3 PUSH2 0x69A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x69A JUMP JUMPDEST SWAP2 POP PUSH2 0x702 PUSH1 0x20 DUP5 ADD PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x729 DUP5 PUSH2 0x69A JUMP JUMPDEST SWAP3 POP PUSH2 0x737 PUSH1 0x20 DUP6 ADD PUSH2 0x69A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x763 DUP4 PUSH2 0x69A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x79E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x782 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x800 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB1 0xAE 0x49 0xD PUSH1 0xB 0xBC CALLER PUSH32 0xC46E5C4C62B0B1F953A762E6F08FC79B95B635561B5C64736F6C634300080700 CALLER ","sourceMap":"1532:11312:1:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:1;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;-1:-1:-1;1532:11312:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:36;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:36;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:36;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:36:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:36;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1532:11312:1;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_698":{"entryPoint":null,"id":698,"parameterSlots":3,"returnSlots":0},"@_approve_633":{"entryPoint":856,"id":633,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_687":{"entryPoint":null,"id":687,"parameterSlots":3,"returnSlots":0},"@_msgSender_814":{"entryPoint":null,"id":814,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_676":{"entryPoint":1148,"id":676,"parameterSlots":3,"returnSlots":0},"@_transfer_459":{"entryPoint":1270,"id":459,"parameterSlots":3,"returnSlots":0},"@allowance_254":{"entryPoint":813,"id":254,"parameterSlots":2,"returnSlots":1},"@approve_279":{"entryPoint":562,"id":279,"parameterSlots":2,"returnSlots":1},"@balanceOf_211":{"entryPoint":null,"id":211,"parameterSlots":1,"returnSlots":1},"@decimals_187":{"entryPoint":null,"id":187,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_382":{"entryPoint":671,"id":382,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_341":{"entryPoint":622,"id":341,"parameterSlots":2,"returnSlots":1},"@name_167":{"entryPoint":416,"id":167,"parameterSlots":0,"returnSlots":1},"@symbol_177":{"entryPoint":656,"id":177,"parameterSlots":0,"returnSlots":1},"@totalSupply_197":{"entryPoint":null,"id":197,"parameterSlots":0,"returnSlots":1},"@transferFrom_312":{"entryPoint":586,"id":312,"parameterSlots":3,"returnSlots":1},"@transfer_236":{"entryPoint":799,"id":236,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1690,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1718,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1752,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1803,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1863,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1990,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2028,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5806:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:36","statements":[{"nodeType":"YulAssignment","src":"73:29:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:36"},"nodeType":"YulFunctionCall","src":"82:20:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:36"}]},{"body":{"nodeType":"YulBlock","src":"165:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:36"},"nodeType":"YulFunctionCall","src":"167:12:36"},"nodeType":"YulExpressionStatement","src":"167:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:36"},"nodeType":"YulFunctionCall","src":"146:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:36"},"nodeType":"YulFunctionCall","src":"142:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:36"},"nodeType":"YulFunctionCall","src":"131:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:36"},"nodeType":"YulFunctionCall","src":"121:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:36"},"nodeType":"YulFunctionCall","src":"114:50:36"},"nodeType":"YulIf","src":"111:70:36"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:36","type":""}],"src":"14:173:36"},{"body":{"nodeType":"YulBlock","src":"262:116:36","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:36"},"nodeType":"YulFunctionCall","src":"310:12:36"},"nodeType":"YulExpressionStatement","src":"310:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:36"},"nodeType":"YulFunctionCall","src":"279:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:36"},"nodeType":"YulFunctionCall","src":"275:32:36"},"nodeType":"YulIf","src":"272:52:36"},{"nodeType":"YulAssignment","src":"333:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:36"},"nodeType":"YulFunctionCall","src":"343:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:36"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:36","type":""}],"src":"192:186:36"},{"body":{"nodeType":"YulBlock","src":"470:173:36","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:36"},"nodeType":"YulFunctionCall","src":"518:12:36"},"nodeType":"YulExpressionStatement","src":"518:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:36"},"nodeType":"YulFunctionCall","src":"487:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:36"},"nodeType":"YulFunctionCall","src":"483:32:36"},"nodeType":"YulIf","src":"480:52:36"},{"nodeType":"YulAssignment","src":"541:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:36"},"nodeType":"YulFunctionCall","src":"551:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:36"}]},{"nodeType":"YulAssignment","src":"589:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:36"},"nodeType":"YulFunctionCall","src":"618:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"599:18:36"},"nodeType":"YulFunctionCall","src":"599:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:36","type":""}],"src":"383:260:36"},{"body":{"nodeType":"YulBlock","src":"752:224:36","statements":[{"body":{"nodeType":"YulBlock","src":"798:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"807:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"810:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"800:6:36"},"nodeType":"YulFunctionCall","src":"800:12:36"},"nodeType":"YulExpressionStatement","src":"800:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"773:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"769:3:36"},"nodeType":"YulFunctionCall","src":"769:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"794:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"765:3:36"},"nodeType":"YulFunctionCall","src":"765:32:36"},"nodeType":"YulIf","src":"762:52:36"},{"nodeType":"YulAssignment","src":"823:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"852:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"833:18:36"},"nodeType":"YulFunctionCall","src":"833:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"823:6:36"}]},{"nodeType":"YulAssignment","src":"871:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"904:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"915:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"900:3:36"},"nodeType":"YulFunctionCall","src":"900:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"881:18:36"},"nodeType":"YulFunctionCall","src":"881:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"871:6:36"}]},{"nodeType":"YulAssignment","src":"928:42:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"955:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"966:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:36"},"nodeType":"YulFunctionCall","src":"951:18:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"938:12:36"},"nodeType":"YulFunctionCall","src":"938:32:36"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"928:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"702:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"713:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"725:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"733:6:36","type":""},{"name":"value2","nodeType":"YulTypedName","src":"741:6:36","type":""}],"src":"648:328:36"},{"body":{"nodeType":"YulBlock","src":"1068:167:36","statements":[{"body":{"nodeType":"YulBlock","src":"1114:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1123:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1126:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1116:6:36"},"nodeType":"YulFunctionCall","src":"1116:12:36"},"nodeType":"YulExpressionStatement","src":"1116:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1089:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"1098:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1085:3:36"},"nodeType":"YulFunctionCall","src":"1085:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"1110:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1081:3:36"},"nodeType":"YulFunctionCall","src":"1081:32:36"},"nodeType":"YulIf","src":"1078:52:36"},{"nodeType":"YulAssignment","src":"1139:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1149:18:36"},"nodeType":"YulFunctionCall","src":"1149:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1139:6:36"}]},{"nodeType":"YulAssignment","src":"1187:42:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1225:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1210:3:36"},"nodeType":"YulFunctionCall","src":"1210:18:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1197:12:36"},"nodeType":"YulFunctionCall","src":"1197:32:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1187:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1026:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1037:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1049:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1057:6:36","type":""}],"src":"981:254:36"},{"body":{"nodeType":"YulBlock","src":"1335:92:36","statements":[{"nodeType":"YulAssignment","src":"1345:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1368:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1353:3:36"},"nodeType":"YulFunctionCall","src":"1353:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1345:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:36"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1412:6:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1405:6:36"},"nodeType":"YulFunctionCall","src":"1405:14:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1398:6:36"},"nodeType":"YulFunctionCall","src":"1398:22:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1380:6:36"},"nodeType":"YulFunctionCall","src":"1380:41:36"},"nodeType":"YulExpressionStatement","src":"1380:41:36"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1304:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1315:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1326:4:36","type":""}],"src":"1240:187:36"},{"body":{"nodeType":"YulBlock","src":"1553:476:36","statements":[{"nodeType":"YulVariableDeclaration","src":"1563:12:36","value":{"kind":"number","nodeType":"YulLiteral","src":"1573:2:36","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1567:2:36","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1591:9:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1602:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1584:6:36"},"nodeType":"YulFunctionCall","src":"1584:21:36"},"nodeType":"YulExpressionStatement","src":"1584:21:36"},{"nodeType":"YulVariableDeclaration","src":"1614:27:36","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1634:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1628:5:36"},"nodeType":"YulFunctionCall","src":"1628:13:36"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1618:6:36","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1661:9:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1672:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:36"},"nodeType":"YulFunctionCall","src":"1657:18:36"},{"name":"length","nodeType":"YulIdentifier","src":"1677:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:36"},"nodeType":"YulFunctionCall","src":"1650:34:36"},"nodeType":"YulExpressionStatement","src":"1650:34:36"},{"nodeType":"YulVariableDeclaration","src":"1693:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"1702:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1697:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1762:90:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1791:9:36"},{"name":"i","nodeType":"YulIdentifier","src":"1802:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1787:3:36"},"nodeType":"YulFunctionCall","src":"1787:17:36"},{"kind":"number","nodeType":"YulLiteral","src":"1806:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1783:3:36"},"nodeType":"YulFunctionCall","src":"1783:26:36"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1825:6:36"},{"name":"i","nodeType":"YulIdentifier","src":"1833:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:36"},"nodeType":"YulFunctionCall","src":"1821:14:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1837:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1817:3:36"},"nodeType":"YulFunctionCall","src":"1817:23:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1811:5:36"},"nodeType":"YulFunctionCall","src":"1811:30:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1776:6:36"},"nodeType":"YulFunctionCall","src":"1776:66:36"},"nodeType":"YulExpressionStatement","src":"1776:66:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1723:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"1726:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1720:2:36"},"nodeType":"YulFunctionCall","src":"1720:13:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1734:19:36","statements":[{"nodeType":"YulAssignment","src":"1736:15:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1745:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1748:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1741:3:36"},"nodeType":"YulFunctionCall","src":"1741:10:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1736:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"1716:3:36","statements":[]},"src":"1712:140:36"},{"body":{"nodeType":"YulBlock","src":"1886:66:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1915:9:36"},{"name":"length","nodeType":"YulIdentifier","src":"1926:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:36"},"nodeType":"YulFunctionCall","src":"1911:22:36"},{"kind":"number","nodeType":"YulLiteral","src":"1935:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1907:3:36"},"nodeType":"YulFunctionCall","src":"1907:31:36"},{"kind":"number","nodeType":"YulLiteral","src":"1940:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1900:6:36"},"nodeType":"YulFunctionCall","src":"1900:42:36"},"nodeType":"YulExpressionStatement","src":"1900:42:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1867:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"1870:6:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1864:2:36"},"nodeType":"YulFunctionCall","src":"1864:13:36"},"nodeType":"YulIf","src":"1861:91:36"},{"nodeType":"YulAssignment","src":"1961:62:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1977:9:36"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1996:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"2004:2:36","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1992:3:36"},"nodeType":"YulFunctionCall","src":"1992:15:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2013:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2009:3:36"},"nodeType":"YulFunctionCall","src":"2009:7:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1988:3:36"},"nodeType":"YulFunctionCall","src":"1988:29:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1973:3:36"},"nodeType":"YulFunctionCall","src":"1973:45:36"},{"kind":"number","nodeType":"YulLiteral","src":"2020:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1969:3:36"},"nodeType":"YulFunctionCall","src":"1969:54:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1961:4:36"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1522:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1533:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1544:4:36","type":""}],"src":"1432:597:36"},{"body":{"nodeType":"YulBlock","src":"2208:225:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2225:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2218:6:36"},"nodeType":"YulFunctionCall","src":"2218:21:36"},"nodeType":"YulExpressionStatement","src":"2218:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2259:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2270:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2255:3:36"},"nodeType":"YulFunctionCall","src":"2255:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"2275:2:36","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2248:6:36"},"nodeType":"YulFunctionCall","src":"2248:30:36"},"nodeType":"YulExpressionStatement","src":"2248:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2298:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2309:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2294:3:36"},"nodeType":"YulFunctionCall","src":"2294:18:36"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"2314:34:36","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2287:6:36"},"nodeType":"YulFunctionCall","src":"2287:62:36"},"nodeType":"YulExpressionStatement","src":"2287:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2369:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2380:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2365:3:36"},"nodeType":"YulFunctionCall","src":"2365:18:36"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"2385:5:36","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2358:6:36"},"nodeType":"YulFunctionCall","src":"2358:33:36"},"nodeType":"YulExpressionStatement","src":"2358:33:36"},{"nodeType":"YulAssignment","src":"2400:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2412:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2423:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2408:3:36"},"nodeType":"YulFunctionCall","src":"2408:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2400:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2199:4:36","type":""}],"src":"2034:399:36"},{"body":{"nodeType":"YulBlock","src":"2612:224:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2629:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2640:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2622:6:36"},"nodeType":"YulFunctionCall","src":"2622:21:36"},"nodeType":"YulExpressionStatement","src":"2622:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2663:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2674:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2659:3:36"},"nodeType":"YulFunctionCall","src":"2659:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"2679:2:36","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2652:6:36"},"nodeType":"YulFunctionCall","src":"2652:30:36"},"nodeType":"YulExpressionStatement","src":"2652:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2702:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2713:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2698:3:36"},"nodeType":"YulFunctionCall","src":"2698:18:36"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"2718:34:36","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2691:6:36"},"nodeType":"YulFunctionCall","src":"2691:62:36"},"nodeType":"YulExpressionStatement","src":"2691:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2773:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2784:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2769:3:36"},"nodeType":"YulFunctionCall","src":"2769:18:36"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"2789:4:36","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2762:6:36"},"nodeType":"YulFunctionCall","src":"2762:32:36"},"nodeType":"YulExpressionStatement","src":"2762:32:36"},{"nodeType":"YulAssignment","src":"2803:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2815:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2826:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2811:3:36"},"nodeType":"YulFunctionCall","src":"2811:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2803:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2589:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2603:4:36","type":""}],"src":"2438:398:36"},{"body":{"nodeType":"YulBlock","src":"3015:179:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3032:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3043:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3025:6:36"},"nodeType":"YulFunctionCall","src":"3025:21:36"},"nodeType":"YulExpressionStatement","src":"3025:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3066:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3077:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3062:3:36"},"nodeType":"YulFunctionCall","src":"3062:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"3082:2:36","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3055:6:36"},"nodeType":"YulFunctionCall","src":"3055:30:36"},"nodeType":"YulExpressionStatement","src":"3055:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3116:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:36"},"nodeType":"YulFunctionCall","src":"3101:18:36"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"3121:31:36","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3094:6:36"},"nodeType":"YulFunctionCall","src":"3094:59:36"},"nodeType":"YulExpressionStatement","src":"3094:59:36"},{"nodeType":"YulAssignment","src":"3162:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3174:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3185:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3170:3:36"},"nodeType":"YulFunctionCall","src":"3170:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3162:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2992:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3006:4:36","type":""}],"src":"2841:353:36"},{"body":{"nodeType":"YulBlock","src":"3373:228:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3390:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3401:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3383:6:36"},"nodeType":"YulFunctionCall","src":"3383:21:36"},"nodeType":"YulExpressionStatement","src":"3383:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3424:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3435:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3420:3:36"},"nodeType":"YulFunctionCall","src":"3420:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"3440:2:36","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3413:6:36"},"nodeType":"YulFunctionCall","src":"3413:30:36"},"nodeType":"YulExpressionStatement","src":"3413:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3463:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3474:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:36"},"nodeType":"YulFunctionCall","src":"3459:18:36"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"3479:34:36","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3452:6:36"},"nodeType":"YulFunctionCall","src":"3452:62:36"},"nodeType":"YulExpressionStatement","src":"3452:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3534:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3545:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:36"},"nodeType":"YulFunctionCall","src":"3530:18:36"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"3550:8:36","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:36"},"nodeType":"YulFunctionCall","src":"3523:36:36"},"nodeType":"YulExpressionStatement","src":"3523:36:36"},{"nodeType":"YulAssignment","src":"3568:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3580:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3591:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3576:3:36"},"nodeType":"YulFunctionCall","src":"3576:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3568:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3350:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3364:4:36","type":""}],"src":"3199:402:36"},{"body":{"nodeType":"YulBlock","src":"3780:227:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3797:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3808:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3790:6:36"},"nodeType":"YulFunctionCall","src":"3790:21:36"},"nodeType":"YulExpressionStatement","src":"3790:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3831:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3842:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3827:3:36"},"nodeType":"YulFunctionCall","src":"3827:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"3847:2:36","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3820:6:36"},"nodeType":"YulFunctionCall","src":"3820:30:36"},"nodeType":"YulExpressionStatement","src":"3820:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3870:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3881:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3866:3:36"},"nodeType":"YulFunctionCall","src":"3866:18:36"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"3886:34:36","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:36"},"nodeType":"YulFunctionCall","src":"3859:62:36"},"nodeType":"YulExpressionStatement","src":"3859:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3941:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3952:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:36"},"nodeType":"YulFunctionCall","src":"3937:18:36"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"3957:7:36","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3930:6:36"},"nodeType":"YulFunctionCall","src":"3930:35:36"},"nodeType":"YulExpressionStatement","src":"3930:35:36"},{"nodeType":"YulAssignment","src":"3974:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3986:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3997:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3982:3:36"},"nodeType":"YulFunctionCall","src":"3982:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3974:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3757:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3771:4:36","type":""}],"src":"3606:401:36"},{"body":{"nodeType":"YulBlock","src":"4186:226:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4203:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4214:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4196:6:36"},"nodeType":"YulFunctionCall","src":"4196:21:36"},"nodeType":"YulExpressionStatement","src":"4196:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4237:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4248:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4233:3:36"},"nodeType":"YulFunctionCall","src":"4233:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"4253:2:36","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4226:6:36"},"nodeType":"YulFunctionCall","src":"4226:30:36"},"nodeType":"YulExpressionStatement","src":"4226:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4276:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4287:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4272:3:36"},"nodeType":"YulFunctionCall","src":"4272:18:36"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"4292:34:36","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:36"},"nodeType":"YulFunctionCall","src":"4265:62:36"},"nodeType":"YulExpressionStatement","src":"4265:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4347:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4358:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4343:3:36"},"nodeType":"YulFunctionCall","src":"4343:18:36"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"4363:6:36","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4336:6:36"},"nodeType":"YulFunctionCall","src":"4336:34:36"},"nodeType":"YulExpressionStatement","src":"4336:34:36"},{"nodeType":"YulAssignment","src":"4379:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4391:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4402:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4387:3:36"},"nodeType":"YulFunctionCall","src":"4387:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4379:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4163:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4177:4:36","type":""}],"src":"4012:400:36"},{"body":{"nodeType":"YulBlock","src":"4591:227:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4608:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4619:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4601:6:36"},"nodeType":"YulFunctionCall","src":"4601:21:36"},"nodeType":"YulExpressionStatement","src":"4601:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4642:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4653:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4638:3:36"},"nodeType":"YulFunctionCall","src":"4638:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"4658:2:36","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4631:6:36"},"nodeType":"YulFunctionCall","src":"4631:30:36"},"nodeType":"YulExpressionStatement","src":"4631:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4681:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4692:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4677:3:36"},"nodeType":"YulFunctionCall","src":"4677:18:36"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"4697:34:36","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4670:6:36"},"nodeType":"YulFunctionCall","src":"4670:62:36"},"nodeType":"YulExpressionStatement","src":"4670:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4752:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4763:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4748:3:36"},"nodeType":"YulFunctionCall","src":"4748:18:36"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"4768:7:36","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4741:6:36"},"nodeType":"YulFunctionCall","src":"4741:35:36"},"nodeType":"YulExpressionStatement","src":"4741:35:36"},{"nodeType":"YulAssignment","src":"4785:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4808:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:36"},"nodeType":"YulFunctionCall","src":"4793:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4568:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4582:4:36","type":""}],"src":"4417:401:36"},{"body":{"nodeType":"YulBlock","src":"4924:76:36","statements":[{"nodeType":"YulAssignment","src":"4934:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4946:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4957:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4942:3:36"},"nodeType":"YulFunctionCall","src":"4942:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4934:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4976:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"4987:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4969:6:36"},"nodeType":"YulFunctionCall","src":"4969:25:36"},"nodeType":"YulExpressionStatement","src":"4969:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4893:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4904:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4915:4:36","type":""}],"src":"4823:177:36"},{"body":{"nodeType":"YulBlock","src":"5102:87:36","statements":[{"nodeType":"YulAssignment","src":"5112:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5135:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:36"},"nodeType":"YulFunctionCall","src":"5120:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5112:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5154:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5169:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"5177:4:36","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5165:3:36"},"nodeType":"YulFunctionCall","src":"5165:17:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5147:6:36"},"nodeType":"YulFunctionCall","src":"5147:36:36"},"nodeType":"YulExpressionStatement","src":"5147:36:36"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5071:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5082:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5093:4:36","type":""}],"src":"5005:184:36"},{"body":{"nodeType":"YulBlock","src":"5242:177:36","statements":[{"body":{"nodeType":"YulBlock","src":"5277:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5298:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5305:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5310:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5301:3:36"},"nodeType":"YulFunctionCall","src":"5301:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5291:6:36"},"nodeType":"YulFunctionCall","src":"5291:31:36"},"nodeType":"YulExpressionStatement","src":"5291:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5342:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5345:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5335:6:36"},"nodeType":"YulFunctionCall","src":"5335:15:36"},"nodeType":"YulExpressionStatement","src":"5335:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5370:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5373:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5363:6:36"},"nodeType":"YulFunctionCall","src":"5363:15:36"},"nodeType":"YulExpressionStatement","src":"5363:15:36"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5258:1:36"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5265:1:36"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5261:3:36"},"nodeType":"YulFunctionCall","src":"5261:6:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5255:2:36"},"nodeType":"YulFunctionCall","src":"5255:13:36"},"nodeType":"YulIf","src":"5252:136:36"},{"nodeType":"YulAssignment","src":"5397:16:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5408:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"5411:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5404:3:36"},"nodeType":"YulFunctionCall","src":"5404:9:36"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5397:3:36"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5225:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"5228:1:36","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5234:3:36","type":""}],"src":"5194:225:36"},{"body":{"nodeType":"YulBlock","src":"5479:325:36","statements":[{"nodeType":"YulAssignment","src":"5489:22:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5503:1:36","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5506:4:36"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5499:3:36"},"nodeType":"YulFunctionCall","src":"5499:12:36"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5489:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"5520:38:36","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5550:4:36"},{"kind":"number","nodeType":"YulLiteral","src":"5556:1:36","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5546:3:36"},"nodeType":"YulFunctionCall","src":"5546:12:36"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5524:18:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"5597:31:36","statements":[{"nodeType":"YulAssignment","src":"5599:27:36","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5613:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"5621:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5609:3:36"},"nodeType":"YulFunctionCall","src":"5609:17:36"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5599:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5577:18:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5570:6:36"},"nodeType":"YulFunctionCall","src":"5570:26:36"},"nodeType":"YulIf","src":"5567:61:36"},{"body":{"nodeType":"YulBlock","src":"5687:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5708:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5715:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5720:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5711:3:36"},"nodeType":"YulFunctionCall","src":"5711:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5701:6:36"},"nodeType":"YulFunctionCall","src":"5701:31:36"},"nodeType":"YulExpressionStatement","src":"5701:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5752:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5755:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5745:6:36"},"nodeType":"YulFunctionCall","src":"5745:15:36"},"nodeType":"YulExpressionStatement","src":"5745:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5780:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5783:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5773:6:36"},"nodeType":"YulFunctionCall","src":"5773:15:36"},"nodeType":"YulExpressionStatement","src":"5773:15:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5643:18:36"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5666:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"5674:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5663:2:36"},"nodeType":"YulFunctionCall","src":"5663:14:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5640:2:36"},"nodeType":"YulFunctionCall","src":"5640:38:36"},"nodeType":"YulIf","src":"5637:161:36"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5459:4:36","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5468:6:36","type":""}],"src":"5424:380:36"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c39190610771565b60405180910390f35b6100df6100da366004610747565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461070b565b61024a565b604051601281526020016100c3565b6100df610131366004610747565b61026e565b6100f36101443660046106b6565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610747565b61029f565b6100df610188366004610747565b61031f565b6100f361019b3660046106d8565b61032d565b6060600380546101af906107ec565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107ec565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107c6565b610358565b6060600480546101af906107ec565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b80356001600160a01b03811681146106b157600080fd5b919050565b6000602082840312156106c857600080fd5b6106d18261069a565b9392505050565b600080604083850312156106eb57600080fd5b6106f48361069a565b91506107026020840161069a565b90509250929050565b60008060006060848603121561072057600080fd5b6107298461069a565b92506107376020850161069a565b9150604084013590509250925092565b6000806040838503121561075a57600080fd5b6107638361069a565b946020939093013593505050565b600060208083528351808285015260005b8181101561079e57858101830151858201604001528201610782565b818111156107b0576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156107e757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061080057607f821691505b6020821081141561082157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220efb1ae490d600bbc337fc46e5c4c62b0b1f953a762e6f08fc79b95b635561b5c64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D1 DUP3 PUSH2 0x69A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x69A JUMP JUMPDEST SWAP2 POP PUSH2 0x702 PUSH1 0x20 DUP5 ADD PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x729 DUP5 PUSH2 0x69A JUMP JUMPDEST SWAP3 POP PUSH2 0x737 PUSH1 0x20 DUP6 ADD PUSH2 0x69A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x763 DUP4 PUSH2 0x69A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x79E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x782 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x800 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB1 0xAE 0x49 0xD PUSH1 0xB 0xBC CALLER PUSH32 0xC46E5C4C62B0B1F953A762E6F08FC79B95B635561B5C64736F6C634300080700 CALLER ","sourceMap":"1532:11312:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:36;;1398:22;1380:41;;1368:2;1353:18;4444:197:1;1240:187:36;3255:106:1;3342:12;;3255:106;;;4969:25:36;;;4957:2;4942:18;3255:106:1;4823:177:36;5203:256:1;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;5147:36:36;;5135:2;5120:18;3104:91:1;5005:184:36;5854:234:1;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:4;4581:32:1;719:10:4;4597:7:1;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:1;;4444:197;-1:-1:-1;;;4444:197:1:o;5203:256::-;5300:4;719:10:4;5356:38:1;5372:4;719:10:4;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;719:10:4;5996:64:1;719:10:4;6012:7:1;6049:10;6021:25;719:10:4;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:4;6668:4:1;6749:25;719:10:4;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;4619:2:36;6784:85:1;;;4601:21:36;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:36;;;4741:35;4793:19;;6784:85:1;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:4;3873:28:1;719:10:4;3890:2:1;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;4214:2:36;10550:68:1;;;4196:21:36;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:36;;;4336:34;4387:19;;10550:68:1;4012:400:36;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;2640:2:36;10628:68:1;;;2622:21:36;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:36;;;2762:32;2811:19;;10628:68:1;2438:398:36;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;4969:25:36;;;10758:32:1;;4942:18:36;10758:32:1;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;3043:2:36;11297:68:1;;;3025:21:36;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11297:68:1;2841:353:36;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;3808:2:36;7544:68:1;;;3790:21:36;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:36;;;3930:35;3982:19;;7544:68:1;3606:401:36;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;2236:2:36;7622:64:1;;;2218:21:36;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:36;;;2358:33;2408:19;;7622:64:1;2034:399:36;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;3401:2:36;7793:72:1;;;3383:21:36;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:36;;;3523:36;3576:19;;7793:72:1;3199:402:36;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;4969:25:36;;;8114:13:1;;8163:26;;4942:18:36;8163:26:1;;;;;;;8200:37;12073:91;14:173:36;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:36:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:36:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:36;1992:15;-1:-1:-1;;1988:29:36;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:36:o;5194:225::-;5234:3;5265:1;5261:6;5258:1;5255:13;5252:136;;;5310:10;5305:3;5301:20;5298:1;5291:31;5345:4;5342:1;5335:15;5373:4;5370:1;5363:15;5252:136;-1:-1:-1;5404:9:36;;5194:225::o;5424:380::-;5503:1;5499:12;;;;5546;;;5567:61;;5621:4;5613:6;5609:17;5599:27;;5567:61;5674:2;5666:6;5663:14;5643:18;5640:38;5637:161;;;5720:10;5715:3;5711:20;5708:1;5701:31;5755:4;5752:1;5745:15;5783:4;5780:1;5773:15;5637:161;;5424:380;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"428200","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24624","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"26978","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51134","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":128,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":134,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":136,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":138,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":140,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"params":{"fee":"The enabled fee, denominated in hundredths of a bip","tickSpacing":"The minimum number of ticks between initialized ticks for pools created with the given fee"}},"OwnerChanged(address,address)":{"params":{"newOwner":"The owner after the owner was changed","oldOwner":"The owner before the owner was changed"}},"PoolCreated(address,address,uint24,int24,address)":{"params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","pool":"The address of the created pool","tickSpacing":"The minimum number of ticks between initialized ticks","token0":"The first token of the pool by address sort order","token1":"The second token of the pool by address sort order"}}},"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"enableFeeAmount(uint24,int24)":{"details":"Fee amounts may never be removed once enabled","params":{"fee":"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)","tickSpacing":"The spacing between ticks to be enforced for all pools created with the given fee amount"}},"feeAmountTickSpacing(uint24)":{"details":"A fee amount can never be removed, so this value should be hard coded or cached in the calling context","params":{"fee":"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},"returns":{"_0":"The tick spacing"}},"getPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"owner()":{"details":"Can be changed by the current owner via setOwner","returns":{"_0":"The address of the factory owner"}},"setOwner(address)":{"details":"Must be called by the current owner","params":{"_owner":"The new owner of the factory"}}},"title":"The interface for the Uniswap V3 Factory","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"notice":"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{"notice":"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{"notice":"Emitted when a pool is created"}},"kind":"user","methods":{"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{"notice":"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{"notice":"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{"notice":"Returns the current owner of the factory"},"setOwner(address)":{"notice":"Updates the owner of the factory"}},"notice":"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees","version":1}}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"IUniswapV3Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"The pool interface is broken up into many smaller pieces","kind":"dev","methods":{"burn(int24,int24,uint128)":{"details":"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect","params":{"amount":"How much liquidity to burn","tickLower":"The lower tick of the position for which to burn liquidity","tickUpper":"The upper tick of the position for which to burn liquidity"},"returns":{"amount0":"The amount of token0 sent to the recipient","amount1":"The amount of token1 sent to the recipient"}},"collect(address,int24,int24,uint128,uint128)":{"details":"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.","params":{"amount0Requested":"How much token0 should be withdrawn from the fees owed","amount1Requested":"How much token1 should be withdrawn from the fees owed","recipient":"The address which should receive the fees collected","tickLower":"The lower tick of the position for which to collect fees","tickUpper":"The upper tick of the position for which to collect fees"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"factory()":{"returns":{"_0":"The contract address"}},"fee()":{"returns":{"_0":"The fee"}},"feeGrowthGlobal0X128()":{"details":"This value can overflow the uint256"},"feeGrowthGlobal1X128()":{"details":"This value can overflow the uint256"},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback","params":{"amount0":"The amount of token0 to send","amount1":"The amount of token1 to send","data":"Any data to be passed through to the callback","recipient":"The address which will receive the token0 and token1 amounts"}},"increaseObservationCardinalityNext(uint16)":{"details":"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.","params":{"observationCardinalityNext":"The desired minimum number of observations for the pool to store"}},"initialize(uint160)":{"details":"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value","params":{"sqrtPriceX96":"the initial sqrt price of the pool as a Q64.96"}},"liquidity()":{"details":"This value has no relationship to the total liquidity across all ticks"},"maxLiquidityPerTick()":{"details":"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"mint(address,int24,int24,uint128,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.","params":{"amount":"The amount of liquidity to mint","data":"Any data that should be passed through to the callback","recipient":"The address for which the liquidity will be created","tickLower":"The lower tick of the position in which to add liquidity","tickUpper":"The upper tick of the position in which to add liquidity"},"returns":{"amount0":"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback","amount1":"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"}},"observations(uint256)":{"details":"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.","params":{"index":"The element of the observations array to fetch"},"returns":{"blockTimestamp":"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"}},"observe(uint32[])":{"details":"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.","params":{"secondsAgos":"From how long ago each cumulative tick and liquidity value should be returned"},"returns":{"secondsPerLiquidityCumulativeX128s":"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp","tickCumulatives":"Cumulative tick values as of each `secondsAgos` from the current block timestamp"}},"positions(bytes32)":{"params":{"key":"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"},"returns":{"_liquidity":"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"}},"protocolFees()":{"details":"Protocol fees will never exceed uint128 max in either token"},"setFeeProtocol(uint8,uint8)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}},"slot0()":{"returns":{"sqrtPriceX96":"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"}},"snapshotCumulativesInside(int24,int24)":{"details":"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.","params":{"tickLower":"The lower tick of the range","tickUpper":"The upper tick of the range"},"returns":{"secondsInside":"The snapshot of seconds per liquidity for the range","secondsPerLiquidityInsideX128":"The snapshot of seconds per liquidity for the range","tickCumulativeInside":"The snapshot of the tick accumulator for the range"}},"swap(address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback","params":{"amountSpecified":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Any data to be passed through to the callback","recipient":"The address to receive the output of the swap","sqrtPriceLimitX96":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","zeroForOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}},"tickSpacing()":{"details":"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.","returns":{"_0":"The tick spacing"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}}},"title":"The interface for a Uniswap V3 Pool","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint8,uint8)":"8206a4d1","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when a position's liquidity is removed"},"Collect(address,address,int24,int24,uint128,uint128)":{"notice":"Emitted when fees are collected by the owner of a position"},"CollectProtocol(address,address,uint128,uint128)":{"notice":"Emitted when the collected protocol fees are withdrawn by the factory owner"},"Flash(address,address,uint256,uint256,uint256,uint256)":{"notice":"Emitted by the pool for any flashes of token0/token1"},"IncreaseObservationCardinalityNext(uint16,uint16)":{"notice":"Emitted by the pool for increases to the number of observations that can be stored"},"Initialize(uint160,int24)":{"notice":"Emitted exactly once by a pool when #initialize is first called on the pool"},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is minted for a given position"},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"notice":"Emitted when the protocol fee is changed by the pool"},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"notice":"Emitted by the pool for any swaps between token0 and token1"}},"kind":"user","methods":{"burn(int24,int24,uint128)":{"notice":"Burn liquidity from the sender and account tokens owed for the liquidity to the position"},"collect(address,int24,int24,uint128,uint128)":{"notice":"Collects tokens owed to a position"},"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"},"fee()":{"notice":"The pool's fee in hundredths of a bip, i.e. 1e-6"},"feeGrowthGlobal0X128()":{"notice":"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"},"feeGrowthGlobal1X128()":{"notice":"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"increaseObservationCardinalityNext(uint16)":{"notice":"Increase the maximum number of price and liquidity observations that this pool will store"},"initialize(uint160)":{"notice":"Sets the initial price for the pool"},"liquidity()":{"notice":"The currently in range liquidity available to the pool"},"maxLiquidityPerTick()":{"notice":"The maximum amount of position liquidity that can use any tick in the range"},"mint(address,int24,int24,uint128,bytes)":{"notice":"Adds liquidity for the given recipient/tickLower/tickUpper position"},"observations(uint256)":{"notice":"Returns data about a specific observation index"},"observe(uint32[])":{"notice":"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"},"positions(bytes32)":{"notice":"Returns the information about a position by the position's key"},"protocolFees()":{"notice":"The amounts of token0 and token1 that are owed to the protocol"},"setFeeProtocol(uint8,uint8)":{"notice":"Set the denominator of the protocol's % share of the fees"},"slot0()":{"notice":"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."},"snapshotCumulativesInside(int24,int24)":{"notice":"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"},"swap(address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0"},"tickBitmap(int16)":{"notice":"Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"tickSpacing()":{"notice":"The pool tick spacing"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"}},"notice":"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"IUniswapV3PoolActions":{"abi":[{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"burn(int24,int24,uint128)":{"details":"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect","params":{"amount":"How much liquidity to burn","tickLower":"The lower tick of the position for which to burn liquidity","tickUpper":"The upper tick of the position for which to burn liquidity"},"returns":{"amount0":"The amount of token0 sent to the recipient","amount1":"The amount of token1 sent to the recipient"}},"collect(address,int24,int24,uint128,uint128)":{"details":"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.","params":{"amount0Requested":"How much token0 should be withdrawn from the fees owed","amount1Requested":"How much token1 should be withdrawn from the fees owed","recipient":"The address which should receive the fees collected","tickLower":"The lower tick of the position for which to collect fees","tickUpper":"The upper tick of the position for which to collect fees"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback","params":{"amount0":"The amount of token0 to send","amount1":"The amount of token1 to send","data":"Any data to be passed through to the callback","recipient":"The address which will receive the token0 and token1 amounts"}},"increaseObservationCardinalityNext(uint16)":{"details":"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.","params":{"observationCardinalityNext":"The desired minimum number of observations for the pool to store"}},"initialize(uint160)":{"details":"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value","params":{"sqrtPriceX96":"the initial sqrt price of the pool as a Q64.96"}},"mint(address,int24,int24,uint128,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.","params":{"amount":"The amount of liquidity to mint","data":"Any data that should be passed through to the callback","recipient":"The address for which the liquidity will be created","tickLower":"The lower tick of the position in which to add liquidity","tickUpper":"The upper tick of the position in which to add liquidity"},"returns":{"amount0":"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback","amount1":"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"}},"swap(address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback","params":{"amountSpecified":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Any data to be passed through to the callback","recipient":"The address to receive the output of the swap","sqrtPriceLimitX96":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","zeroForOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}}},"title":"Permissionless pool actions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","swap(address,bool,int256,uint160,bytes)":"128acb08"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"burn(int24,int24,uint128)":{"notice":"Burn liquidity from the sender and account tokens owed for the liquidity to the position"},"collect(address,int24,int24,uint128,uint128)":{"notice":"Collects tokens owed to a position"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"increaseObservationCardinalityNext(uint16)":{"notice":"Increase the maximum number of price and liquidity observations that this pool will store"},"initialize(uint160)":{"notice":"Sets the initial price for the pool"},"mint(address,int24,int24,uint128,bytes)":{"notice":"Adds liquidity for the given recipient/tickLower/tickUpper position"},"swap(address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0"}},"notice":"Contains pool methods that can be called by anyone","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"IUniswapV3PoolDerivedState":{"abi":[{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"observe(uint32[])":{"details":"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.","params":{"secondsAgos":"From how long ago each cumulative tick and liquidity value should be returned"},"returns":{"secondsPerLiquidityCumulativeX128s":"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp","tickCumulatives":"Cumulative tick values as of each `secondsAgos` from the current block timestamp"}},"snapshotCumulativesInside(int24,int24)":{"details":"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.","params":{"tickLower":"The lower tick of the range","tickUpper":"The upper tick of the range"},"returns":{"secondsInside":"The snapshot of seconds per liquidity for the range","secondsPerLiquidityInsideX128":"The snapshot of seconds per liquidity for the range","tickCumulativeInside":"The snapshot of the tick accumulator for the range"}}},"title":"Pool state that is not stored","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"observe(uint32[])":"883bdbfd","snapshotCumulativesInside(int24,int24)":"a38807f2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"observe(uint32[])":{"notice":"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"},"snapshotCumulativesInside(int24,int24)":{"notice":"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"}},"notice":"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"IUniswapV3PoolEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"}],"devdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"details":"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect","params":{"amount":"The amount of liquidity to remove","amount0":"The amount of token0 withdrawn","amount1":"The amount of token1 withdrawn","owner":"The owner of the position for which liquidity is removed","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"Collect(address,address,int24,int24,uint128,uint128)":{"details":"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees","params":{"amount0":"The amount of token0 fees collected","amount1":"The amount of token1 fees collected","owner":"The owner of the position for which fees are collected","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"CollectProtocol(address,address,uint128,uint128)":{"params":{"amount0":"The amount of token1 protocol fees that is withdrawn","recipient":"The address that receives the collected protocol fees","sender":"The address that collects the protocol fees"}},"Flash(address,address,uint256,uint256,uint256,uint256)":{"params":{"amount0":"The amount of token0 that was flashed","amount1":"The amount of token1 that was flashed","paid0":"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee","paid1":"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee","recipient":"The address that received the tokens from flash","sender":"The address that initiated the swap call, and that received the callback"}},"IncreaseObservationCardinalityNext(uint16,uint16)":{"details":"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.","params":{"observationCardinalityNextNew":"The updated value of the next observation cardinality","observationCardinalityNextOld":"The previous value of the next observation cardinality"}},"Initialize(uint160,int24)":{"details":"Mint/Burn/Swap cannot be emitted by the pool before Initialize","params":{"sqrtPriceX96":"The initial sqrt price of the pool, as a Q64.96","tick":"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"}},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"params":{"amount":"The amount of liquidity minted to the position range","amount0":"How much token0 was required for the minted liquidity","amount1":"How much token1 was required for the minted liquidity","owner":"The owner of the position and recipient of any minted liquidity","sender":"The address that minted the liquidity","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"params":{"feeProtocol0New":"The updated value of the token0 protocol fee","feeProtocol0Old":"The previous value of the token0 protocol fee","feeProtocol1New":"The updated value of the token1 protocol fee","feeProtocol1Old":"The previous value of the token1 protocol fee"}},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"params":{"amount0":"The delta of the token0 balance of the pool","amount1":"The delta of the token1 balance of the pool","liquidity":"The liquidity of the pool after the swap","recipient":"The address that received the output of the swap","sender":"The address that initiated the swap call, and that received the callback","sqrtPriceX96":"The sqrt(price) of the pool after the swap, as a Q64.96","tick":"The log base 1.0001 of price of the pool after the swap"}}},"kind":"dev","methods":{},"title":"Events emitted by a pool","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when a position's liquidity is removed"},"Collect(address,address,int24,int24,uint128,uint128)":{"notice":"Emitted when fees are collected by the owner of a position"},"CollectProtocol(address,address,uint128,uint128)":{"notice":"Emitted when the collected protocol fees are withdrawn by the factory owner"},"Flash(address,address,uint256,uint256,uint256,uint256)":{"notice":"Emitted by the pool for any flashes of token0/token1"},"IncreaseObservationCardinalityNext(uint16,uint16)":{"notice":"Emitted by the pool for increases to the number of observations that can be stored"},"Initialize(uint160,int24)":{"notice":"Emitted exactly once by a pool when #initialize is first called on the pool"},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is minted for a given position"},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"notice":"Emitted when the protocol fee is changed by the pool"},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"notice":"Emitted by the pool for any swaps between token0 and token1"}},"kind":"user","methods":{},"notice":"Contains all events emitted by the pool","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"IUniswapV3PoolImmutables":{"abi":[{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"factory()":{"returns":{"_0":"The contract address"}},"fee()":{"returns":{"_0":"The fee"}},"maxLiquidityPerTick()":{"details":"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"tickSpacing()":{"details":"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.","returns":{"_0":"The tick spacing"}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}}},"title":"Pool state that never changes","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"factory()":"c45a0155","fee()":"ddca3f43","maxLiquidityPerTick()":"70cf754a","tickSpacing()":"d0c93a7c","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"},"fee()":{"notice":"The pool's fee in hundredths of a bip, i.e. 1e-6"},"maxLiquidityPerTick()":{"notice":"The maximum amount of position liquidity that can use any tick in the range"},"tickSpacing()":{"notice":"The pool tick spacing"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"}},"notice":"These parameters are fixed for a pool forever, i.e., the methods will always return the same values","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"IUniswapV3PoolOwnerActions":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"setFeeProtocol(uint8,uint8)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}}},"title":"Permissioned pool actions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint8,uint8)":"8206a4d1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"setFeeProtocol(uint8,uint8)":{"notice":"Set the denominator of the protocol's % share of the fees"}},"notice":"Contains pool methods that may only be called by the factory owner","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"IUniswapV3PoolState":{"abi":[{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"feeGrowthGlobal0X128()":{"details":"This value can overflow the uint256"},"feeGrowthGlobal1X128()":{"details":"This value can overflow the uint256"},"liquidity()":{"details":"This value has no relationship to the total liquidity across all ticks"},"observations(uint256)":{"details":"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.","params":{"index":"The element of the observations array to fetch"},"returns":{"blockTimestamp":"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"}},"positions(bytes32)":{"params":{"key":"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"},"returns":{"_liquidity":"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"}},"protocolFees()":{"details":"Protocol fees will never exceed uint128 max in either token"},"slot0()":{"returns":{"sqrtPriceX96":"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."}}},"title":"Pool state that can change","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","liquidity()":"1a686502","observations(uint256)":"252c09d7","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","slot0()":"3850c7bd","tickBitmap(int16)":"5339c296","ticks(int24)":"f30dba93"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"feeGrowthGlobal0X128()":{"notice":"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"},"feeGrowthGlobal1X128()":{"notice":"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"},"liquidity()":{"notice":"The currently in range liquidity available to the pool"},"observations(uint256)":{"notice":"Returns data about a specific observation index"},"positions(bytes32)":{"notice":"Returns the information about a position by the position's key"},"protocolFees()":{"notice":"The amounts of token0 and token1 that are owed to the protocol"},"slot0()":{"notice":"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."},"tickBitmap(int16)":{"notice":"Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"}},"notice":"These methods compose the pool's state, and can change with any frequency including multiple times per transaction","version":1}}},"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol":{"FixedPoint96":{"abi":[],"devdoc":{"details":"Used in SqrtPriceMath.sol","kind":"dev","methods":{},"title":"FixedPoint96","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8ba9e4957f2e3449b5b4c6e98facf6c0f0a7fce1ee6990a8b3a8de40014cd0264736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xBA SWAP15 0x49 JUMPI CALLCODE 0xE3 DIFFICULTY SWAP12 JUMPDEST 0x4C PUSH15 0x98FACF6C0F0A7FCE1EE6990A8B3A8D 0xE4 STOP EQ 0xCD MUL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"245:134:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;245:134:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8ba9e4957f2e3449b5b4c6e98facf6c0f0a7fce1ee6990a8b3a8de40014cd0264736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xBA SWAP15 0x49 JUMPI CALLCODE 0xE3 DIFFICULTY SWAP12 JUMPDEST 0x4C PUSH15 0x98FACF6C0F0A7FCE1EE6990A8B3A8D 0xE4 STOP EQ 0xCD MUL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"245:134:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.4.0;\\n\\n/// @title FixedPoint96\\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\\n/// @dev Used in SqrtPriceMath.sol\\nlibrary FixedPoint96 {\\n    uint8 internal constant RESOLUTION = 96;\\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\\n}\\n\",\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)","version":1}}},"contracts/ChainlinkPriceFeedIntegration.sol":{"ChainlinkPriceFeedIntegration":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"Forbidden","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"InvalidFeed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"manager","type":"address"}],"name":"SetManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"feed","type":"address"}],"name":"SetPriceFeed","type":"event"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_manager","type":"address"}],"name":"setManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_feed","type":"address"}],"name":"setPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1402":{"entryPoint":null,"id":1402,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610409806100326000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063481c6a751461005c57806376e112861461008c578063aaf5eb68146100a1578063ac41865a146100ba578063d0ebdbe7146100cd575b600080fd5b60005461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f61009a366004610338565b6100e0565b005b6100ac6305f5e10081565b604051908152602001610083565b6100ac6100c8366004610338565b61017d565b61009f6100db36600461031d565b6101c2565b6000546001600160a01b031633146101125760405163a59d7f4d60e01b81523360048201526024015b60405180910390fd5b6001600160a01b0382811660008181526001602090815260409182902080546001600160a01b031916948616948517905581519283528201929092527fc02f01e22efc017c1c952d0eef1a8fc038571f14ea5a285d79d1d7ba87d8b001910160405180910390a15050565b60008061018984610243565b905080156101bb57600061019c84610243565b9050816101ad6305f5e100836103a6565b6101b79190610384565b9250505b5092915050565b6000546001600160a01b031633146101ef5760405163a59d7f4d60e01b8152336004820152602401610109565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f54a6385aa0292b04e1ef8513253c17d1863f7cdfc87029d77fd55cc4c2e717e29060200160405180910390a150565b6001600160a01b038082166000908152600160205260408120549091168061028957604051636787b55560e01b81526001600160a01b0384166004820152602401610109565b806001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa919061036b565b9392505050565b80356001600160a01b038116811461031857600080fd5b919050565b60006020828403121561032f57600080fd5b6102fa82610301565b6000806040838503121561034b57600080fd5b61035483610301565b915061036260208401610301565b90509250929050565b60006020828403121561037d57600080fd5b5051919050565b6000826103a157634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156103ce57634e487b7160e01b600052601160045260246000fd5b50029056fea2646970667358221220a846966990b3a5fbb52cb72805213de5145a43360fcb3e461329acfd1c939eae64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x409 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xD0EBDBE7 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x338 JUMP JUMPDEST PUSH2 0xE0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAC PUSH4 0x5F5E100 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xAC PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST PUSH2 0x9F PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA59D7F4D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xC02F01E22EFC017C1C952D0EEF1A8FC038571F14EA5A285D79D1D7BA87D8B001 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x189 DUP5 PUSH2 0x243 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 PUSH2 0x19C DUP5 PUSH2 0x243 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x1AD PUSH4 0x5F5E100 DUP4 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA59D7F4D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x54A6385AA0292B04E1EF8513253C17D1863F7CDFC87029D77FD55CC4C2E717E2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6787B555 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x36B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP3 PUSH2 0x301 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x354 DUP4 PUSH2 0x301 JUMP JUMPDEST SWAP2 POP PUSH2 0x362 PUSH1 0x20 DUP5 ADD PUSH2 0x301 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 CHAINID SWAP7 PUSH10 0x90B3A5FBB52CB7280521 RETURNDATASIZE 0xE5 EQ GAS NUMBER CALLDATASIZE 0xF 0xCB RETURNDATACOPY CHAINID SGT 0x29 0xAC REVERT SHR SWAP4 SWAP15 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"168:1402:14:-:0;;;529:51;;;;;;;;;-1:-1:-1;553:7:14;:20;;-1:-1:-1;;;;;;553:20:14;563:10;553:20;;;168:1402;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PRECISION_1369":{"entryPoint":null,"id":1369,"parameterSlots":0,"returnSlots":0},"@_price_1486":{"entryPoint":579,"id":1486,"parameterSlots":1,"returnSlots":1},"@getPrice_1523":{"entryPoint":381,"id":1523,"parameterSlots":2,"returnSlots":1},"@manager_1371":{"entryPoint":null,"id":1371,"parameterSlots":0,"returnSlots":0},"@setManager_1432":{"entryPoint":450,"id":1432,"parameterSlots":1,"returnSlots":0},"@setPriceFeed_1453":{"entryPoint":224,"id":1453,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":769,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":824,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":875,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":900,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":934,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2025:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:36","statements":[{"nodeType":"YulAssignment","src":"73:29:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:36"},"nodeType":"YulFunctionCall","src":"82:20:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:36"}]},{"body":{"nodeType":"YulBlock","src":"165:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:36"},"nodeType":"YulFunctionCall","src":"167:12:36"},"nodeType":"YulExpressionStatement","src":"167:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:36"},"nodeType":"YulFunctionCall","src":"146:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:36"},"nodeType":"YulFunctionCall","src":"142:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:36"},"nodeType":"YulFunctionCall","src":"131:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:36"},"nodeType":"YulFunctionCall","src":"121:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:36"},"nodeType":"YulFunctionCall","src":"114:50:36"},"nodeType":"YulIf","src":"111:70:36"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:36","type":""}],"src":"14:173:36"},{"body":{"nodeType":"YulBlock","src":"262:116:36","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:36"},"nodeType":"YulFunctionCall","src":"310:12:36"},"nodeType":"YulExpressionStatement","src":"310:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:36"},"nodeType":"YulFunctionCall","src":"279:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:36"},"nodeType":"YulFunctionCall","src":"275:32:36"},"nodeType":"YulIf","src":"272:52:36"},{"nodeType":"YulAssignment","src":"333:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:36"},"nodeType":"YulFunctionCall","src":"343:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:36"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:36","type":""}],"src":"192:186:36"},{"body":{"nodeType":"YulBlock","src":"470:173:36","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:36"},"nodeType":"YulFunctionCall","src":"518:12:36"},"nodeType":"YulExpressionStatement","src":"518:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:36"},"nodeType":"YulFunctionCall","src":"487:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:36"},"nodeType":"YulFunctionCall","src":"483:32:36"},"nodeType":"YulIf","src":"480:52:36"},{"nodeType":"YulAssignment","src":"541:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:36"},"nodeType":"YulFunctionCall","src":"551:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:36"}]},{"nodeType":"YulAssignment","src":"589:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:36"},"nodeType":"YulFunctionCall","src":"618:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"599:18:36"},"nodeType":"YulFunctionCall","src":"599:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:36","type":""}],"src":"383:260:36"},{"body":{"nodeType":"YulBlock","src":"729:103:36","statements":[{"body":{"nodeType":"YulBlock","src":"775:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"784:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"787:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"777:6:36"},"nodeType":"YulFunctionCall","src":"777:12:36"},"nodeType":"YulExpressionStatement","src":"777:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"759:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"746:3:36"},"nodeType":"YulFunctionCall","src":"746:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"742:3:36"},"nodeType":"YulFunctionCall","src":"742:32:36"},"nodeType":"YulIf","src":"739:52:36"},{"nodeType":"YulAssignment","src":"800:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"816:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"810:5:36"},"nodeType":"YulFunctionCall","src":"810:16:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"800:6:36"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"695:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"706:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"718:6:36","type":""}],"src":"648:184:36"},{"body":{"nodeType":"YulBlock","src":"938:102:36","statements":[{"nodeType":"YulAssignment","src":"948:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"960:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"971:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"956:3:36"},"nodeType":"YulFunctionCall","src":"956:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"948:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"990:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1005:6:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1021:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1026:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1017:3:36"},"nodeType":"YulFunctionCall","src":"1017:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"1030:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1013:3:36"},"nodeType":"YulFunctionCall","src":"1013:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1001:3:36"},"nodeType":"YulFunctionCall","src":"1001:32:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"983:6:36"},"nodeType":"YulFunctionCall","src":"983:51:36"},"nodeType":"YulExpressionStatement","src":"983:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"907:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"918:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"929:4:36","type":""}],"src":"837:203:36"},{"body":{"nodeType":"YulBlock","src":"1174:175:36","statements":[{"nodeType":"YulAssignment","src":"1184:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1196:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1207:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1192:3:36"},"nodeType":"YulFunctionCall","src":"1192:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1184:4:36"}]},{"nodeType":"YulVariableDeclaration","src":"1219:29:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1242:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:36"},"nodeType":"YulFunctionCall","src":"1233:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"1246:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:36"},"nodeType":"YulFunctionCall","src":"1229:19:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:36","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1264:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1279:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1287:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:36"},"nodeType":"YulFunctionCall","src":"1275:15:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1257:6:36"},"nodeType":"YulFunctionCall","src":"1257:34:36"},"nodeType":"YulExpressionStatement","src":"1257:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1311:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1307:3:36"},"nodeType":"YulFunctionCall","src":"1307:18:36"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1331:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1339:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1327:3:36"},"nodeType":"YulFunctionCall","src":"1327:15:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1300:6:36"},"nodeType":"YulFunctionCall","src":"1300:43:36"},"nodeType":"YulExpressionStatement","src":"1300:43:36"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1135:9:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1146:6:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1154:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1165:4:36","type":""}],"src":"1045:304:36"},{"body":{"nodeType":"YulBlock","src":"1455:76:36","statements":[{"nodeType":"YulAssignment","src":"1465:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1488:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:36"},"nodeType":"YulFunctionCall","src":"1473:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1465:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1507:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"1518:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1500:6:36"},"nodeType":"YulFunctionCall","src":"1500:25:36"},"nodeType":"YulExpressionStatement","src":"1500:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1424:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1435:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1446:4:36","type":""}],"src":"1354:177:36"},{"body":{"nodeType":"YulBlock","src":"1582:171:36","statements":[{"body":{"nodeType":"YulBlock","src":"1613:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1634:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1641:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1646:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1637:3:36"},"nodeType":"YulFunctionCall","src":"1637:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1627:6:36"},"nodeType":"YulFunctionCall","src":"1627:31:36"},"nodeType":"YulExpressionStatement","src":"1627:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1678:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1681:4:36","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1671:6:36"},"nodeType":"YulFunctionCall","src":"1671:15:36"},"nodeType":"YulExpressionStatement","src":"1671:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1706:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1709:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1699:6:36"},"nodeType":"YulFunctionCall","src":"1699:15:36"},"nodeType":"YulExpressionStatement","src":"1699:15:36"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1602:1:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1595:6:36"},"nodeType":"YulFunctionCall","src":"1595:9:36"},"nodeType":"YulIf","src":"1592:132:36"},{"nodeType":"YulAssignment","src":"1733:14:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1742:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"1745:1:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1738:3:36"},"nodeType":"YulFunctionCall","src":"1738:9:36"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"1733:1:36"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1567:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"1570:1:36","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"1576:1:36","type":""}],"src":"1536:217:36"},{"body":{"nodeType":"YulBlock","src":"1810:213:36","statements":[{"body":{"nodeType":"YulBlock","src":"1877:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1898:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1905:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1910:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1901:3:36"},"nodeType":"YulFunctionCall","src":"1901:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1891:6:36"},"nodeType":"YulFunctionCall","src":"1891:31:36"},"nodeType":"YulExpressionStatement","src":"1891:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1942:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1945:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1935:6:36"},"nodeType":"YulFunctionCall","src":"1935:15:36"},"nodeType":"YulExpressionStatement","src":"1935:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1970:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1973:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1963:6:36"},"nodeType":"YulFunctionCall","src":"1963:15:36"},"nodeType":"YulExpressionStatement","src":"1963:15:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1841:1:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1834:6:36"},"nodeType":"YulFunctionCall","src":"1834:9:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1827:6:36"},"nodeType":"YulFunctionCall","src":"1827:17:36"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1849:1:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1860:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1856:3:36"},"nodeType":"YulFunctionCall","src":"1856:6:36"},{"name":"x","nodeType":"YulIdentifier","src":"1864:1:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1852:3:36"},"nodeType":"YulFunctionCall","src":"1852:14:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1846:2:36"},"nodeType":"YulFunctionCall","src":"1846:21:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1823:3:36"},"nodeType":"YulFunctionCall","src":"1823:45:36"},"nodeType":"YulIf","src":"1820:168:36"},{"nodeType":"YulAssignment","src":"1997:20:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2012:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"2015:1:36"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2008:3:36"},"nodeType":"YulFunctionCall","src":"2008:9:36"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"1997:7:36"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1789:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"1792:1:36","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"1798:7:36","type":""}],"src":"1758:265:36"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c8063481c6a751461005c57806376e112861461008c578063aaf5eb68146100a1578063ac41865a146100ba578063d0ebdbe7146100cd575b600080fd5b60005461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f61009a366004610338565b6100e0565b005b6100ac6305f5e10081565b604051908152602001610083565b6100ac6100c8366004610338565b61017d565b61009f6100db36600461031d565b6101c2565b6000546001600160a01b031633146101125760405163a59d7f4d60e01b81523360048201526024015b60405180910390fd5b6001600160a01b0382811660008181526001602090815260409182902080546001600160a01b031916948616948517905581519283528201929092527fc02f01e22efc017c1c952d0eef1a8fc038571f14ea5a285d79d1d7ba87d8b001910160405180910390a15050565b60008061018984610243565b905080156101bb57600061019c84610243565b9050816101ad6305f5e100836103a6565b6101b79190610384565b9250505b5092915050565b6000546001600160a01b031633146101ef5760405163a59d7f4d60e01b8152336004820152602401610109565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f54a6385aa0292b04e1ef8513253c17d1863f7cdfc87029d77fd55cc4c2e717e29060200160405180910390a150565b6001600160a01b038082166000908152600160205260408120549091168061028957604051636787b55560e01b81526001600160a01b0384166004820152602401610109565b806001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa919061036b565b9392505050565b80356001600160a01b038116811461031857600080fd5b919050565b60006020828403121561032f57600080fd5b6102fa82610301565b6000806040838503121561034b57600080fd5b61035483610301565b915061036260208401610301565b90509250929050565b60006020828403121561037d57600080fd5b5051919050565b6000826103a157634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156103ce57634e487b7160e01b600052601160045260246000fd5b50029056fea2646970667358221220a846966990b3a5fbb52cb72805213de5145a43360fcb3e461329acfd1c939eae64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xD0EBDBE7 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x338 JUMP JUMPDEST PUSH2 0xE0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAC PUSH4 0x5F5E100 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xAC PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST PUSH2 0x9F PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA59D7F4D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xC02F01E22EFC017C1C952D0EEF1A8FC038571F14EA5A285D79D1D7BA87D8B001 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x189 DUP5 PUSH2 0x243 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 PUSH2 0x19C DUP5 PUSH2 0x243 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x1AD PUSH4 0x5F5E100 DUP4 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA59D7F4D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x54A6385AA0292B04E1EF8513253C17D1863F7CDFC87029D77FD55CC4C2E717E2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6787B555 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x36B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP3 PUSH2 0x301 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x354 DUP4 PUSH2 0x301 JUMP JUMPDEST SWAP2 POP PUSH2 0x362 PUSH1 0x20 DUP5 ADD PUSH2 0x301 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 CHAINID SWAP7 PUSH10 0x90B3A5FBB52CB7280521 RETURNDATASIZE 0xE5 EQ GAS NUMBER CALLDATASIZE 0xF 0xCB RETURNDATACOPY CHAINID SGT 0x29 0xAC REVERT SHR SWAP4 SWAP15 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"168:1402:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:22;;;;;-1:-1:-1;;;;;292:22:14;;;;;;-1:-1:-1;;;;;1001:32:36;;;983:51;;971:2;956:18;292:22:14;;;;;;;;834:155;;;;;;:::i;:::-;;:::i;:::-;;238:48;;283:3;238:48;;;;;1500:25:36;;;1488:2;1473:18;238:48:14;1354:177:36;1234:334:14;;;;;;:::i;:::-;;:::i;698:130::-;;;;;;:::i;:::-;;:::i;834:155::-;637:7;;-1:-1:-1;;;;;637:7:14;623:10;:21;619:55;;653:21;;-1:-1:-1;;;653:21:14;;663:10;653:21;;;983:51:36;956:18;;653:21:14;;;;;;;;619:55;-1:-1:-1;;;;;918:13:14;;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;;;:21;;-1:-1:-1;;;;;;918:21:14::1;::::0;;::::1;::::0;;::::1;::::0;;955:27;;1257:34:36;;;1307:18;;1300:43;;;;955:27:14::1;::::0;1192:18:36;955:27:14::1;;;;;;;834:155:::0;;:::o;1234:334::-;1347:13;1372:17;1392:18;1399:10;1392:6;:18::i;:::-;1372:38;-1:-1:-1;1424:13:14;;1420:142;;1453:18;1474:19;1481:11;1474:6;:19::i;:::-;1453:40;-1:-1:-1;1542:9:14;1516:22;283:3;1453:40;1516:22;:::i;:::-;1515:36;;;;:::i;:::-;1507:44;;1439:123;1420:142;1362:206;1234:334;;;;:::o;698:130::-;637:7;;-1:-1:-1;;;;;637:7:14;623:10;:21;619:55;;653:21;;-1:-1:-1;;;653:21:14;;663:10;653:21;;;983:51:36;956:18;;653:21:14;837:203:36;619:55:14;767:7:::1;:18:::0;;-1:-1:-1;;;;;;767:18:14::1;-1:-1:-1::0;;;;;767:18:14;::::1;::::0;;::::1;::::0;;;801:20:::1;::::0;983:51:36;;;801:20:14::1;::::0;971:2:36;956:18;801:20:14::1;;;;;;;698:130:::0;:::o;995:233::-;-1:-1:-1;;;;;1090:13:14;;;1050;1090;;;:5;:13;;;;;;1050;;1090;1117:18;1113:50;;1144:19;;-1:-1:-1;;;1144:19:14;;-1:-1:-1;;;;;1001:32:36;;1144:19:14;;;983:51:36;956:18;;1144:19:14;837:203:36;1113:50:14;1201:4;-1:-1:-1;;;;;1181:38:14;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1173:48;995:233;-1:-1:-1;;;995:233:14:o;14:173:36:-;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:184::-;718:6;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;-1:-1:-1;810:16:36;;648:184;-1:-1:-1;648:184:36:o;1536:217::-;1576:1;1602;1592:132;;1646:10;1641:3;1637:20;1634:1;1627:31;1681:4;1678:1;1671:15;1709:4;1706:1;1699:15;1592:132;-1:-1:-1;1738:9:36;;1536:217::o;1758:265::-;1798:7;1864:1;1860;1856:6;1852:14;1849:1;1846:21;1841:1;1834:9;1827:17;1823:45;1820:168;;;1910:10;1905:3;1901:20;1898:1;1891:31;1945:4;1942:1;1935:15;1973:4;1970:1;1963:15;1820:168;-1:-1:-1;2008:9:36;;1758:265::o"},"gasEstimates":{"creation":{"codeDepositCost":"206600","executionCost":"24486","totalCost":"231086"},"external":{"PRECISION()":"217","getPrice(address,address)":"infinite","manager()":"2304","setManager(address)":"27830","setPriceFeed(address,address)":"infinite"},"internal":{"_price(address)":"infinite"}},"methodIdentifiers":{"PRECISION()":"aaf5eb68","getPrice(address,address)":"ac41865a","manager()":"481c6a75","setManager(address)":"d0ebdbe7","setPriceFeed(address,address)":"76e11286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Forbidden\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"InvalidFeed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"SetManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"SetPriceFeed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChainlinkPriceFeedIntegration.sol\":\"ChainlinkPriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ChainlinkPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\nimport \\\"./interfaces/IPriceFeedIntegration.sol\\\";\\nimport \\\"./interfaces/IChainlinkPriceFeed.sol\\\";\\n\\ncontract ChainlinkPriceFeedIntegration is IPriceFeedIntegration {\\n    uint256 public constant override PRECISION = 1e8;\\n    address public manager;\\n    mapping(address => address) feeds;\\n\\n    event SetManager(address manager);\\n    event SetPriceFeed(address token, address feed);\\n\\n    error Forbidden(address sender);\\n    error InvalidFeed(address token);\\n\\n    constructor() {\\n        manager = msg.sender;\\n    }\\n\\n    modifier onlyManager() {\\n        if (msg.sender != manager) revert Forbidden(msg.sender);\\n        _;\\n    }\\n\\n    function setManager(address _manager) external onlyManager {\\n        manager = _manager;\\n\\n        emit SetManager(_manager);\\n    }\\n\\n    function setPriceFeed(address _token, address _feed) external onlyManager {\\n        feeds[_token] = _feed;\\n\\n        emit SetPriceFeed(_token, _feed);\\n    }\\n\\n    function _price(address _token) internal view returns (uint256 price) {\\n        address feed = feeds[_token];\\n        if (feed == address(0)) revert InvalidFeed(_token);\\n        price = IChainlinkPriceFeed(feed).latestAnswer();\\n    }\\n\\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view override returns (uint256 price) {\\n        uint256 basePrice = _price(_baseToken);\\n        if (basePrice > 0) {\\n            uint256 quotePrice = _price(_quoteToken);\\n            price = (quotePrice * PRECISION) / basePrice;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xad66cfc2b6bc36d00b2443dd6a2feedb7476baa5df83f65c87c248d0e8a15e81\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IChainlinkPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IChainlinkPriceFeed {\\n    function latestAnswer() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd5423817a16417540a692840c74370c3e808509460f61031d58bcc6a027f1358\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeedIntegration {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1371,"contract":"contracts/ChainlinkPriceFeedIntegration.sol:ChainlinkPriceFeedIntegration","label":"manager","offset":0,"slot":"0","type":"t_address"},{"astId":1375,"contract":"contracts/ChainlinkPriceFeedIntegration.sol:ChainlinkPriceFeedIntegration","label":"feeds","offset":0,"slot":"1","type":"t_mapping(t_address,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/GMXPriceFeedIntegration.sol":{"GMXPriceFeedIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_feed","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1546":{"entryPoint":null,"id":1546,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":68,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:36","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:36"},"nodeType":"YulFunctionCall","src":"143:12:36"},"nodeType":"YulExpressionStatement","src":"143:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:36"},"nodeType":"YulFunctionCall","src":"112:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:36"},"nodeType":"YulFunctionCall","src":"108:32:36"},"nodeType":"YulIf","src":"105:52:36"},{"nodeType":"YulVariableDeclaration","src":"166:29:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:36"},"nodeType":"YulFunctionCall","src":"179:16:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:36"},"nodeType":"YulFunctionCall","src":"260:12:36"},"nodeType":"YulExpressionStatement","src":"260:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:36"},"nodeType":"YulFunctionCall","src":"239:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:36"},"nodeType":"YulFunctionCall","src":"235:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:36"},"nodeType":"YulFunctionCall","src":"224:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:36"},"nodeType":"YulFunctionCall","src":"214:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:36"},"nodeType":"YulFunctionCall","src":"207:50:36"},"nodeType":"YulIf","src":"204:70:36"},{"nodeType":"YulAssignment","src":"283:15:36","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:36"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:36","type":""}],"src":"14:290:36"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161033138038061033183398101604081905261002f91610044565b60601b6001600160601b031916608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160601c61029961009860003960008181604b015261012a01526102996000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806337a7b7d814610046578063aaf5eb681461008a578063ac41865a146100ac575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009e6c0c9f2c9cd04674edea4000000081565b604051908152602001610081565b61009e6100ba3660046101c8565b6000806100c684610108565b905080156101015760006100d984610108565b9050816100f36c0c9f2c9cd04674edea4000000083610236565b6100fd9190610214565b9250505b5092915050565b60405163cfed246b60e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063cfed246b9060240160206040518083038186803b15801561016e57600080fd5b505afa158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a691906101fb565b92915050565b80356001600160a01b03811681146101c357600080fd5b919050565b600080604083850312156101db57600080fd5b6101e4836101ac565b91506101f2602084016101ac565b90509250929050565b60006020828403121561020d57600080fd5b5051919050565b60008261023157634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561025e57634e487b7160e01b600052601160045260246000fd5b50029056fea264697066735822122063c4829bd1ea15a6e909975fa7d75c72f9e10da456dbaa3b3ea7a3442231a13964736f6c63430008070033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x331 CODESIZE SUB DUP1 PUSH2 0x331 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x44 JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH2 0x74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x299 PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x4B ADD MSTORE PUSH2 0x12A ADD MSTORE PUSH2 0x299 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37A7B7D8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x81 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC6 DUP5 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 PUSH2 0xD9 DUP5 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xF3 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP4 PUSH2 0x236 JUMP JUMPDEST PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCFED246B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xCFED246B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x182 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E4 DUP4 PUSH2 0x1AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2 PUSH1 0x20 DUP5 ADD PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x231 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC4829BD1 0xEA ISZERO 0xA6 0xE9 MULMOD SWAP8 0x5F 0xA7 0xD7 0x5C PUSH19 0xF9E10DA456DBAA3B3EA7A3442231A13964736F PUSH13 0x63430008070033000000000000 ","sourceMap":"162:734:15:-:0;;;363:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;400:12;;-1:-1:-1;;;;;;400:12:15;;;162:734;;14:290:36;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:36;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:36:o;:::-;162:734:15;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PRECISION_1534":{"entryPoint":null,"id":1534,"parameterSlots":0,"returnSlots":0},"@_price_1563":{"entryPoint":264,"id":1563,"parameterSlots":1,"returnSlots":1},"@feed_1536":{"entryPoint":null,"id":1536,"parameterSlots":0,"returnSlots":0},"@getPrice_1600":{"entryPoint":null,"id":1600,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":428,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":456,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":507,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":532,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":566,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1525:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:36","statements":[{"nodeType":"YulAssignment","src":"73:29:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:36"},"nodeType":"YulFunctionCall","src":"82:20:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:36"}]},{"body":{"nodeType":"YulBlock","src":"165:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:36"},"nodeType":"YulFunctionCall","src":"167:12:36"},"nodeType":"YulExpressionStatement","src":"167:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:36"},"nodeType":"YulFunctionCall","src":"146:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:36"},"nodeType":"YulFunctionCall","src":"142:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:36"},"nodeType":"YulFunctionCall","src":"131:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:36"},"nodeType":"YulFunctionCall","src":"121:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:36"},"nodeType":"YulFunctionCall","src":"114:50:36"},"nodeType":"YulIf","src":"111:70:36"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:36","type":""}],"src":"14:173:36"},{"body":{"nodeType":"YulBlock","src":"279:173:36","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:36"},"nodeType":"YulFunctionCall","src":"327:12:36"},"nodeType":"YulExpressionStatement","src":"327:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:36"},"nodeType":"YulFunctionCall","src":"296:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:36"},"nodeType":"YulFunctionCall","src":"292:32:36"},"nodeType":"YulIf","src":"289:52:36"},{"nodeType":"YulAssignment","src":"350:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:36"},"nodeType":"YulFunctionCall","src":"360:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:36"}]},{"nodeType":"YulAssignment","src":"398:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"431:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"442:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"427:3:36"},"nodeType":"YulFunctionCall","src":"427:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"408:18:36"},"nodeType":"YulFunctionCall","src":"408:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:36","type":""}],"src":"192:260:36"},{"body":{"nodeType":"YulBlock","src":"538:103:36","statements":[{"body":{"nodeType":"YulBlock","src":"584:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"593:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"596:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"586:6:36"},"nodeType":"YulFunctionCall","src":"586:12:36"},"nodeType":"YulExpressionStatement","src":"586:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"559:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"568:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"555:3:36"},"nodeType":"YulFunctionCall","src":"555:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"580:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"551:3:36"},"nodeType":"YulFunctionCall","src":"551:32:36"},"nodeType":"YulIf","src":"548:52:36"},{"nodeType":"YulAssignment","src":"609:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"625:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"619:5:36"},"nodeType":"YulFunctionCall","src":"619:16:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"609:6:36"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"504:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"515:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"527:6:36","type":""}],"src":"457:184:36"},{"body":{"nodeType":"YulBlock","src":"747:102:36","statements":[{"nodeType":"YulAssignment","src":"757:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"769:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"780:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:36"},"nodeType":"YulFunctionCall","src":"765:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"757:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"799:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"814:6:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"826:3:36"},"nodeType":"YulFunctionCall","src":"826:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"839:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"822:3:36"},"nodeType":"YulFunctionCall","src":"822:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"810:3:36"},"nodeType":"YulFunctionCall","src":"810:32:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"792:6:36"},"nodeType":"YulFunctionCall","src":"792:51:36"},"nodeType":"YulExpressionStatement","src":"792:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"716:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"727:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"738:4:36","type":""}],"src":"646:203:36"},{"body":{"nodeType":"YulBlock","src":"955:76:36","statements":[{"nodeType":"YulAssignment","src":"965:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"977:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"988:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"973:3:36"},"nodeType":"YulFunctionCall","src":"973:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"965:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1007:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"1018:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1000:6:36"},"nodeType":"YulFunctionCall","src":"1000:25:36"},"nodeType":"YulExpressionStatement","src":"1000:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"924:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"935:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"946:4:36","type":""}],"src":"854:177:36"},{"body":{"nodeType":"YulBlock","src":"1082:171:36","statements":[{"body":{"nodeType":"YulBlock","src":"1113:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1141:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1146:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1137:3:36"},"nodeType":"YulFunctionCall","src":"1137:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:36"},"nodeType":"YulFunctionCall","src":"1127:31:36"},"nodeType":"YulExpressionStatement","src":"1127:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1178:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1181:4:36","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1171:6:36"},"nodeType":"YulFunctionCall","src":"1171:15:36"},"nodeType":"YulExpressionStatement","src":"1171:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1206:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1209:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1199:6:36"},"nodeType":"YulFunctionCall","src":"1199:15:36"},"nodeType":"YulExpressionStatement","src":"1199:15:36"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1102:1:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1095:6:36"},"nodeType":"YulFunctionCall","src":"1095:9:36"},"nodeType":"YulIf","src":"1092:132:36"},{"nodeType":"YulAssignment","src":"1233:14:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1242:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"1245:1:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1238:3:36"},"nodeType":"YulFunctionCall","src":"1238:9:36"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"1233:1:36"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1067:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"1070:1:36","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"1076:1:36","type":""}],"src":"1036:217:36"},{"body":{"nodeType":"YulBlock","src":"1310:213:36","statements":[{"body":{"nodeType":"YulBlock","src":"1377:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1398:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1405:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1410:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1401:3:36"},"nodeType":"YulFunctionCall","src":"1401:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:36"},"nodeType":"YulFunctionCall","src":"1391:31:36"},"nodeType":"YulExpressionStatement","src":"1391:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1442:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1445:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1435:6:36"},"nodeType":"YulFunctionCall","src":"1435:15:36"},"nodeType":"YulExpressionStatement","src":"1435:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1470:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1473:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1463:6:36"},"nodeType":"YulFunctionCall","src":"1463:15:36"},"nodeType":"YulExpressionStatement","src":"1463:15:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1341:1:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1334:6:36"},"nodeType":"YulFunctionCall","src":"1334:9:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1327:6:36"},"nodeType":"YulFunctionCall","src":"1327:17:36"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1349:1:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1360:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1356:3:36"},"nodeType":"YulFunctionCall","src":"1356:6:36"},{"name":"x","nodeType":"YulIdentifier","src":"1364:1:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1352:3:36"},"nodeType":"YulFunctionCall","src":"1352:14:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1346:2:36"},"nodeType":"YulFunctionCall","src":"1346:21:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1323:3:36"},"nodeType":"YulFunctionCall","src":"1323:45:36"},"nodeType":"YulIf","src":"1320:168:36"},{"nodeType":"YulAssignment","src":"1497:20:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1512:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"1515:1:36"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1508:3:36"},"nodeType":"YulFunctionCall","src":"1508:9:36"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"1497:7:36"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1289:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"1292:1:36","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"1298:7:36","type":""}],"src":"1258:265:36"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1536":[{"length":32,"start":75},{"length":32,"start":298}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806337a7b7d814610046578063aaf5eb681461008a578063ac41865a146100ac575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009e6c0c9f2c9cd04674edea4000000081565b604051908152602001610081565b61009e6100ba3660046101c8565b6000806100c684610108565b905080156101015760006100d984610108565b9050816100f36c0c9f2c9cd04674edea4000000083610236565b6100fd9190610214565b9250505b5092915050565b60405163cfed246b60e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063cfed246b9060240160206040518083038186803b15801561016e57600080fd5b505afa158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a691906101fb565b92915050565b80356001600160a01b03811681146101c357600080fd5b919050565b600080604083850312156101db57600080fd5b6101e4836101ac565b91506101f2602084016101ac565b90509250929050565b60006020828403121561020d57600080fd5b5051919050565b60008261023157634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561025e57634e487b7160e01b600052601160045260246000fd5b50029056fea264697066735822122063c4829bd1ea15a6e909975fa7d75c72f9e10da456dbaa3b3ea7a3442231a13964736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37A7B7D8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x81 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC6 DUP5 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 PUSH2 0xD9 DUP5 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xF3 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP4 PUSH2 0x236 JUMP JUMPDEST PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCFED246B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xCFED246B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x182 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E4 DUP4 PUSH2 0x1AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2 PUSH1 0x20 DUP5 ADD PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x231 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC4829BD1 0xEA ISZERO 0xA6 0xE9 MULMOD SWAP8 0x5F 0xA7 0xD7 0x5C PUSH19 0xF9E10DA456DBAA3B3EA7A3442231A13964736F PUSH13 0x63430008070033000000000000 ","sourceMap":"162:734:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:29;;;;;;;;-1:-1:-1;;;;;810:32:36;;;792:51;;780:2;765:18;281:29:15;;;;;;;;226:49;;271:4;226:49;;;;;1000:25:36;;;988:2;973:18;226:49:15;854:177:36;560:334:15;;;;;;:::i;:::-;673:13;698:17;718:18;725:10;718:6;:18::i;:::-;698:38;-1:-1:-1;750:13:15;;746:142;;779:18;800:19;807:11;800:6;:19::i;:::-;779:40;-1:-1:-1;868:9:15;842:22;271:4;779:40;842:22;:::i;:::-;841:36;;;;:::i;:::-;833:44;;765:123;746:142;688:206;560:334;;;;:::o;425:129::-;513:34;;-1:-1:-1;;;513:34:15;;-1:-1:-1;;;;;810:32:36;;;513:34:15;;;792:51:36;480:13:15;;527:4;513:26;;;;;;765:18:36;;513:34:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;505:42;425:129;-1:-1:-1;;425:129:15:o;14:173:36:-;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;457:184::-;527:6;580:2;568:9;559:7;555:23;551:32;548:52;;;596:1;593;586:12;548:52;-1:-1:-1;619:16:36;;457:184;-1:-1:-1;457:184:36:o;1036:217::-;1076:1;1102;1092:132;;1146:10;1141:3;1137:20;1134:1;1127:31;1181:4;1178:1;1171:15;1209:4;1206:1;1199:15;1092:132;-1:-1:-1;1238:9:36;;1036:217::o;1258:265::-;1298:7;1364:1;1360;1356:6;1352:14;1349:1;1346:21;1341:1;1334:9;1327:17;1323:45;1320:168;;;1410:10;1405:3;1401:20;1398:1;1391:31;1445:4;1442:1;1435:15;1473:4;1470:1;1463:15;1320:168;-1:-1:-1;1508:9:36;;1258:265::o"},"gasEstimates":{"creation":{"codeDepositCost":"133000","executionCost":"infinite","totalCost":"infinite"},"external":{"PRECISION()":"195","feed()":"infinite","getPrice(address,address)":"infinite"},"internal":{"_price(address)":"infinite"}},"methodIdentifiers":{"PRECISION()":"aaf5eb68","feed()":"37a7b7d8","getPrice(address,address)":"ac41865a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GMXPriceFeedIntegration.sol\":\"GMXPriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GMXPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\nimport \\\"./interfaces/IPriceFeedIntegration.sol\\\";\\nimport \\\"./interfaces/IGMXPriceFeed.sol\\\";\\n\\ncontract GMXPriceFeedIntegration is IPriceFeedIntegration {\\n    uint256 public constant override PRECISION = 1e30;\\n    address public immutable feed; // 0x11D62807dAE812a0F1571243460Bf94325F43BB7\\n\\n    constructor(address _feed) {\\n        feed = _feed;\\n    }\\n\\n    function _price(address _token) internal view returns (uint256 price) {\\n        price = IGMXPriceFeed(feed).prices(_token);\\n    }\\n\\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view override returns (uint256 price) {\\n        uint256 basePrice = _price(_baseToken);\\n        if (basePrice > 0) {\\n            uint256 quotePrice = _price(_quoteToken);\\n            price = (quotePrice * PRECISION) / basePrice;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfc71e3987e62e9165490ff18889e60444c969e1274d84f5ef2fef230b1e2c222\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IGMXPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IGMXPriceFeed {\\n    function prices(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x458962ab0e9a7a9a9f5592fec64e102e660d58218b2698e44861fd30af97b26d\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeedIntegration {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/PriceFeed.sol":{"PriceFeed":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"Forbidden","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"integrations","type":"address[]"}],"name":"SetIntegrations","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"manager","type":"address"}],"name":"SetManager","type":"event"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getHighestPrice","outputs":[{"internalType":"uint256","name":"highestPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getLowestPrice","outputs":[{"internalType":"uint256","name":"lowestPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"integrations","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_integrations","type":"address[]"}],"name":"setIntegrations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_manager","type":"address"}],"name":"setManager","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1638":{"entryPoint":null,"id":1638,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561085c806100326000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063790bde321161005b578063790bde32146100e8578063aaf5eb68146100fb578063d0ebdbe71461010f578063e6c143621461012257600080fd5b806310466861146100825780631a102f6714610097578063481c6a75146100bd575b600080fd5b61009561009036600461063d565b610135565b005b6100aa6100a536600461060a565b6101b5565b6040519081526020015b60405180910390f35b6000546100d0906001600160a01b031681565b6040516001600160a01b0390911681526020016100b4565b6100d06100f6366004610709565b61032f565b6100aa6c0c9f2c9cd04674edea4000000081565b61009561011d3660046105e8565b610359565b6100aa61013036600461060a565b6103d4565b6000546001600160a01b031633146101675760405163a59d7f4d60e01b81523360048201526024015b60405180910390fd5b805161017a906001906020840190610552565b507fe8da2c09baa9c936046abefef4abff853a37f76be3ce70b45b3aaee2409ffae1816040516101aa919061073b565b60405180910390a150565b600154600090815b81811015610327576000600182815481106101da576101da6107fa565b6000918252602082200154604051635620c32d60e11b81526001600160a01b03898116600483015288811660248301529091169250829063ac41865a9060440160206040518083038186803b15801561023257600080fd5b505afa158015610246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026a9190610722565b90506000826001600160a01b031663aaf5eb686040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a757600080fd5b505afa1580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df9190610722565b9050806102f96c0c9f2c9cd04674edea40000000846107aa565b6103039190610788565b915085821115610311578195505b505050808061031f906107c9565b9150506101bd565b505092915050565b6001818154811061033f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146103865760405163a59d7f4d60e01b815233600482015260240161015e565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f54a6385aa0292b04e1ef8513253c17d1863f7cdfc87029d77fd55cc4c2e717e2906020016101aa565b600154600090815b81811015610327576000600182815481106103f9576103f96107fa565b6000918252602082200154604051635620c32d60e11b81526001600160a01b03898116600483015288811660248301529091169250829063ac41865a9060440160206040518083038186803b15801561045157600080fd5b505afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610722565b90506000826001600160a01b031663aaf5eb686040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c657600080fd5b505afa1580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190610722565b9050806105186c0c9f2c9cd04674edea40000000846107aa565b6105229190610788565b915060008211801561053357508582105b1561053c578195505b505050808061054a906107c9565b9150506103dc565b8280548282559060005260206000209081019282156105a7579160200282015b828111156105a757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610572565b506105b39291506105b7565b5090565b5b808211156105b357600081556001016105b8565b80356001600160a01b03811681146105e357600080fd5b919050565b6000602082840312156105fa57600080fd5b610603826105cc565b9392505050565b6000806040838503121561061d57600080fd5b610626836105cc565b9150610634602084016105cc565b90509250929050565b6000602080838503121561065057600080fd5b823567ffffffffffffffff8082111561066857600080fd5b818501915085601f83011261067c57600080fd5b81358181111561068e5761068e610810565b8060051b604051601f19603f830116810181811085821117156106b3576106b3610810565b604052828152858101935084860182860187018a10156106d257600080fd5b600095505b838610156106fc576106e8816105cc565b8552600195909501949386019386016106d7565b5098975050505050505050565b60006020828403121561071b57600080fd5b5035919050565b60006020828403121561073457600080fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b8181101561077c5783516001600160a01b031683529284019291840191600101610757565b50909695505050505050565b6000826107a557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156107c4576107c46107e4565b500290565b60006000198214156107dd576107dd6107e4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122076b14f0e53793f7a81905f9441f472d982ec220d19f1e0f7c4b84af230b31b1164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x85C DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x790BDE32 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x790BDE32 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xD0EBDBE7 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xE6C14362 EQ PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10466861 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x1A102F67 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xD0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH2 0xAA PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0xAA PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x167 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA59D7F4D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x17A SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x552 JUMP JUMPDEST POP PUSH32 0xE8DA2C09BAA9C936046ABEFEF4ABFF853A37F76BE3CE70B45B3AAEE2409FFAE1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DA JUMPI PUSH2 0x1DA PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x5620C32D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP3 POP DUP3 SWAP1 PUSH4 0xAC41865A SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x246 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAF5EB68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2F9 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP5 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP DUP6 DUP3 GT ISZERO PUSH2 0x311 JUMPI DUP2 SWAP6 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x31F SWAP1 PUSH2 0x7C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BD JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x386 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA59D7F4D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x54A6385AA0292B04E1EF8513253C17D1863F7CDFC87029D77FD55CC4C2E717E2 SWAP1 PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F9 JUMPI PUSH2 0x3F9 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x5620C32D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP3 POP DUP3 SWAP1 PUSH4 0xAC41865A SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x465 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAF5EB68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x518 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP5 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x533 JUMPI POP DUP6 DUP3 LT JUMPDEST ISZERO PUSH2 0x53C JUMPI DUP2 SWAP6 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x54A SWAP1 PUSH2 0x7C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3DC JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x5A7 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x5A7 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x572 JUMP JUMPDEST POP PUSH2 0x5B3 SWAP3 SWAP2 POP PUSH2 0x5B7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5B8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x603 DUP3 PUSH2 0x5CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x626 DUP4 PUSH2 0x5CC JUMP JUMPDEST SWAP2 POP PUSH2 0x634 PUSH1 0x20 DUP5 ADD PUSH2 0x5CC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x68E JUMPI PUSH2 0x68E PUSH2 0x810 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B3 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x6FC JUMPI PUSH2 0x6E8 DUP2 PUSH2 0x5CC JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x6D7 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x77C JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x757 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x7C4 JUMPI PUSH2 0x7C4 PUSH2 0x7E4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DD PUSH2 0x7E4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xB14F0E53793F7A81905F9441F472D982EC220D19F1E0F7 0xC4 0xB8 0x4A CALLCODE ADDRESS 0xB3 SHL GT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"159:2074:16:-:0;;;446:51;;;;;;;;;-1:-1:-1;470:7:16;:20;;-1:-1:-1;;;;;;470:20:16;480:10;470:20;;;159:2074;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PRECISION_1611":{"entryPoint":null,"id":1611,"parameterSlots":0,"returnSlots":0},"@getHighestPrice_1754":{"entryPoint":437,"id":1754,"parameterSlots":2,"returnSlots":1},"@getLowestPrice_1827":{"entryPoint":980,"id":1827,"parameterSlots":2,"returnSlots":1},"@integrations_1616":{"entryPoint":815,"id":1616,"parameterSlots":0,"returnSlots":0},"@manager_1613":{"entryPoint":null,"id":1613,"parameterSlots":0,"returnSlots":0},"@setIntegrations_1685":{"entryPoint":309,"id":1685,"parameterSlots":1,"returnSlots":0},"@setManager_1668":{"entryPoint":857,"id":1668,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":1484,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1546,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":1597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1851,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":1928,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1962,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":1993,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2020,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2042,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2064,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4449:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:36","statements":[{"nodeType":"YulAssignment","src":"73:29:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:36"},"nodeType":"YulFunctionCall","src":"82:20:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:36"}]},{"body":{"nodeType":"YulBlock","src":"165:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:36"},"nodeType":"YulFunctionCall","src":"167:12:36"},"nodeType":"YulExpressionStatement","src":"167:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:36"},"nodeType":"YulFunctionCall","src":"146:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:36"},"nodeType":"YulFunctionCall","src":"142:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:36"},"nodeType":"YulFunctionCall","src":"131:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:36"},"nodeType":"YulFunctionCall","src":"121:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:36"},"nodeType":"YulFunctionCall","src":"114:50:36"},"nodeType":"YulIf","src":"111:70:36"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:36","type":""}],"src":"14:173:36"},{"body":{"nodeType":"YulBlock","src":"262:116:36","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:36"},"nodeType":"YulFunctionCall","src":"310:12:36"},"nodeType":"YulExpressionStatement","src":"310:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:36"},"nodeType":"YulFunctionCall","src":"279:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:36"},"nodeType":"YulFunctionCall","src":"275:32:36"},"nodeType":"YulIf","src":"272:52:36"},{"nodeType":"YulAssignment","src":"333:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:36"},"nodeType":"YulFunctionCall","src":"343:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:36"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:36","type":""}],"src":"192:186:36"},{"body":{"nodeType":"YulBlock","src":"470:173:36","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:36"},"nodeType":"YulFunctionCall","src":"518:12:36"},"nodeType":"YulExpressionStatement","src":"518:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:36"},"nodeType":"YulFunctionCall","src":"487:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:36"},"nodeType":"YulFunctionCall","src":"483:32:36"},"nodeType":"YulIf","src":"480:52:36"},{"nodeType":"YulAssignment","src":"541:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:36"},"nodeType":"YulFunctionCall","src":"551:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:36"}]},{"nodeType":"YulAssignment","src":"589:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:36"},"nodeType":"YulFunctionCall","src":"618:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"599:18:36"},"nodeType":"YulFunctionCall","src":"599:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:36","type":""}],"src":"383:260:36"},{"body":{"nodeType":"YulBlock","src":"743:1037:36","statements":[{"nodeType":"YulVariableDeclaration","src":"753:12:36","value":{"kind":"number","nodeType":"YulLiteral","src":"763:2:36","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"757:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"810:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"819:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"822:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"812:6:36"},"nodeType":"YulFunctionCall","src":"812:12:36"},"nodeType":"YulExpressionStatement","src":"812:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"785:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"794:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"781:3:36"},"nodeType":"YulFunctionCall","src":"781:23:36"},{"name":"_1","nodeType":"YulIdentifier","src":"806:2:36"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"777:3:36"},"nodeType":"YulFunctionCall","src":"777:32:36"},"nodeType":"YulIf","src":"774:52:36"},{"nodeType":"YulVariableDeclaration","src":"835:37:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"849:12:36"},"nodeType":"YulFunctionCall","src":"849:23:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"839:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"881:28:36","value":{"kind":"number","nodeType":"YulLiteral","src":"891:18:36","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"885:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"936:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"945:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"948:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"938:6:36"},"nodeType":"YulFunctionCall","src":"938:12:36"},"nodeType":"YulExpressionStatement","src":"938:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"924:6:36"},{"name":"_2","nodeType":"YulIdentifier","src":"932:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"921:2:36"},"nodeType":"YulFunctionCall","src":"921:14:36"},"nodeType":"YulIf","src":"918:34:36"},{"nodeType":"YulVariableDeclaration","src":"961:32:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"975:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"986:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"971:3:36"},"nodeType":"YulFunctionCall","src":"971:22:36"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"965:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1041:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1050:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1053:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1043:6:36"},"nodeType":"YulFunctionCall","src":"1043:12:36"},"nodeType":"YulExpressionStatement","src":"1043:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1020:2:36"},{"kind":"number","nodeType":"YulLiteral","src":"1024:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1016:3:36"},"nodeType":"YulFunctionCall","src":"1016:13:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1031:7:36"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1012:3:36"},"nodeType":"YulFunctionCall","src":"1012:27:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1005:6:36"},"nodeType":"YulFunctionCall","src":"1005:35:36"},"nodeType":"YulIf","src":"1002:55:36"},{"nodeType":"YulVariableDeclaration","src":"1066:26:36","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1089:2:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1076:12:36"},"nodeType":"YulFunctionCall","src":"1076:16:36"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1070:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1115:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1117:16:36"},"nodeType":"YulFunctionCall","src":"1117:18:36"},"nodeType":"YulExpressionStatement","src":"1117:18:36"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1107:2:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1111:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1104:2:36"},"nodeType":"YulFunctionCall","src":"1104:10:36"},"nodeType":"YulIf","src":"1101:36:36"},{"nodeType":"YulVariableDeclaration","src":"1146:20:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1160:1:36","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"1163:2:36"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1156:3:36"},"nodeType":"YulFunctionCall","src":"1156:10:36"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"1150:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1175:23:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1195:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1189:5:36"},"nodeType":"YulFunctionCall","src":"1189:9:36"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1179:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1207:56:36","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1229:6:36"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"1245:2:36"},{"kind":"number","nodeType":"YulLiteral","src":"1249:2:36","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1241:3:36"},"nodeType":"YulFunctionCall","src":"1241:11:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1258:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1254:3:36"},"nodeType":"YulFunctionCall","src":"1254:7:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1237:3:36"},"nodeType":"YulFunctionCall","src":"1237:25:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1225:3:36"},"nodeType":"YulFunctionCall","src":"1225:38:36"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1211:10:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1322:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1324:16:36"},"nodeType":"YulFunctionCall","src":"1324:18:36"},"nodeType":"YulExpressionStatement","src":"1324:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1281:10:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1293:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1278:2:36"},"nodeType":"YulFunctionCall","src":"1278:18:36"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1301:10:36"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1313:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1298:2:36"},"nodeType":"YulFunctionCall","src":"1298:22:36"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1275:2:36"},"nodeType":"YulFunctionCall","src":"1275:46:36"},"nodeType":"YulIf","src":"1272:72:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1360:2:36","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1364:10:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1353:6:36"},"nodeType":"YulFunctionCall","src":"1353:22:36"},"nodeType":"YulExpressionStatement","src":"1353:22:36"},{"nodeType":"YulVariableDeclaration","src":"1384:17:36","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1395:6:36"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1388:3:36","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1417:6:36"},{"name":"_4","nodeType":"YulIdentifier","src":"1425:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1410:6:36"},"nodeType":"YulFunctionCall","src":"1410:18:36"},"nodeType":"YulExpressionStatement","src":"1410:18:36"},{"nodeType":"YulAssignment","src":"1437:22:36","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1448:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1456:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1444:3:36"},"nodeType":"YulFunctionCall","src":"1444:15:36"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1437:3:36"}]},{"nodeType":"YulVariableDeclaration","src":"1468:22:36","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1483:2:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1487:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1479:3:36"},"nodeType":"YulFunctionCall","src":"1479:11:36"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1472:3:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1536:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1545:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1548:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1538:6:36"},"nodeType":"YulFunctionCall","src":"1538:12:36"},"nodeType":"YulExpressionStatement","src":"1538:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1513:2:36"},{"name":"_5","nodeType":"YulIdentifier","src":"1517:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1509:3:36"},"nodeType":"YulFunctionCall","src":"1509:11:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1522:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1505:3:36"},"nodeType":"YulFunctionCall","src":"1505:20:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1527:7:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1502:2:36"},"nodeType":"YulFunctionCall","src":"1502:33:36"},"nodeType":"YulIf","src":"1499:53:36"},{"nodeType":"YulVariableDeclaration","src":"1561:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"1570:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1565:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1625:124:36","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1646:3:36"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1670:3:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1651:18:36"},"nodeType":"YulFunctionCall","src":"1651:23:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1639:6:36"},"nodeType":"YulFunctionCall","src":"1639:36:36"},"nodeType":"YulExpressionStatement","src":"1639:36:36"},{"nodeType":"YulAssignment","src":"1688:19:36","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1699:3:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1704:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1695:3:36"},"nodeType":"YulFunctionCall","src":"1695:12:36"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1688:3:36"}]},{"nodeType":"YulAssignment","src":"1720:19:36","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1731:3:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1736:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1727:3:36"},"nodeType":"YulFunctionCall","src":"1727:12:36"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1720:3:36"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1591:1:36"},{"name":"_4","nodeType":"YulIdentifier","src":"1594:2:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1588:2:36"},"nodeType":"YulFunctionCall","src":"1588:9:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1598:18:36","statements":[{"nodeType":"YulAssignment","src":"1600:14:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1609:1:36"},{"kind":"number","nodeType":"YulLiteral","src":"1612:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1605:3:36"},"nodeType":"YulFunctionCall","src":"1605:9:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1600:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"1584:3:36","statements":[]},"src":"1580:169:36"},{"nodeType":"YulAssignment","src":"1758:16:36","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1768:6:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1758:6:36"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"709:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"720:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"732:6:36","type":""}],"src":"648:1132:36"},{"body":{"nodeType":"YulBlock","src":"1855:110:36","statements":[{"body":{"nodeType":"YulBlock","src":"1901:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1910:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1913:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1903:6:36"},"nodeType":"YulFunctionCall","src":"1903:12:36"},"nodeType":"YulExpressionStatement","src":"1903:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1876:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"1885:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1872:3:36"},"nodeType":"YulFunctionCall","src":"1872:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"1897:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1868:3:36"},"nodeType":"YulFunctionCall","src":"1868:32:36"},"nodeType":"YulIf","src":"1865:52:36"},{"nodeType":"YulAssignment","src":"1926:33:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1949:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1936:12:36"},"nodeType":"YulFunctionCall","src":"1936:23:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1926:6:36"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1821:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1832:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1844:6:36","type":""}],"src":"1785:180:36"},{"body":{"nodeType":"YulBlock","src":"2051:103:36","statements":[{"body":{"nodeType":"YulBlock","src":"2097:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2106:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2109:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2099:6:36"},"nodeType":"YulFunctionCall","src":"2099:12:36"},"nodeType":"YulExpressionStatement","src":"2099:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2072:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2081:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2068:3:36"},"nodeType":"YulFunctionCall","src":"2068:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2093:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2064:3:36"},"nodeType":"YulFunctionCall","src":"2064:32:36"},"nodeType":"YulIf","src":"2061:52:36"},{"nodeType":"YulAssignment","src":"2122:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2138:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2132:5:36"},"nodeType":"YulFunctionCall","src":"2132:16:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2122:6:36"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2017:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2028:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2040:6:36","type":""}],"src":"1970:184:36"},{"body":{"nodeType":"YulBlock","src":"2260:102:36","statements":[{"nodeType":"YulAssignment","src":"2270:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2282:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2293:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2278:3:36"},"nodeType":"YulFunctionCall","src":"2278:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2270:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2312:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2327:6:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2343:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2348:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2339:3:36"},"nodeType":"YulFunctionCall","src":"2339:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"2352:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2335:3:36"},"nodeType":"YulFunctionCall","src":"2335:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2323:3:36"},"nodeType":"YulFunctionCall","src":"2323:32:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2305:6:36"},"nodeType":"YulFunctionCall","src":"2305:51:36"},"nodeType":"YulExpressionStatement","src":"2305:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2229:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2240:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2251:4:36","type":""}],"src":"2159:203:36"},{"body":{"nodeType":"YulBlock","src":"2496:175:36","statements":[{"nodeType":"YulAssignment","src":"2506:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2518:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2529:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2514:3:36"},"nodeType":"YulFunctionCall","src":"2514:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2506:4:36"}]},{"nodeType":"YulVariableDeclaration","src":"2541:29:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2559:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2564:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2555:3:36"},"nodeType":"YulFunctionCall","src":"2555:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"2568:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2551:3:36"},"nodeType":"YulFunctionCall","src":"2551:19:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2545:2:36","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2586:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2601:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"2609:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2597:3:36"},"nodeType":"YulFunctionCall","src":"2597:15:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2579:6:36"},"nodeType":"YulFunctionCall","src":"2579:34:36"},"nodeType":"YulExpressionStatement","src":"2579:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2633:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2644:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2629:3:36"},"nodeType":"YulFunctionCall","src":"2629:18:36"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2653:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"2661:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2649:3:36"},"nodeType":"YulFunctionCall","src":"2649:15:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2622:6:36"},"nodeType":"YulFunctionCall","src":"2622:43:36"},"nodeType":"YulExpressionStatement","src":"2622:43:36"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2457:9:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2468:6:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2476:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2487:4:36","type":""}],"src":"2367:304:36"},{"body":{"nodeType":"YulBlock","src":"2827:507:36","statements":[{"nodeType":"YulVariableDeclaration","src":"2837:12:36","value":{"kind":"number","nodeType":"YulLiteral","src":"2847:2:36","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2841:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2858:32:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2876:9:36"},{"name":"_1","nodeType":"YulIdentifier","src":"2887:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2872:3:36"},"nodeType":"YulFunctionCall","src":"2872:18:36"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2862:6:36","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2906:9:36"},{"name":"_1","nodeType":"YulIdentifier","src":"2917:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2899:6:36"},"nodeType":"YulFunctionCall","src":"2899:21:36"},"nodeType":"YulExpressionStatement","src":"2899:21:36"},{"nodeType":"YulVariableDeclaration","src":"2929:17:36","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"2940:6:36"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2933:3:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2955:27:36","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2975:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2969:5:36"},"nodeType":"YulFunctionCall","src":"2969:13:36"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2959:6:36","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2998:6:36"},{"name":"length","nodeType":"YulIdentifier","src":"3006:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2991:6:36"},"nodeType":"YulFunctionCall","src":"2991:22:36"},"nodeType":"YulExpressionStatement","src":"2991:22:36"},{"nodeType":"YulAssignment","src":"3022:25:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3033:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3044:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3029:3:36"},"nodeType":"YulFunctionCall","src":"3029:18:36"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3022:3:36"}]},{"nodeType":"YulVariableDeclaration","src":"3056:29:36","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3074:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3082:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3070:3:36"},"nodeType":"YulFunctionCall","src":"3070:15:36"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3060:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3094:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"3103:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3098:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"3162:146:36","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3183:3:36"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3198:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3192:5:36"},"nodeType":"YulFunctionCall","src":"3192:13:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3215:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3220:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3211:3:36"},"nodeType":"YulFunctionCall","src":"3211:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"3224:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3207:3:36"},"nodeType":"YulFunctionCall","src":"3207:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3188:3:36"},"nodeType":"YulFunctionCall","src":"3188:39:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3176:6:36"},"nodeType":"YulFunctionCall","src":"3176:52:36"},"nodeType":"YulExpressionStatement","src":"3176:52:36"},{"nodeType":"YulAssignment","src":"3241:19:36","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3252:3:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3257:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3248:3:36"},"nodeType":"YulFunctionCall","src":"3248:12:36"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3241:3:36"}]},{"nodeType":"YulAssignment","src":"3273:25:36","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3287:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3295:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3283:3:36"},"nodeType":"YulFunctionCall","src":"3283:15:36"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3273:6:36"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3124:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"3127:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3121:2:36"},"nodeType":"YulFunctionCall","src":"3121:13:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3135:18:36","statements":[{"nodeType":"YulAssignment","src":"3137:14:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3146:1:36"},{"kind":"number","nodeType":"YulLiteral","src":"3149:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3142:3:36"},"nodeType":"YulFunctionCall","src":"3142:9:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3137:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"3117:3:36","statements":[]},"src":"3113:195:36"},{"nodeType":"YulAssignment","src":"3317:11:36","value":{"name":"pos","nodeType":"YulIdentifier","src":"3325:3:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3317:4:36"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2796:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2807:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2818:4:36","type":""}],"src":"2676:658:36"},{"body":{"nodeType":"YulBlock","src":"3440:76:36","statements":[{"nodeType":"YulAssignment","src":"3450:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3462:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3473:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3458:3:36"},"nodeType":"YulFunctionCall","src":"3458:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3450:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3492:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"3503:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3485:6:36"},"nodeType":"YulFunctionCall","src":"3485:25:36"},"nodeType":"YulExpressionStatement","src":"3485:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3409:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3420:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3431:4:36","type":""}],"src":"3339:177:36"},{"body":{"nodeType":"YulBlock","src":"3567:171:36","statements":[{"body":{"nodeType":"YulBlock","src":"3598:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3619:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3626:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3631:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3622:3:36"},"nodeType":"YulFunctionCall","src":"3622:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3612:6:36"},"nodeType":"YulFunctionCall","src":"3612:31:36"},"nodeType":"YulExpressionStatement","src":"3612:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3663:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3666:4:36","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3656:6:36"},"nodeType":"YulFunctionCall","src":"3656:15:36"},"nodeType":"YulExpressionStatement","src":"3656:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3691:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3694:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3684:6:36"},"nodeType":"YulFunctionCall","src":"3684:15:36"},"nodeType":"YulExpressionStatement","src":"3684:15:36"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3587:1:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3580:6:36"},"nodeType":"YulFunctionCall","src":"3580:9:36"},"nodeType":"YulIf","src":"3577:132:36"},{"nodeType":"YulAssignment","src":"3718:14:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3727:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"3730:1:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3723:3:36"},"nodeType":"YulFunctionCall","src":"3723:9:36"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3718:1:36"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3552:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"3555:1:36","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3561:1:36","type":""}],"src":"3521:217:36"},{"body":{"nodeType":"YulBlock","src":"3795:116:36","statements":[{"body":{"nodeType":"YulBlock","src":"3854:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3856:16:36"},"nodeType":"YulFunctionCall","src":"3856:18:36"},"nodeType":"YulExpressionStatement","src":"3856:18:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3826:1:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3819:6:36"},"nodeType":"YulFunctionCall","src":"3819:9:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3812:6:36"},"nodeType":"YulFunctionCall","src":"3812:17:36"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3834:1:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3845:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3841:3:36"},"nodeType":"YulFunctionCall","src":"3841:6:36"},{"name":"x","nodeType":"YulIdentifier","src":"3849:1:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3837:3:36"},"nodeType":"YulFunctionCall","src":"3837:14:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3831:2:36"},"nodeType":"YulFunctionCall","src":"3831:21:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3808:3:36"},"nodeType":"YulFunctionCall","src":"3808:45:36"},"nodeType":"YulIf","src":"3805:71:36"},{"nodeType":"YulAssignment","src":"3885:20:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3900:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"3903:1:36"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3896:3:36"},"nodeType":"YulFunctionCall","src":"3896:9:36"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3885:7:36"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3774:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"3777:1:36","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3783:7:36","type":""}],"src":"3743:168:36"},{"body":{"nodeType":"YulBlock","src":"3963:88:36","statements":[{"body":{"nodeType":"YulBlock","src":"3994:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3996:16:36"},"nodeType":"YulFunctionCall","src":"3996:18:36"},"nodeType":"YulExpressionStatement","src":"3996:18:36"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3979:5:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3990:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3986:3:36"},"nodeType":"YulFunctionCall","src":"3986:6:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3976:2:36"},"nodeType":"YulFunctionCall","src":"3976:17:36"},"nodeType":"YulIf","src":"3973:43:36"},{"nodeType":"YulAssignment","src":"4025:20:36","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4036:5:36"},{"kind":"number","nodeType":"YulLiteral","src":"4043:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4032:3:36"},"nodeType":"YulFunctionCall","src":"4032:13:36"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4025:3:36"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3945:5:36","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3955:3:36","type":""}],"src":"3916:135:36"},{"body":{"nodeType":"YulBlock","src":"4088:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4105:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4112:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4117:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4108:3:36"},"nodeType":"YulFunctionCall","src":"4108:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4098:6:36"},"nodeType":"YulFunctionCall","src":"4098:31:36"},"nodeType":"YulExpressionStatement","src":"4098:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4145:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4148:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4138:6:36"},"nodeType":"YulFunctionCall","src":"4138:15:36"},"nodeType":"YulExpressionStatement","src":"4138:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4169:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4172:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4162:6:36"},"nodeType":"YulFunctionCall","src":"4162:15:36"},"nodeType":"YulExpressionStatement","src":"4162:15:36"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4056:127:36"},{"body":{"nodeType":"YulBlock","src":"4220:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4237:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4244:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4249:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4240:3:36"},"nodeType":"YulFunctionCall","src":"4240:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4230:6:36"},"nodeType":"YulFunctionCall","src":"4230:31:36"},"nodeType":"YulExpressionStatement","src":"4230:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4277:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4280:4:36","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4270:6:36"},"nodeType":"YulFunctionCall","src":"4270:15:36"},"nodeType":"YulExpressionStatement","src":"4270:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4301:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4304:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4294:6:36"},"nodeType":"YulFunctionCall","src":"4294:15:36"},"nodeType":"YulExpressionStatement","src":"4294:15:36"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4188:127:36"},{"body":{"nodeType":"YulBlock","src":"4352:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4376:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4381:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4372:3:36"},"nodeType":"YulFunctionCall","src":"4372:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4362:6:36"},"nodeType":"YulFunctionCall","src":"4362:31:36"},"nodeType":"YulExpressionStatement","src":"4362:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4409:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4412:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4402:6:36"},"nodeType":"YulFunctionCall","src":"4402:15:36"},"nodeType":"YulExpressionStatement","src":"4402:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4433:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4436:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4426:6:36"},"nodeType":"YulFunctionCall","src":"4426:15:36"},"nodeType":"YulExpressionStatement","src":"4426:15:36"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4320:127:36"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063790bde321161005b578063790bde32146100e8578063aaf5eb68146100fb578063d0ebdbe71461010f578063e6c143621461012257600080fd5b806310466861146100825780631a102f6714610097578063481c6a75146100bd575b600080fd5b61009561009036600461063d565b610135565b005b6100aa6100a536600461060a565b6101b5565b6040519081526020015b60405180910390f35b6000546100d0906001600160a01b031681565b6040516001600160a01b0390911681526020016100b4565b6100d06100f6366004610709565b61032f565b6100aa6c0c9f2c9cd04674edea4000000081565b61009561011d3660046105e8565b610359565b6100aa61013036600461060a565b6103d4565b6000546001600160a01b031633146101675760405163a59d7f4d60e01b81523360048201526024015b60405180910390fd5b805161017a906001906020840190610552565b507fe8da2c09baa9c936046abefef4abff853a37f76be3ce70b45b3aaee2409ffae1816040516101aa919061073b565b60405180910390a150565b600154600090815b81811015610327576000600182815481106101da576101da6107fa565b6000918252602082200154604051635620c32d60e11b81526001600160a01b03898116600483015288811660248301529091169250829063ac41865a9060440160206040518083038186803b15801561023257600080fd5b505afa158015610246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026a9190610722565b90506000826001600160a01b031663aaf5eb686040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a757600080fd5b505afa1580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df9190610722565b9050806102f96c0c9f2c9cd04674edea40000000846107aa565b6103039190610788565b915085821115610311578195505b505050808061031f906107c9565b9150506101bd565b505092915050565b6001818154811061033f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146103865760405163a59d7f4d60e01b815233600482015260240161015e565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f54a6385aa0292b04e1ef8513253c17d1863f7cdfc87029d77fd55cc4c2e717e2906020016101aa565b600154600090815b81811015610327576000600182815481106103f9576103f96107fa565b6000918252602082200154604051635620c32d60e11b81526001600160a01b03898116600483015288811660248301529091169250829063ac41865a9060440160206040518083038186803b15801561045157600080fd5b505afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610722565b90506000826001600160a01b031663aaf5eb686040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c657600080fd5b505afa1580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190610722565b9050806105186c0c9f2c9cd04674edea40000000846107aa565b6105229190610788565b915060008211801561053357508582105b1561053c578195505b505050808061054a906107c9565b9150506103dc565b8280548282559060005260206000209081019282156105a7579160200282015b828111156105a757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610572565b506105b39291506105b7565b5090565b5b808211156105b357600081556001016105b8565b80356001600160a01b03811681146105e357600080fd5b919050565b6000602082840312156105fa57600080fd5b610603826105cc565b9392505050565b6000806040838503121561061d57600080fd5b610626836105cc565b9150610634602084016105cc565b90509250929050565b6000602080838503121561065057600080fd5b823567ffffffffffffffff8082111561066857600080fd5b818501915085601f83011261067c57600080fd5b81358181111561068e5761068e610810565b8060051b604051601f19603f830116810181811085821117156106b3576106b3610810565b604052828152858101935084860182860187018a10156106d257600080fd5b600095505b838610156106fc576106e8816105cc565b8552600195909501949386019386016106d7565b5098975050505050505050565b60006020828403121561071b57600080fd5b5035919050565b60006020828403121561073457600080fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b8181101561077c5783516001600160a01b031683529284019291840191600101610757565b50909695505050505050565b6000826107a557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156107c4576107c46107e4565b500290565b60006000198214156107dd576107dd6107e4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122076b14f0e53793f7a81905f9441f472d982ec220d19f1e0f7c4b84af230b31b1164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x790BDE32 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x790BDE32 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xD0EBDBE7 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xE6C14362 EQ PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10466861 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x1A102F67 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xD0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH2 0xAA PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0xAA PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x167 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA59D7F4D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x17A SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x552 JUMP JUMPDEST POP PUSH32 0xE8DA2C09BAA9C936046ABEFEF4ABFF853A37F76BE3CE70B45B3AAEE2409FFAE1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DA JUMPI PUSH2 0x1DA PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x5620C32D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP3 POP DUP3 SWAP1 PUSH4 0xAC41865A SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x246 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAF5EB68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2F9 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP5 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP DUP6 DUP3 GT ISZERO PUSH2 0x311 JUMPI DUP2 SWAP6 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x31F SWAP1 PUSH2 0x7C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BD JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x386 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA59D7F4D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x54A6385AA0292B04E1EF8513253C17D1863F7CDFC87029D77FD55CC4C2E717E2 SWAP1 PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F9 JUMPI PUSH2 0x3F9 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x5620C32D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP3 POP DUP3 SWAP1 PUSH4 0xAC41865A SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x465 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAF5EB68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x518 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP5 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x533 JUMPI POP DUP6 DUP3 LT JUMPDEST ISZERO PUSH2 0x53C JUMPI DUP2 SWAP6 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x54A SWAP1 PUSH2 0x7C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3DC JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x5A7 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x5A7 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x572 JUMP JUMPDEST POP PUSH2 0x5B3 SWAP3 SWAP2 POP PUSH2 0x5B7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5B8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x603 DUP3 PUSH2 0x5CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x626 DUP4 PUSH2 0x5CC JUMP JUMPDEST SWAP2 POP PUSH2 0x634 PUSH1 0x20 DUP5 ADD PUSH2 0x5CC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x68E JUMPI PUSH2 0x68E PUSH2 0x810 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B3 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x6FC JUMPI PUSH2 0x6E8 DUP2 PUSH2 0x5CC JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x6D7 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x77C JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x757 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x7C4 JUMPI PUSH2 0x7C4 PUSH2 0x7E4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DD PUSH2 0x7E4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xB14F0E53793F7A81905F9441F472D982EC220D19F1E0F7 0xC4 0xB8 0x4A CALLCODE ADDRESS 0xB3 SHL GT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"159:2074:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;751:183;;;;;;:::i;:::-;;:::i;:::-;;940:638;;;;;;:::i;:::-;;:::i;:::-;;;3485:25:36;;;3473:2;3458:18;940:638:16;;;;;;;;253:22;;;;;-1:-1:-1;;;;;253:22:16;;;;;;-1:-1:-1;;;;;2323:32:36;;;2305:51;;2293:2;2278:18;253:22:16;2159:203:36;281:29:16;;;;;;:::i;:::-;;:::i;198:49::-;;243:4;198:49;;615:130;;;;;;:::i;:::-;;:::i;1584:647::-;;;;;;:::i;:::-;;:::i;751:183::-;554:7;;-1:-1:-1;;;;;554:7:16;540:10;:21;536:55;;570:21;;-1:-1:-1;;;570:21:16;;580:10;570:21;;;2305:51:36;2278:18;;570:21:16;;;;;;;;536:55;853:28;;::::1;::::0;:12:::1;::::0;:28:::1;::::0;::::1;::::0;::::1;:::i;:::-;;897:30;913:13;897:30;;;;;;:::i;:::-;;;;;;;;751:183:::0;:::o;940:638::-;1109:12;:19;1060:20;;;1138:434;1162:6;1158:1;:10;1138:434;;;1189:33;1264:12;1277:1;1264:15;;;;;;;;:::i;:::-;;;;;;;;;;1323:45;;-1:-1:-1;;;1323:45:16;;-1:-1:-1;;;;;2597:15:36;;;1323:45:16;;;2579:34:36;2649:15;;;2629:18;;;2622:43;1264:15:16;;;;-1:-1:-1;1264:15:16;;1323:20;;2514:18:36;;1323:45:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1307:61;;1382:12;1397:11;-1:-1:-1;;;;;1397:21:16;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1382:38;-1:-1:-1;1382:38:16;1443:17;243:4;1443:5;:17;:::i;:::-;1442:26;;;;:::i;:::-;1434:34;;1495:12;1487:5;:20;1483:79;;;1542:5;1527:20;;1483:79;1175:397;;;1170:3;;;;;:::i;:::-;;;;1138:434;;;;1082:496;940:638;;;;:::o;281:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;281:29:16;;-1:-1:-1;281:29:16;:::o;615:130::-;554:7;;-1:-1:-1;;;;;554:7:16;540:10;:21;536:55;;570:21;;-1:-1:-1;;;570:21:16;;580:10;570:21;;;2305:51:36;2278:18;;570:21:16;2159:203:36;536:55:16;684:7:::1;:18:::0;;-1:-1:-1;;;;;;684:18:16::1;-1:-1:-1::0;;;;;684:18:16;::::1;::::0;;::::1;::::0;;;718:20:::1;::::0;2305:51:36;;;718:20:16::1;::::0;2293:2:36;2278:18;718:20:16::1;2159:203:36::0;1584:647:16;1751:12;:19;1703;;;1780:445;1804:6;1800:1;:10;1780:445;;;1831:33;1906:12;1919:1;1906:15;;;;;;;;:::i;:::-;;;;;;;;;;1965:45;;-1:-1:-1;;;1965:45:16;;-1:-1:-1;;;;;2597:15:36;;;1965:45:16;;;2579:34:36;2649:15;;;2629:18;;;2622:43;1906:15:16;;;;-1:-1:-1;1906:15:16;;1965:20;;2514:18:36;;1965:45:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1949:61;;2024:12;2039:11;-1:-1:-1;;;;;2039:21:16;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2024:38;-1:-1:-1;2024:38:16;2085:17;243:4;2085:5;:17;:::i;:::-;2084:26;;;;:::i;:::-;2076:34;;2137:1;2129:5;:9;:32;;;;;2150:11;2142:5;:19;2129:32;2125:90;;;2195:5;2181:19;;2125:90;1817:408;;;1812:3;;;;;:::i;:::-;;;;1780:445;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:36;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:36:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:1132::-;732:6;763:2;806;794:9;785:7;781:23;777:32;774:52;;;822:1;819;812:12;774:52;862:9;849:23;891:18;932:2;924:6;921:14;918:34;;;948:1;945;938:12;918:34;986:6;975:9;971:22;961:32;;1031:7;1024:4;1020:2;1016:13;1012:27;1002:55;;1053:1;1050;1043:12;1002:55;1089:2;1076:16;1111:2;1107;1104:10;1101:36;;;1117:18;;:::i;:::-;1163:2;1160:1;1156:10;1195:2;1189:9;1258:2;1254:7;1249:2;1245;1241:11;1237:25;1229:6;1225:38;1313:6;1301:10;1298:22;1293:2;1281:10;1278:18;1275:46;1272:72;;;1324:18;;:::i;:::-;1360:2;1353:22;1410:18;;;1444:15;;;;-1:-1:-1;1479:11:36;;;1509;;;1505:20;;1502:33;-1:-1:-1;1499:53:36;;;1548:1;1545;1538:12;1499:53;1570:1;1561:10;;1580:169;1594:2;1591:1;1588:9;1580:169;;;1651:23;1670:3;1651:23;:::i;:::-;1639:36;;1612:1;1605:9;;;;;1695:12;;;;1727;;1580:169;;;-1:-1:-1;1768:6:36;648:1132;-1:-1:-1;;;;;;;;648:1132:36:o;1785:180::-;1844:6;1897:2;1885:9;1876:7;1872:23;1868:32;1865:52;;;1913:1;1910;1903:12;1865:52;-1:-1:-1;1936:23:36;;1785:180;-1:-1:-1;1785:180:36:o;1970:184::-;2040:6;2093:2;2081:9;2072:7;2068:23;2064:32;2061:52;;;2109:1;2106;2099:12;2061:52;-1:-1:-1;2132:16:36;;1970:184;-1:-1:-1;1970:184:36:o;2676:658::-;2847:2;2899:21;;;2969:13;;2872:18;;;2991:22;;;2818:4;;2847:2;3070:15;;;;3044:2;3029:18;;;2818:4;3113:195;3127:6;3124:1;3121:13;3113:195;;;3192:13;;-1:-1:-1;;;;;3188:39:36;3176:52;;3283:15;;;;3248:12;;;;3224:1;3142:9;3113:195;;;-1:-1:-1;3325:3:36;;2676:658;-1:-1:-1;;;;;;2676:658:36:o;3521:217::-;3561:1;3587;3577:132;;3631:10;3626:3;3622:20;3619:1;3612:31;3666:4;3663:1;3656:15;3694:4;3691:1;3684:15;3577:132;-1:-1:-1;3723:9:36;;3521:217::o;3743:168::-;3783:7;3849:1;3845;3841:6;3837:14;3834:1;3831:21;3826:1;3819:9;3812:17;3808:45;3805:71;;;3856:18;;:::i;:::-;-1:-1:-1;3896:9:36;;3743:168::o;3916:135::-;3955:3;-1:-1:-1;;3976:17:36;;3973:43;;;3996:18;;:::i;:::-;-1:-1:-1;4043:1:36;4032:13;;3916:135::o;4056:127::-;4117:10;4112:3;4108:20;4105:1;4098:31;4148:4;4145:1;4138:15;4172:4;4169:1;4162:15;4188:127;4249:10;4244:3;4240:20;4237:1;4230:31;4280:4;4277:1;4270:15;4304:4;4301:1;4294:15;4320:127;4381:10;4376:3;4372:20;4369:1;4362:31;4412:4;4409:1;4402:15;4436:4;4433:1;4426:15"},"gasEstimates":{"creation":{"codeDepositCost":"428000","executionCost":"24696","totalCost":"452696"},"external":{"PRECISION()":"206","getHighestPrice(address,address)":"infinite","getLowestPrice(address,address)":"infinite","integrations(uint256)":"4614","manager()":"2382","setIntegrations(address[])":"infinite","setManager(address)":"27820"}},"methodIdentifiers":{"PRECISION()":"aaf5eb68","getHighestPrice(address,address)":"1a102f67","getLowestPrice(address,address)":"e6c14362","integrations(uint256)":"790bde32","manager()":"481c6a75","setIntegrations(address[])":"10466861","setManager(address)":"d0ebdbe7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Forbidden\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"integrations\",\"type\":\"address[]\"}],\"name\":\"SetIntegrations\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"SetManager\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getHighestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"highestPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getLowestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lowestPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"integrations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_integrations\",\"type\":\"address[]\"}],\"name\":\"setIntegrations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceFeed.sol\":\"PriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\nimport \\\"./interfaces/IPriceFeed.sol\\\";\\nimport \\\"./interfaces/IPriceFeedIntegration.sol\\\";\\n\\ncontract PriceFeed is IPriceFeed {\\n    uint256 public constant override PRECISION = 1e30;\\n    address public manager;\\n    address[] public integrations;\\n\\n    event SetManager(address manager);\\n    event SetIntegrations(address[] integrations);\\n\\n    error Forbidden(address sender);\\n\\n    constructor() {\\n        manager = msg.sender;\\n    }\\n\\n    modifier onlyManager() {\\n        if (msg.sender != manager) revert Forbidden(msg.sender);\\n        _;\\n    }\\n\\n    function setManager(address _manager) external onlyManager {\\n        manager = _manager;\\n\\n        emit SetManager(_manager);\\n    }\\n\\n    function setIntegrations(\\n        address[] memory _integrations\\n    ) external onlyManager {\\n        integrations = _integrations;\\n\\n        emit SetIntegrations(_integrations);\\n    }\\n\\n    function getHighestPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view override returns (uint256 highestPrice) {\\n        uint256 length = integrations.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            IPriceFeedIntegration integration = IPriceFeedIntegration(\\n                integrations[i]\\n            );\\n            uint256 price = integration.getPrice(_baseToken, _quoteToken);\\n            uint256 prec = integration.PRECISION();\\n            price = (price * PRECISION) / prec;\\n\\n            if (price > highestPrice) {\\n                highestPrice = price;\\n            }\\n        }\\n    }\\n\\n    function getLowestPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view override returns (uint256 lowestPrice) {\\n        uint256 length = integrations.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            IPriceFeedIntegration integration = IPriceFeedIntegration(\\n                integrations[i]\\n            );\\n            uint256 price = integration.getPrice(_baseToken, _quoteToken);\\n            uint256 prec = integration.PRECISION();\\n            price = (price * PRECISION) / prec;\\n\\n            if (price > 0 && price < lowestPrice) {\\n                lowestPrice = price;\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x57259791804eed1e1ba0aa0775bbf564cb4419792f4cfd31a5821f659b999cda\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeed {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getHighestPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n\\n    function getLowestPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xdac54d0d581c92b44eb91ea93de03ef56bbb44c3eb027c302c81f40ad2bff9d2\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeedIntegration {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1613,"contract":"contracts/PriceFeed.sol:PriceFeed","label":"manager","offset":0,"slot":"0","type":"t_address"},{"astId":1616,"contract":"contracts/PriceFeed.sol:PriceFeed","label":"integrations","offset":0,"slot":"1","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TokenReader.sol":{"TokenReader":{"abi":[{"inputs":[{"internalType":"address[]","name":"_users","type":"address[]"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"getTokenAllowances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_users","type":"address[]"},{"internalType":"address","name":"_token","type":"address"}],"name":"getTokenBalances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"getTokenDecimals","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"getTokenSupplies","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address[]","name":"_tokens","type":"address[]"},{"internalType":"address","name":"_spender","type":"address"}],"name":"getTokensAllowance","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"getTokensBalance","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610ce7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631e6a15971461006757806337860a08146100905780634e11048f146100a357806363f35cdd146100b6578063706e2f9b146100c9578063c3fae362146100dc575b600080fd5b61007a610075366004610abe565b6100ef565b6040516100879190610be1565b60405180910390f35b61007a61009e366004610a12565b61025c565b61007a6100b1366004610a60565b6103ce565b61007a6100c4366004610b49565b610549565b61007a6100d7366004610abe565b6106a0565b61007a6100ea366004610afb565b6107ff565b805160609060008167ffffffffffffffff81111561010f5761010f610c9b565b604051908082528060200260200182016040528015610138578160200160208202803683370190505b50905060005b828110156102545760006001600160a01b031685828151811061016357610163610c85565b60200260200101516001600160a01b0316141561019b5760405162461bcd60e51b815260040161019290610c25565b60405180910390fd5b8481815181106101ad576101ad610c85565b60200260200101516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ed57600080fd5b505afa158015610201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102259190610b9e565b82828151811061023757610237610c85565b60209081029190910101528061024c81610c5c565b91505061013e565b509392505050565b805160609060008167ffffffffffffffff81111561027c5761027c610c9b565b6040519080825280602002602001820160405280156102a5578160200160208202803683370190505b50905060005b828110156103c55760006001600160a01b03168582815181106102d0576102d0610c85565b60200260200101516001600160a01b031614156102ff5760405162461bcd60e51b815260040161019290610c25565b84818151811061031157610311610c85565b60209081029190910101516040516370a0823160e01b81526001600160a01b038881166004830152909116906370a082319060240160206040518083038186803b15801561035e57600080fd5b505afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190610b9e565b8282815181106103a8576103a8610c85565b6020908102919091010152806103bd81610c5c565b9150506102ab565b50949350505050565b815160609060008167ffffffffffffffff8111156103ee576103ee610c9b565b604051908082528060200260200182016040528015610417578160200160208202803683370190505b50905060005b8281101561053f5760006001600160a01b031686828151811061044257610442610c85565b60200260200101516001600160a01b031614156104715760405162461bcd60e51b815260040161019290610c25565b85818151811061048357610483610c85565b6020908102919091010151604051636eb1769f60e11b81526001600160a01b03898116600483015287811660248301529091169063dd62ed3e9060440160206040518083038186803b1580156104d857600080fd5b505afa1580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105109190610b9e565b82828151811061052257610522610c85565b60209081029190910101528061053781610c5c565b91505061041d565b5095945050505050565b60606001600160a01b0383166105715760405162461bcd60e51b815260040161019290610c25565b835160008167ffffffffffffffff81111561058e5761058e610c9b565b6040519080825280602002602001820160405280156105b7578160200160208202803683370190505b50905060005b8281101561053f57856001600160a01b031663dd62ed3e8883815181106105e6576105e6610c85565b6020026020010151876040518363ffffffff1660e01b81526004016106219291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b15801561063957600080fd5b505afa15801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190610b9e565b82828151811061068357610683610c85565b60209081029190910101528061069881610c5c565b9150506105bd565b805160609060008167ffffffffffffffff8111156106c0576106c0610c9b565b6040519080825280602002602001820160405280156106e9578160200160208202803683370190505b50905060005b828110156102545760006001600160a01b031685828151811061071457610714610c85565b60200260200101516001600160a01b031614156107435760405162461bcd60e51b815260040161019290610c25565b84818151811061075557610755610c85565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561079557600080fd5b505afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd9190610bb7565b60ff168282815181106107e2576107e2610c85565b6020908102919091010152806107f781610c5c565b9150506106ef565b60606001600160a01b0382166108275760405162461bcd60e51b815260040161019290610c25565b825160008167ffffffffffffffff81111561084457610844610c9b565b60405190808252806020026020018201604052801561086d578160200160208202803683370190505b50905060005b828110156103c557846001600160a01b03166370a0823187838151811061089c5761089c610c85565b60200260200101516040518263ffffffff1660e01b81526004016108cf91906001600160a01b0391909116815260200190565b60206040518083038186803b1580156108e757600080fd5b505afa1580156108fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091f9190610b9e565b82828151811061093157610931610c85565b60209081029190910101528061094681610c5c565b915050610873565b80356001600160a01b038116811461096557600080fd5b919050565b600082601f83011261097b57600080fd5b8135602067ffffffffffffffff8083111561099857610998610c9b565b8260051b604051601f19603f830116810181811084821117156109bd576109bd610c9b565b604052848152838101925086840182880185018910156109dc57600080fd5b600092505b85831015610a06576109f28161094e565b8452928401926001929092019184016109e1565b50979650505050505050565b60008060408385031215610a2557600080fd5b610a2e8361094e565b9150602083013567ffffffffffffffff811115610a4a57600080fd5b610a568582860161096a565b9150509250929050565b600080600060608486031215610a7557600080fd5b610a7e8461094e565b9250602084013567ffffffffffffffff811115610a9a57600080fd5b610aa68682870161096a565b925050610ab56040850161094e565b90509250925092565b600060208284031215610ad057600080fd5b813567ffffffffffffffff811115610ae757600080fd5b610af38482850161096a565b949350505050565b60008060408385031215610b0e57600080fd5b823567ffffffffffffffff811115610b2557600080fd5b610b318582860161096a565b925050610b406020840161094e565b90509250929050565b600080600060608486031215610b5e57600080fd5b833567ffffffffffffffff811115610b7557600080fd5b610b818682870161096a565b935050610b906020850161094e565b9150610ab56040850161094e565b600060208284031215610bb057600080fd5b5051919050565b600060208284031215610bc957600080fd5b815160ff81168114610bda57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610c1957835183529284019291840191600101610bfd565b50909695505050505050565b60208082526019908201527f546f6b656e5265616465723a205a45524f5f4144445245535300000000000000604082015260600190565b6000600019821415610c7e57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212207f2aea6145d564df6b43267b961a83953e298216b1d82f3f26b204e430ae4a7964736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCE7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E6A1597 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x37860A08 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x4E11048F EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x63F35CDD EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x706E2F9B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xC3FAE362 EQ PUSH2 0xDC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0xABE JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0x9E CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH2 0x7A PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x7A PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0xABE JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10F JUMPI PUSH2 0x10F PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x138 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x163 JUMPI PUSH2 0x163 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1AD JUMPI PUSH2 0x1AD PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x201 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x237 JUMPI PUSH2 0x237 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x24C DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27C PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D0 JUMPI PUSH2 0x2D0 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x311 JUMPI PUSH2 0x311 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A8 JUMPI PUSH2 0x3A8 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x3BD DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AB JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3EE PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x417 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x442 JUMPI PUSH2 0x442 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH2 0x483 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x522 JUMPI PUSH2 0x522 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x537 DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x41D JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58E JUMPI PUSH2 0x58E PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5B7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x53F JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD62ED3E DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5E6 JUMPI PUSH2 0x5E6 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x621 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x671 SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x683 JUMPI PUSH2 0x683 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x698 DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5BD JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C0 JUMPI PUSH2 0x6C0 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x714 JUMPI PUSH2 0x714 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x755 JUMPI PUSH2 0x755 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0xFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7E2 JUMPI PUSH2 0x7E2 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x7F7 DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x844 JUMPI PUSH2 0x844 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x86D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C5 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x89C JUMPI PUSH2 0x89C PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CF SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91F SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x946 DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x873 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x998 JUMPI PUSH2 0x998 PUSH2 0xC9B JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BD PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0xA06 JUMPI PUSH2 0x9F2 DUP2 PUSH2 0x94E JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0x9E1 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA2E DUP4 PUSH2 0x94E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA56 DUP6 DUP3 DUP7 ADD PUSH2 0x96A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7E DUP5 PUSH2 0x94E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA6 DUP7 DUP3 DUP8 ADD PUSH2 0x96A JUMP JUMPDEST SWAP3 POP POP PUSH2 0xAB5 PUSH1 0x40 DUP6 ADD PUSH2 0x94E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAF3 DUP5 DUP3 DUP6 ADD PUSH2 0x96A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB31 DUP6 DUP3 DUP7 ADD PUSH2 0x96A JUMP JUMPDEST SWAP3 POP POP PUSH2 0xB40 PUSH1 0x20 DUP5 ADD PUSH2 0x94E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB81 DUP7 DUP3 DUP8 ADD PUSH2 0x96A JUMP JUMPDEST SWAP4 POP POP PUSH2 0xB90 PUSH1 0x20 DUP6 ADD PUSH2 0x94E JUMP JUMPDEST SWAP2 POP PUSH2 0xAB5 PUSH1 0x40 DUP6 ADD PUSH2 0x94E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xBDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC19 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xBFD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E5265616465723A205A45524F5F4144445245535300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xC7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x2AEA6145D564DF6B43267B961A83953E298216B1D82F3F26B204E430AE4A7964 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"126:2822:17:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getTokenAllowances_2230":{"entryPoint":1353,"id":2230,"parameterSlots":3,"returnSlots":1},"@getTokenBalances_2092":{"entryPoint":2047,"id":2092,"parameterSlots":2,"returnSlots":1},"@getTokenDecimals_1960":{"entryPoint":1696,"id":1960,"parameterSlots":1,"returnSlots":1},"@getTokenSupplies_1896":{"entryPoint":239,"id":1896,"parameterSlots":1,"returnSlots":1},"@getTokensAllowance_2162":{"entryPoint":974,"id":2162,"parameterSlots":3,"returnSlots":1},"@getTokensBalance_2027":{"entryPoint":604,"id":2027,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2382,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn":{"entryPoint":2410,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptr":{"entryPoint":2578,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_address":{"entryPoint":2656,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address":{"entryPoint":2811,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_address":{"entryPoint":2889,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2974,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":2999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3041,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3109,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3164,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":3205,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3227,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5798:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:36","statements":[{"nodeType":"YulAssignment","src":"73:29:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:36"},"nodeType":"YulFunctionCall","src":"82:20:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:36"}]},{"body":{"nodeType":"YulBlock","src":"165:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:36"},"nodeType":"YulFunctionCall","src":"167:12:36"},"nodeType":"YulExpressionStatement","src":"167:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:36"},"nodeType":"YulFunctionCall","src":"146:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:36"},"nodeType":"YulFunctionCall","src":"142:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:36"},"nodeType":"YulFunctionCall","src":"131:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:36"},"nodeType":"YulFunctionCall","src":"121:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:36"},"nodeType":"YulFunctionCall","src":"114:50:36"},"nodeType":"YulIf","src":"111:70:36"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:36","type":""}],"src":"14:173:36"},{"body":{"nodeType":"YulBlock","src":"256:855:36","statements":[{"body":{"nodeType":"YulBlock","src":"305:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"314:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"307:6:36"},"nodeType":"YulFunctionCall","src":"307:12:36"},"nodeType":"YulExpressionStatement","src":"307:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"284:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"292:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"280:3:36"},"nodeType":"YulFunctionCall","src":"280:17:36"},{"name":"end","nodeType":"YulIdentifier","src":"299:3:36"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"276:3:36"},"nodeType":"YulFunctionCall","src":"276:27:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"269:6:36"},"nodeType":"YulFunctionCall","src":"269:35:36"},"nodeType":"YulIf","src":"266:55:36"},{"nodeType":"YulVariableDeclaration","src":"330:30:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"353:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"340:12:36"},"nodeType":"YulFunctionCall","src":"340:20:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"334:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"369:14:36","value":{"kind":"number","nodeType":"YulLiteral","src":"379:4:36","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"373:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"392:28:36","value":{"kind":"number","nodeType":"YulLiteral","src":"402:18:36","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"396:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"443:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"445:16:36"},"nodeType":"YulFunctionCall","src":"445:18:36"},"nodeType":"YulExpressionStatement","src":"445:18:36"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"435:2:36"},{"name":"_3","nodeType":"YulIdentifier","src":"439:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"432:2:36"},"nodeType":"YulFunctionCall","src":"432:10:36"},"nodeType":"YulIf","src":"429:36:36"},{"nodeType":"YulVariableDeclaration","src":"474:20:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"488:1:36","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"491:2:36"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"484:3:36"},"nodeType":"YulFunctionCall","src":"484:10:36"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"478:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"503:23:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"523:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"517:5:36"},"nodeType":"YulFunctionCall","src":"517:9:36"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"507:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"535:56:36","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"557:6:36"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"573:2:36"},{"kind":"number","nodeType":"YulLiteral","src":"577:2:36","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"569:3:36"},"nodeType":"YulFunctionCall","src":"569:11:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"586:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"582:3:36"},"nodeType":"YulFunctionCall","src":"582:7:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"565:3:36"},"nodeType":"YulFunctionCall","src":"565:25:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"553:3:36"},"nodeType":"YulFunctionCall","src":"553:38:36"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"539:10:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"650:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"652:16:36"},"nodeType":"YulFunctionCall","src":"652:18:36"},"nodeType":"YulExpressionStatement","src":"652:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"609:10:36"},{"name":"_3","nodeType":"YulIdentifier","src":"621:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"606:2:36"},"nodeType":"YulFunctionCall","src":"606:18:36"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"629:10:36"},{"name":"memPtr","nodeType":"YulIdentifier","src":"641:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"626:2:36"},"nodeType":"YulFunctionCall","src":"626:22:36"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"603:2:36"},"nodeType":"YulFunctionCall","src":"603:46:36"},"nodeType":"YulIf","src":"600:72:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"688:2:36","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"692:10:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"681:6:36"},"nodeType":"YulFunctionCall","src":"681:22:36"},"nodeType":"YulExpressionStatement","src":"681:22:36"},{"nodeType":"YulVariableDeclaration","src":"712:17:36","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"723:6:36"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"716:3:36","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"745:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"753:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"738:6:36"},"nodeType":"YulFunctionCall","src":"738:18:36"},"nodeType":"YulExpressionStatement","src":"738:18:36"},{"nodeType":"YulAssignment","src":"765:22:36","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"776:6:36"},{"name":"_2","nodeType":"YulIdentifier","src":"784:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"772:3:36"},"nodeType":"YulFunctionCall","src":"772:15:36"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"765:3:36"}]},{"nodeType":"YulVariableDeclaration","src":"796:26:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"811:6:36"},{"name":"_2","nodeType":"YulIdentifier","src":"819:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"807:3:36"},"nodeType":"YulFunctionCall","src":"807:15:36"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"800:3:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"868:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"877:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"880:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"870:6:36"},"nodeType":"YulFunctionCall","src":"870:12:36"},"nodeType":"YulExpressionStatement","src":"870:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"845:6:36"},{"name":"_4","nodeType":"YulIdentifier","src":"853:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"841:3:36"},"nodeType":"YulFunctionCall","src":"841:15:36"},{"name":"_2","nodeType":"YulIdentifier","src":"858:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"837:3:36"},"nodeType":"YulFunctionCall","src":"837:24:36"},{"name":"end","nodeType":"YulIdentifier","src":"863:3:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"834:2:36"},"nodeType":"YulFunctionCall","src":"834:33:36"},"nodeType":"YulIf","src":"831:53:36"},{"nodeType":"YulVariableDeclaration","src":"893:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"902:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"897:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"957:124:36","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"978:3:36"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1002:3:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"983:18:36"},"nodeType":"YulFunctionCall","src":"983:23:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"971:6:36"},"nodeType":"YulFunctionCall","src":"971:36:36"},"nodeType":"YulExpressionStatement","src":"971:36:36"},{"nodeType":"YulAssignment","src":"1020:19:36","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1031:3:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1036:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:36"},"nodeType":"YulFunctionCall","src":"1027:12:36"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1020:3:36"}]},{"nodeType":"YulAssignment","src":"1052:19:36","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1063:3:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1068:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1059:3:36"},"nodeType":"YulFunctionCall","src":"1059:12:36"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1052:3:36"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"923:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"926:2:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"920:2:36"},"nodeType":"YulFunctionCall","src":"920:9:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"930:18:36","statements":[{"nodeType":"YulAssignment","src":"932:14:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"941:1:36"},{"kind":"number","nodeType":"YulLiteral","src":"944:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"937:3:36"},"nodeType":"YulFunctionCall","src":"937:9:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"932:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"916:3:36","statements":[]},"src":"912:169:36"},{"nodeType":"YulAssignment","src":"1090:15:36","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1099:6:36"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1090:5:36"}]}]},"name":"abi_decode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"230:6:36","type":""},{"name":"end","nodeType":"YulTypedName","src":"238:3:36","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"246:5:36","type":""}],"src":"192:919:36"},{"body":{"nodeType":"YulBlock","src":"1228:310:36","statements":[{"body":{"nodeType":"YulBlock","src":"1274:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:36"},"nodeType":"YulFunctionCall","src":"1276:12:36"},"nodeType":"YulExpressionStatement","src":"1276:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1249:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"1258:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1245:3:36"},"nodeType":"YulFunctionCall","src":"1245:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"1270:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1241:3:36"},"nodeType":"YulFunctionCall","src":"1241:32:36"},"nodeType":"YulIf","src":"1238:52:36"},{"nodeType":"YulAssignment","src":"1299:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1309:18:36"},"nodeType":"YulFunctionCall","src":"1309:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"1347:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1378:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1389:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1374:3:36"},"nodeType":"YulFunctionCall","src":"1374:18:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1361:12:36"},"nodeType":"YulFunctionCall","src":"1361:32:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1351:6:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1436:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1445:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1448:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1438:6:36"},"nodeType":"YulFunctionCall","src":"1438:12:36"},"nodeType":"YulExpressionStatement","src":"1438:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1408:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"1416:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1405:2:36"},"nodeType":"YulFunctionCall","src":"1405:30:36"},"nodeType":"YulIf","src":"1402:50:36"},{"nodeType":"YulAssignment","src":"1461:71:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1504:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"1515:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1500:3:36"},"nodeType":"YulFunctionCall","src":"1500:22:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1524:7:36"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"1471:28:36"},"nodeType":"YulFunctionCall","src":"1471:61:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1461:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1186:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1197:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1209:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1217:6:36","type":""}],"src":"1116:422:36"},{"body":{"nodeType":"YulBlock","src":"1672:367:36","statements":[{"body":{"nodeType":"YulBlock","src":"1718:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1727:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1730:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1720:6:36"},"nodeType":"YulFunctionCall","src":"1720:12:36"},"nodeType":"YulExpressionStatement","src":"1720:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1693:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"1702:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1689:3:36"},"nodeType":"YulFunctionCall","src":"1689:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"1714:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1685:3:36"},"nodeType":"YulFunctionCall","src":"1685:32:36"},"nodeType":"YulIf","src":"1682:52:36"},{"nodeType":"YulAssignment","src":"1743:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1772:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1753:18:36"},"nodeType":"YulFunctionCall","src":"1753:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1743:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"1791:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1822:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1833:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1818:3:36"},"nodeType":"YulFunctionCall","src":"1818:18:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1805:12:36"},"nodeType":"YulFunctionCall","src":"1805:32:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1795:6:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1880:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1889:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1892:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1882:6:36"},"nodeType":"YulFunctionCall","src":"1882:12:36"},"nodeType":"YulExpressionStatement","src":"1882:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1852:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"1860:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1849:2:36"},"nodeType":"YulFunctionCall","src":"1849:30:36"},"nodeType":"YulIf","src":"1846:50:36"},{"nodeType":"YulAssignment","src":"1905:71:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1948:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"1959:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1944:3:36"},"nodeType":"YulFunctionCall","src":"1944:22:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1968:7:36"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"1915:28:36"},"nodeType":"YulFunctionCall","src":"1915:61:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1905:6:36"}]},{"nodeType":"YulAssignment","src":"1985:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2018:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2029:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2014:3:36"},"nodeType":"YulFunctionCall","src":"2014:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1995:18:36"},"nodeType":"YulFunctionCall","src":"1995:38:36"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1985:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1622:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1633:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1645:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1653:6:36","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1661:6:36","type":""}],"src":"1543:496:36"},{"body":{"nodeType":"YulBlock","src":"2139:253:36","statements":[{"body":{"nodeType":"YulBlock","src":"2185:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2194:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2197:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2187:6:36"},"nodeType":"YulFunctionCall","src":"2187:12:36"},"nodeType":"YulExpressionStatement","src":"2187:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2160:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2169:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2156:3:36"},"nodeType":"YulFunctionCall","src":"2156:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2181:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2152:3:36"},"nodeType":"YulFunctionCall","src":"2152:32:36"},"nodeType":"YulIf","src":"2149:52:36"},{"nodeType":"YulVariableDeclaration","src":"2210:37:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2237:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2224:12:36"},"nodeType":"YulFunctionCall","src":"2224:23:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2214:6:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"2290:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2299:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2302:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2292:6:36"},"nodeType":"YulFunctionCall","src":"2292:12:36"},"nodeType":"YulExpressionStatement","src":"2292:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2262:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"2270:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2259:2:36"},"nodeType":"YulFunctionCall","src":"2259:30:36"},"nodeType":"YulIf","src":"2256:50:36"},{"nodeType":"YulAssignment","src":"2315:71:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2358:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"2369:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2354:3:36"},"nodeType":"YulFunctionCall","src":"2354:22:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2378:7:36"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"2325:28:36"},"nodeType":"YulFunctionCall","src":"2325:61:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2315:6:36"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2105:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2116:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2128:6:36","type":""}],"src":"2044:348:36"},{"body":{"nodeType":"YulBlock","src":"2509:310:36","statements":[{"body":{"nodeType":"YulBlock","src":"2555:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2564:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2567:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2557:6:36"},"nodeType":"YulFunctionCall","src":"2557:12:36"},"nodeType":"YulExpressionStatement","src":"2557:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2530:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2539:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2526:3:36"},"nodeType":"YulFunctionCall","src":"2526:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2551:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2522:3:36"},"nodeType":"YulFunctionCall","src":"2522:32:36"},"nodeType":"YulIf","src":"2519:52:36"},{"nodeType":"YulVariableDeclaration","src":"2580:37:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2594:12:36"},"nodeType":"YulFunctionCall","src":"2594:23:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2584:6:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"2660:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2669:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2672:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2662:6:36"},"nodeType":"YulFunctionCall","src":"2662:12:36"},"nodeType":"YulExpressionStatement","src":"2662:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2632:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"2640:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2629:2:36"},"nodeType":"YulFunctionCall","src":"2629:30:36"},"nodeType":"YulIf","src":"2626:50:36"},{"nodeType":"YulAssignment","src":"2685:71:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2728:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"2739:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:36"},"nodeType":"YulFunctionCall","src":"2724:22:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2748:7:36"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"2695:28:36"},"nodeType":"YulFunctionCall","src":"2695:61:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2685:6:36"}]},{"nodeType":"YulAssignment","src":"2765:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2798:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2809:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2794:3:36"},"nodeType":"YulFunctionCall","src":"2794:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2775:18:36"},"nodeType":"YulFunctionCall","src":"2775:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2765:6:36"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2467:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2478:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2490:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2498:6:36","type":""}],"src":"2397:422:36"},{"body":{"nodeType":"YulBlock","src":"2953:367:36","statements":[{"body":{"nodeType":"YulBlock","src":"2999:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3008:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3011:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3001:6:36"},"nodeType":"YulFunctionCall","src":"3001:12:36"},"nodeType":"YulExpressionStatement","src":"3001:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2974:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2983:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2970:3:36"},"nodeType":"YulFunctionCall","src":"2970:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2995:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2966:3:36"},"nodeType":"YulFunctionCall","src":"2966:32:36"},"nodeType":"YulIf","src":"2963:52:36"},{"nodeType":"YulVariableDeclaration","src":"3024:37:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3051:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3038:12:36"},"nodeType":"YulFunctionCall","src":"3038:23:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3028:6:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"3104:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3113:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3116:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3106:6:36"},"nodeType":"YulFunctionCall","src":"3106:12:36"},"nodeType":"YulExpressionStatement","src":"3106:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3076:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"3084:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3073:2:36"},"nodeType":"YulFunctionCall","src":"3073:30:36"},"nodeType":"YulIf","src":"3070:50:36"},{"nodeType":"YulAssignment","src":"3129:71:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3172:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"3183:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3168:3:36"},"nodeType":"YulFunctionCall","src":"3168:22:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3192:7:36"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"3139:28:36"},"nodeType":"YulFunctionCall","src":"3139:61:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3129:6:36"}]},{"nodeType":"YulAssignment","src":"3209:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3242:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3253:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3238:3:36"},"nodeType":"YulFunctionCall","src":"3238:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3219:18:36"},"nodeType":"YulFunctionCall","src":"3219:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3209:6:36"}]},{"nodeType":"YulAssignment","src":"3266:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3299:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3310:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:36"},"nodeType":"YulFunctionCall","src":"3295:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3276:18:36"},"nodeType":"YulFunctionCall","src":"3276:38:36"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3266:6:36"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2903:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2914:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2926:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2934:6:36","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2942:6:36","type":""}],"src":"2824:496:36"},{"body":{"nodeType":"YulBlock","src":"3406:103:36","statements":[{"body":{"nodeType":"YulBlock","src":"3452:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3461:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3464:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3454:6:36"},"nodeType":"YulFunctionCall","src":"3454:12:36"},"nodeType":"YulExpressionStatement","src":"3454:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3427:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"3436:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3423:3:36"},"nodeType":"YulFunctionCall","src":"3423:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"3448:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3419:3:36"},"nodeType":"YulFunctionCall","src":"3419:32:36"},"nodeType":"YulIf","src":"3416:52:36"},{"nodeType":"YulAssignment","src":"3477:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3493:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3487:5:36"},"nodeType":"YulFunctionCall","src":"3487:16:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3477:6:36"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3372:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3383:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3395:6:36","type":""}],"src":"3325:184:36"},{"body":{"nodeType":"YulBlock","src":"3593:194:36","statements":[{"body":{"nodeType":"YulBlock","src":"3639:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3648:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3651:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3641:6:36"},"nodeType":"YulFunctionCall","src":"3641:12:36"},"nodeType":"YulExpressionStatement","src":"3641:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3614:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"3623:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3610:3:36"},"nodeType":"YulFunctionCall","src":"3610:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3606:3:36"},"nodeType":"YulFunctionCall","src":"3606:32:36"},"nodeType":"YulIf","src":"3603:52:36"},{"nodeType":"YulVariableDeclaration","src":"3664:29:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3677:5:36"},"nodeType":"YulFunctionCall","src":"3677:16:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3668:5:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"3741:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:36"},"nodeType":"YulFunctionCall","src":"3743:12:36"},"nodeType":"YulExpressionStatement","src":"3743:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3715:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3726:5:36"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:36","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3722:3:36"},"nodeType":"YulFunctionCall","src":"3722:16:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3712:2:36"},"nodeType":"YulFunctionCall","src":"3712:27:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3705:6:36"},"nodeType":"YulFunctionCall","src":"3705:35:36"},"nodeType":"YulIf","src":"3702:55:36"},{"nodeType":"YulAssignment","src":"3766:15:36","value":{"name":"value","nodeType":"YulIdentifier","src":"3776:5:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3766:6:36"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3559:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3570:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3582:6:36","type":""}],"src":"3514:273:36"},{"body":{"nodeType":"YulBlock","src":"3893:102:36","statements":[{"nodeType":"YulAssignment","src":"3903:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3915:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3926:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3911:3:36"},"nodeType":"YulFunctionCall","src":"3911:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3903:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3945:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3960:6:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3976:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3981:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3972:3:36"},"nodeType":"YulFunctionCall","src":"3972:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"3985:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3968:3:36"},"nodeType":"YulFunctionCall","src":"3968:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3956:3:36"},"nodeType":"YulFunctionCall","src":"3956:32:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3938:6:36"},"nodeType":"YulFunctionCall","src":"3938:51:36"},"nodeType":"YulExpressionStatement","src":"3938:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3862:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3873:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3884:4:36","type":""}],"src":"3792:203:36"},{"body":{"nodeType":"YulBlock","src":"4129:175:36","statements":[{"nodeType":"YulAssignment","src":"4139:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4151:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4162:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4147:3:36"},"nodeType":"YulFunctionCall","src":"4147:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4139:4:36"}]},{"nodeType":"YulVariableDeclaration","src":"4174:29:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4192:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4197:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4188:3:36"},"nodeType":"YulFunctionCall","src":"4188:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"4201:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4184:3:36"},"nodeType":"YulFunctionCall","src":"4184:19:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4178:2:36","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4219:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4234:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"4242:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4230:3:36"},"nodeType":"YulFunctionCall","src":"4230:15:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4212:6:36"},"nodeType":"YulFunctionCall","src":"4212:34:36"},"nodeType":"YulExpressionStatement","src":"4212:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4266:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4277:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4262:3:36"},"nodeType":"YulFunctionCall","src":"4262:18:36"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4286:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"4294:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4282:3:36"},"nodeType":"YulFunctionCall","src":"4282:15:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4255:6:36"},"nodeType":"YulFunctionCall","src":"4255:43:36"},"nodeType":"YulExpressionStatement","src":"4255:43:36"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4090:9:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4101:6:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4109:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4120:4:36","type":""}],"src":"4000:304:36"},{"body":{"nodeType":"YulBlock","src":"4460:481:36","statements":[{"nodeType":"YulVariableDeclaration","src":"4470:12:36","value":{"kind":"number","nodeType":"YulLiteral","src":"4480:2:36","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4474:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4491:32:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4509:9:36"},{"name":"_1","nodeType":"YulIdentifier","src":"4520:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4505:3:36"},"nodeType":"YulFunctionCall","src":"4505:18:36"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4495:6:36","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4539:9:36"},{"name":"_1","nodeType":"YulIdentifier","src":"4550:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4532:6:36"},"nodeType":"YulFunctionCall","src":"4532:21:36"},"nodeType":"YulExpressionStatement","src":"4532:21:36"},{"nodeType":"YulVariableDeclaration","src":"4562:17:36","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4573:6:36"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4566:3:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4588:27:36","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4608:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:36"},"nodeType":"YulFunctionCall","src":"4602:13:36"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4592:6:36","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4631:6:36"},{"name":"length","nodeType":"YulIdentifier","src":"4639:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4624:6:36"},"nodeType":"YulFunctionCall","src":"4624:22:36"},"nodeType":"YulExpressionStatement","src":"4624:22:36"},{"nodeType":"YulAssignment","src":"4655:25:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4666:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4677:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4662:3:36"},"nodeType":"YulFunctionCall","src":"4662:18:36"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4655:3:36"}]},{"nodeType":"YulVariableDeclaration","src":"4689:29:36","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4707:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"4715:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4703:3:36"},"nodeType":"YulFunctionCall","src":"4703:15:36"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4693:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4727:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"4736:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4731:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"4795:120:36","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4816:3:36"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4827:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4821:5:36"},"nodeType":"YulFunctionCall","src":"4821:13:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4809:6:36"},"nodeType":"YulFunctionCall","src":"4809:26:36"},"nodeType":"YulExpressionStatement","src":"4809:26:36"},{"nodeType":"YulAssignment","src":"4848:19:36","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4859:3:36"},{"name":"_1","nodeType":"YulIdentifier","src":"4864:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4855:3:36"},"nodeType":"YulFunctionCall","src":"4855:12:36"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4848:3:36"}]},{"nodeType":"YulAssignment","src":"4880:25:36","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4894:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"4902:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4890:3:36"},"nodeType":"YulFunctionCall","src":"4890:15:36"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4880:6:36"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4757:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"4760:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4754:2:36"},"nodeType":"YulFunctionCall","src":"4754:13:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4768:18:36","statements":[{"nodeType":"YulAssignment","src":"4770:14:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4779:1:36"},{"kind":"number","nodeType":"YulLiteral","src":"4782:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4775:3:36"},"nodeType":"YulFunctionCall","src":"4775:9:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4770:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"4750:3:36","statements":[]},"src":"4746:169:36"},{"nodeType":"YulAssignment","src":"4924:11:36","value":{"name":"pos","nodeType":"YulIdentifier","src":"4932:3:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4924:4:36"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4429:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4440:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4451:4:36","type":""}],"src":"4309:632:36"},{"body":{"nodeType":"YulBlock","src":"5120:175:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:36"},"nodeType":"YulFunctionCall","src":"5130:21:36"},"nodeType":"YulExpressionStatement","src":"5130:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:36"},"nodeType":"YulFunctionCall","src":"5167:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:36","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:36"},"nodeType":"YulFunctionCall","src":"5160:30:36"},"nodeType":"YulExpressionStatement","src":"5160:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:36"},"nodeType":"YulFunctionCall","src":"5206:18:36"},{"hexValue":"546f6b656e5265616465723a205a45524f5f41444452455353","kind":"string","nodeType":"YulLiteral","src":"5226:27:36","type":"","value":"TokenReader: ZERO_ADDRESS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:36"},"nodeType":"YulFunctionCall","src":"5199:55:36"},"nodeType":"YulExpressionStatement","src":"5199:55:36"},{"nodeType":"YulAssignment","src":"5263:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5275:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5286:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5271:3:36"},"nodeType":"YulFunctionCall","src":"5271:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5263:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:36","type":""}],"src":"4946:349:36"},{"body":{"nodeType":"YulBlock","src":"5347:185:36","statements":[{"body":{"nodeType":"YulBlock","src":"5386:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5407:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5414:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5419:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5410:3:36"},"nodeType":"YulFunctionCall","src":"5410:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5400:6:36"},"nodeType":"YulFunctionCall","src":"5400:31:36"},"nodeType":"YulExpressionStatement","src":"5400:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5451:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5454:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5444:6:36"},"nodeType":"YulFunctionCall","src":"5444:15:36"},"nodeType":"YulExpressionStatement","src":"5444:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5479:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5482:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5472:6:36"},"nodeType":"YulFunctionCall","src":"5472:15:36"},"nodeType":"YulExpressionStatement","src":"5472:15:36"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5363:5:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5374:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5370:3:36"},"nodeType":"YulFunctionCall","src":"5370:6:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5360:2:36"},"nodeType":"YulFunctionCall","src":"5360:17:36"},"nodeType":"YulIf","src":"5357:140:36"},{"nodeType":"YulAssignment","src":"5506:20:36","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5517:5:36"},{"kind":"number","nodeType":"YulLiteral","src":"5524:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5513:3:36"},"nodeType":"YulFunctionCall","src":"5513:13:36"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5506:3:36"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5329:5:36","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5339:3:36","type":""}],"src":"5300:232:36"},{"body":{"nodeType":"YulBlock","src":"5569:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5586:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5593:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5598:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5589:3:36"},"nodeType":"YulFunctionCall","src":"5589:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5579:6:36"},"nodeType":"YulFunctionCall","src":"5579:31:36"},"nodeType":"YulExpressionStatement","src":"5579:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5626:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5629:4:36","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5619:6:36"},"nodeType":"YulFunctionCall","src":"5619:15:36"},"nodeType":"YulExpressionStatement","src":"5619:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5650:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5653:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5643:6:36"},"nodeType":"YulFunctionCall","src":"5643:15:36"},"nodeType":"YulExpressionStatement","src":"5643:15:36"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5537:127:36"},{"body":{"nodeType":"YulBlock","src":"5701:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5718:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5725:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5730:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5721:3:36"},"nodeType":"YulFunctionCall","src":"5721:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5711:6:36"},"nodeType":"YulFunctionCall","src":"5711:31:36"},"nodeType":"YulExpressionStatement","src":"5711:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5758:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5761:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5751:6:36"},"nodeType":"YulFunctionCall","src":"5751:15:36"},"nodeType":"YulExpressionStatement","src":"5751:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5782:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5785:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5775:6:36"},"nodeType":"YulFunctionCall","src":"5775:15:36"},"nodeType":"YulExpressionStatement","src":"5775:15:36"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5669:127:36"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _4), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_c96393f0ca69bc0e710fc39f618fb92b6133c16e158597990634a9ab9b9f5e13__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"TokenReader: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c80631e6a15971461006757806337860a08146100905780634e11048f146100a357806363f35cdd146100b6578063706e2f9b146100c9578063c3fae362146100dc575b600080fd5b61007a610075366004610abe565b6100ef565b6040516100879190610be1565b60405180910390f35b61007a61009e366004610a12565b61025c565b61007a6100b1366004610a60565b6103ce565b61007a6100c4366004610b49565b610549565b61007a6100d7366004610abe565b6106a0565b61007a6100ea366004610afb565b6107ff565b805160609060008167ffffffffffffffff81111561010f5761010f610c9b565b604051908082528060200260200182016040528015610138578160200160208202803683370190505b50905060005b828110156102545760006001600160a01b031685828151811061016357610163610c85565b60200260200101516001600160a01b0316141561019b5760405162461bcd60e51b815260040161019290610c25565b60405180910390fd5b8481815181106101ad576101ad610c85565b60200260200101516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ed57600080fd5b505afa158015610201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102259190610b9e565b82828151811061023757610237610c85565b60209081029190910101528061024c81610c5c565b91505061013e565b509392505050565b805160609060008167ffffffffffffffff81111561027c5761027c610c9b565b6040519080825280602002602001820160405280156102a5578160200160208202803683370190505b50905060005b828110156103c55760006001600160a01b03168582815181106102d0576102d0610c85565b60200260200101516001600160a01b031614156102ff5760405162461bcd60e51b815260040161019290610c25565b84818151811061031157610311610c85565b60209081029190910101516040516370a0823160e01b81526001600160a01b038881166004830152909116906370a082319060240160206040518083038186803b15801561035e57600080fd5b505afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190610b9e565b8282815181106103a8576103a8610c85565b6020908102919091010152806103bd81610c5c565b9150506102ab565b50949350505050565b815160609060008167ffffffffffffffff8111156103ee576103ee610c9b565b604051908082528060200260200182016040528015610417578160200160208202803683370190505b50905060005b8281101561053f5760006001600160a01b031686828151811061044257610442610c85565b60200260200101516001600160a01b031614156104715760405162461bcd60e51b815260040161019290610c25565b85818151811061048357610483610c85565b6020908102919091010151604051636eb1769f60e11b81526001600160a01b03898116600483015287811660248301529091169063dd62ed3e9060440160206040518083038186803b1580156104d857600080fd5b505afa1580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105109190610b9e565b82828151811061052257610522610c85565b60209081029190910101528061053781610c5c565b91505061041d565b5095945050505050565b60606001600160a01b0383166105715760405162461bcd60e51b815260040161019290610c25565b835160008167ffffffffffffffff81111561058e5761058e610c9b565b6040519080825280602002602001820160405280156105b7578160200160208202803683370190505b50905060005b8281101561053f57856001600160a01b031663dd62ed3e8883815181106105e6576105e6610c85565b6020026020010151876040518363ffffffff1660e01b81526004016106219291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b15801561063957600080fd5b505afa15801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190610b9e565b82828151811061068357610683610c85565b60209081029190910101528061069881610c5c565b9150506105bd565b805160609060008167ffffffffffffffff8111156106c0576106c0610c9b565b6040519080825280602002602001820160405280156106e9578160200160208202803683370190505b50905060005b828110156102545760006001600160a01b031685828151811061071457610714610c85565b60200260200101516001600160a01b031614156107435760405162461bcd60e51b815260040161019290610c25565b84818151811061075557610755610c85565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561079557600080fd5b505afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd9190610bb7565b60ff168282815181106107e2576107e2610c85565b6020908102919091010152806107f781610c5c565b9150506106ef565b60606001600160a01b0382166108275760405162461bcd60e51b815260040161019290610c25565b825160008167ffffffffffffffff81111561084457610844610c9b565b60405190808252806020026020018201604052801561086d578160200160208202803683370190505b50905060005b828110156103c557846001600160a01b03166370a0823187838151811061089c5761089c610c85565b60200260200101516040518263ffffffff1660e01b81526004016108cf91906001600160a01b0391909116815260200190565b60206040518083038186803b1580156108e757600080fd5b505afa1580156108fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091f9190610b9e565b82828151811061093157610931610c85565b60209081029190910101528061094681610c5c565b915050610873565b80356001600160a01b038116811461096557600080fd5b919050565b600082601f83011261097b57600080fd5b8135602067ffffffffffffffff8083111561099857610998610c9b565b8260051b604051601f19603f830116810181811084821117156109bd576109bd610c9b565b604052848152838101925086840182880185018910156109dc57600080fd5b600092505b85831015610a06576109f28161094e565b8452928401926001929092019184016109e1565b50979650505050505050565b60008060408385031215610a2557600080fd5b610a2e8361094e565b9150602083013567ffffffffffffffff811115610a4a57600080fd5b610a568582860161096a565b9150509250929050565b600080600060608486031215610a7557600080fd5b610a7e8461094e565b9250602084013567ffffffffffffffff811115610a9a57600080fd5b610aa68682870161096a565b925050610ab56040850161094e565b90509250925092565b600060208284031215610ad057600080fd5b813567ffffffffffffffff811115610ae757600080fd5b610af38482850161096a565b949350505050565b60008060408385031215610b0e57600080fd5b823567ffffffffffffffff811115610b2557600080fd5b610b318582860161096a565b925050610b406020840161094e565b90509250929050565b600080600060608486031215610b5e57600080fd5b833567ffffffffffffffff811115610b7557600080fd5b610b818682870161096a565b935050610b906020850161094e565b9150610ab56040850161094e565b600060208284031215610bb057600080fd5b5051919050565b600060208284031215610bc957600080fd5b815160ff81168114610bda57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610c1957835183529284019291840191600101610bfd565b50909695505050505050565b60208082526019908201527f546f6b656e5265616465723a205a45524f5f4144445245535300000000000000604082015260600190565b6000600019821415610c7e57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212207f2aea6145d564df6b43267b961a83953e298216b1d82f3f26b204e430ae4a7964736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E6A1597 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x37860A08 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x4E11048F EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x63F35CDD EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x706E2F9B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xC3FAE362 EQ PUSH2 0xDC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0xABE JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0x9E CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH2 0x7A PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x7A PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0xABE JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10F JUMPI PUSH2 0x10F PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x138 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x163 JUMPI PUSH2 0x163 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1AD JUMPI PUSH2 0x1AD PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x201 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x237 JUMPI PUSH2 0x237 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x24C DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27C PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D0 JUMPI PUSH2 0x2D0 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x311 JUMPI PUSH2 0x311 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A8 JUMPI PUSH2 0x3A8 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x3BD DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AB JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3EE PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x417 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x442 JUMPI PUSH2 0x442 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH2 0x483 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x522 JUMPI PUSH2 0x522 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x537 DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x41D JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58E JUMPI PUSH2 0x58E PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5B7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x53F JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD62ED3E DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5E6 JUMPI PUSH2 0x5E6 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x621 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x671 SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x683 JUMPI PUSH2 0x683 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x698 DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5BD JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C0 JUMPI PUSH2 0x6C0 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x714 JUMPI PUSH2 0x714 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x755 JUMPI PUSH2 0x755 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0xFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7E2 JUMPI PUSH2 0x7E2 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x7F7 DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0xC25 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x844 JUMPI PUSH2 0x844 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x86D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C5 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x89C JUMPI PUSH2 0x89C PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CF SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91F SWAP2 SWAP1 PUSH2 0xB9E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x946 DUP2 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x873 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x998 JUMPI PUSH2 0x998 PUSH2 0xC9B JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BD PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0xA06 JUMPI PUSH2 0x9F2 DUP2 PUSH2 0x94E JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0x9E1 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA2E DUP4 PUSH2 0x94E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA56 DUP6 DUP3 DUP7 ADD PUSH2 0x96A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7E DUP5 PUSH2 0x94E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA6 DUP7 DUP3 DUP8 ADD PUSH2 0x96A JUMP JUMPDEST SWAP3 POP POP PUSH2 0xAB5 PUSH1 0x40 DUP6 ADD PUSH2 0x94E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAF3 DUP5 DUP3 DUP6 ADD PUSH2 0x96A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB31 DUP6 DUP3 DUP7 ADD PUSH2 0x96A JUMP JUMPDEST SWAP3 POP POP PUSH2 0xB40 PUSH1 0x20 DUP5 ADD PUSH2 0x94E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB81 DUP7 DUP3 DUP8 ADD PUSH2 0x96A JUMP JUMPDEST SWAP4 POP POP PUSH2 0xB90 PUSH1 0x20 DUP6 ADD PUSH2 0x94E JUMP JUMPDEST SWAP2 POP PUSH2 0xAB5 PUSH1 0x40 DUP6 ADD PUSH2 0x94E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xBDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC19 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xBFD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E5265616465723A205A45524F5F4144445245535300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xC7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x2AEA6145D564DF6B43267B961A83953E298216B1D82F3F26B204E430AE4A7964 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"126:2822:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:432;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1026:458;;;;;;:::i;:::-;;:::i;1945:502::-;;;;;;:::i;:::-;;:::i;2453:493::-;;;;;;:::i;:::-;;:::i;591:429::-;;;;;;:::i;:::-;;:::i;1490:449::-;;;;;;:::i;:::-;;:::i;153:432::-;287:14;;242:16;;270:14;287;339:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;339:21:17;;311:49;;375:9;370:184;394:6;390:1;:10;370:184;;;451:1;-1:-1:-1;;;;;429:24:17;:7;437:1;429:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;429:24:17;;;421:62;;;;-1:-1:-1;;;421:62:17;;;;;;;:::i;:::-;;;;;;;;;518:7;526:1;518:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;511:30:17;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;497:8;506:1;497:11;;;;;;;;:::i;:::-;;;;;;;;;;:46;402:3;;;;:::i;:::-;;;;370:184;;;-1:-1:-1;570:8:17;153:432;-1:-1:-1;;;153:432:17:o;1026:458::-;1183:14;;1138:16;;1166:14;1183;1235:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1235:21:17;;1207:49;;1271:9;1266:187;1290:6;1286:1;:10;1266:187;;;1347:1;-1:-1:-1;;;;;1325:24:17;:7;1333:1;1325:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1325:24:17;;;1317:62;;;;-1:-1:-1;;;1317:62:17;;;;;;;:::i;:::-;1414:7;1422:1;1414:10;;;;;;;;:::i;:::-;;;;;;;;;;;1407:35;;-1:-1:-1;;;1407:35:17;;-1:-1:-1;;;;;3956:32:36;;;1407:35:17;;;3938:51:36;1407:28:17;;;;;;3911:18:36;;1407:35:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1393:8;1402:1;1393:11;;;;;;;;:::i;:::-;;;;;;;;;;:49;1298:3;;;;:::i;:::-;;;;1266:187;;;-1:-1:-1;1469:8:17;1026:458;-1:-1:-1;;;;1026:458:17:o;1945:502::-;2130:14;;2085:16;;2113:14;2130;2184:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2184:21:17;;2154:51;;2220:9;2215:199;2239:6;2235:1;:10;2215:199;;;2296:1;-1:-1:-1;;;;;2274:24:17;:7;2282:1;2274:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2274:24:17;;;2266:62;;;;-1:-1:-1;;;2266:62:17;;;;;;;:::i;:::-;2365:7;2373:1;2365:10;;;;;;;;:::i;:::-;;;;;;;;;;;2358:45;;-1:-1:-1;;;2358:45:17;;-1:-1:-1;;;;;4230:15:36;;;2358:45:17;;;4212:34:36;4282:15;;;4262:18;;;4255:43;2358:28:17;;;;;;4147:18:36;;2358:45:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2342:10;2353:1;2342:13;;;;;;;;:::i;:::-;;;;;;;;;;:61;2247:3;;;;:::i;:::-;;;;2215:199;;;-1:-1:-1;2430:10:17;1945:502;-1:-1:-1;;;;;1945:502:17:o;2453:493::-;2593:16;-1:-1:-1;;;;;2629:20:17;;2621:58;;;;-1:-1:-1;;;2621:58:17;;;;;;;:::i;:::-;2706:13;;2689:14;2706:13;2759:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2759:21:17;;2729:51;;2795:9;2790:123;2814:6;2810:1;:10;2790:123;;;2864:6;-1:-1:-1;;;;;2857:24:17;;2882:6;2889:1;2882:9;;;;;;;;:::i;:::-;;;;;;;2893:8;2857:45;;;;;;;;;;;;;;;-1:-1:-1;;;;;4230:15:36;;;4212:34;;4282:15;;4277:2;4262:18;;4255:43;4162:2;4147:18;;4000:304;2857:45:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2841:10;2852:1;2841:13;;;;;;;;:::i;:::-;;;;;;;;;;:61;2822:3;;;;:::i;:::-;;;;2790:123;;591:429;725:14;;680:16;;708:14;725;777:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;777:21:17;;749:49;;813:9;808:181;832:6;828:1;:10;808:181;;;889:1;-1:-1:-1;;;;;867:24:17;:7;875:1;867:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;867:24:17;;;859:62;;;;-1:-1:-1;;;859:62:17;;;;;;;:::i;:::-;956:7;964:1;956:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;949:27:17;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;935:43;;:8;944:1;935:11;;;;;;;;:::i;:::-;;;;;;;;;;:43;840:3;;;;:::i;:::-;;;;808:181;;1490:449;1602:16;-1:-1:-1;;;;;1638:20:17;;1630:58;;;;-1:-1:-1;;;1630:58:17;;;;;;;:::i;:::-;1715:13;;1698:14;1715:13;1766:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1766:21:17;;1738:49;;1802:9;1797:111;1821:6;1817:1;:10;1797:111;;;1869:6;-1:-1:-1;;;;;1862:24:17;;1887:6;1894:1;1887:9;;;;;;;;:::i;:::-;;;;;;;1862:35;;;;;;;;;;;;;;-1:-1:-1;;;;;3956:32:36;;;;3938:51;;3926:2;3911:18;;3792:203;1862:35:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1848:8;1857:1;1848:11;;;;;;;;:::i;:::-;;;;;;;;;;:49;1829:3;;;;:::i;:::-;;;;1797:111;;14:173:36;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:919::-;246:5;299:3;292:4;284:6;280:17;276:27;266:55;;317:1;314;307:12;266:55;353:6;340:20;379:4;402:18;439:2;435;432:10;429:36;;;445:18;;:::i;:::-;491:2;488:1;484:10;523:2;517:9;586:2;582:7;577:2;573;569:11;565:25;557:6;553:38;641:6;629:10;626:22;621:2;609:10;606:18;603:46;600:72;;;652:18;;:::i;:::-;688:2;681:22;738:18;;;772:15;;;;-1:-1:-1;807:15:36;;;841;;;837:24;;834:33;-1:-1:-1;831:53:36;;;880:1;877;870:12;831:53;902:1;893:10;;912:169;926:2;923:1;920:9;912:169;;;983:23;1002:3;983:23;:::i;:::-;971:36;;1027:12;;;;944:1;937:9;;;;;1059:12;;912:169;;;-1:-1:-1;1099:6:36;192:919;-1:-1:-1;;;;;;;192:919:36:o;1116:422::-;1209:6;1217;1270:2;1258:9;1249:7;1245:23;1241:32;1238:52;;;1286:1;1283;1276:12;1238:52;1309:29;1328:9;1309:29;:::i;:::-;1299:39;;1389:2;1378:9;1374:18;1361:32;1416:18;1408:6;1405:30;1402:50;;;1448:1;1445;1438:12;1402:50;1471:61;1524:7;1515:6;1504:9;1500:22;1471:61;:::i;:::-;1461:71;;;1116:422;;;;;:::o;1543:496::-;1645:6;1653;1661;1714:2;1702:9;1693:7;1689:23;1685:32;1682:52;;;1730:1;1727;1720:12;1682:52;1753:29;1772:9;1753:29;:::i;:::-;1743:39;;1833:2;1822:9;1818:18;1805:32;1860:18;1852:6;1849:30;1846:50;;;1892:1;1889;1882:12;1846:50;1915:61;1968:7;1959:6;1948:9;1944:22;1915:61;:::i;:::-;1905:71;;;1995:38;2029:2;2018:9;2014:18;1995:38;:::i;:::-;1985:48;;1543:496;;;;;:::o;2044:348::-;2128:6;2181:2;2169:9;2160:7;2156:23;2152:32;2149:52;;;2197:1;2194;2187:12;2149:52;2237:9;2224:23;2270:18;2262:6;2259:30;2256:50;;;2302:1;2299;2292:12;2256:50;2325:61;2378:7;2369:6;2358:9;2354:22;2325:61;:::i;:::-;2315:71;2044:348;-1:-1:-1;;;;2044:348:36:o;2397:422::-;2490:6;2498;2551:2;2539:9;2530:7;2526:23;2522:32;2519:52;;;2567:1;2564;2557:12;2519:52;2607:9;2594:23;2640:18;2632:6;2629:30;2626:50;;;2672:1;2669;2662:12;2626:50;2695:61;2748:7;2739:6;2728:9;2724:22;2695:61;:::i;:::-;2685:71;;;2775:38;2809:2;2798:9;2794:18;2775:38;:::i;:::-;2765:48;;2397:422;;;;;:::o;2824:496::-;2926:6;2934;2942;2995:2;2983:9;2974:7;2970:23;2966:32;2963:52;;;3011:1;3008;3001:12;2963:52;3051:9;3038:23;3084:18;3076:6;3073:30;3070:50;;;3116:1;3113;3106:12;3070:50;3139:61;3192:7;3183:6;3172:9;3168:22;3139:61;:::i;:::-;3129:71;;;3219:38;3253:2;3242:9;3238:18;3219:38;:::i;:::-;3209:48;;3276:38;3310:2;3299:9;3295:18;3276:38;:::i;3325:184::-;3395:6;3448:2;3436:9;3427:7;3423:23;3419:32;3416:52;;;3464:1;3461;3454:12;3416:52;-1:-1:-1;3487:16:36;;3325:184;-1:-1:-1;3325:184:36:o;3514:273::-;3582:6;3635:2;3623:9;3614:7;3610:23;3606:32;3603:52;;;3651:1;3648;3641:12;3603:52;3683:9;3677:16;3733:4;3726:5;3722:16;3715:5;3712:27;3702:55;;3753:1;3750;3743:12;3702:55;3776:5;3514:273;-1:-1:-1;;;3514:273:36:o;4309:632::-;4480:2;4532:21;;;4602:13;;4505:18;;;4624:22;;;4451:4;;4480:2;4703:15;;;;4677:2;4662:18;;;4451:4;4746:169;4760:6;4757:1;4754:13;4746:169;;;4821:13;;4809:26;;4890:15;;;;4855:12;;;;4782:1;4775:9;4746:169;;;-1:-1:-1;4932:3:36;;4309:632;-1:-1:-1;;;;;;4309:632:36:o;4946:349::-;5148:2;5130:21;;;5187:2;5167:18;;;5160:30;5226:27;5221:2;5206:18;;5199:55;5286:2;5271:18;;4946:349::o;5300:232::-;5339:3;-1:-1:-1;;5360:17:36;;5357:140;;;5419:10;5414:3;5410:20;5407:1;5400:31;5454:4;5451:1;5444:15;5482:4;5479:1;5472:15;5357:140;-1:-1:-1;5524:1:36;5513:13;;5300:232::o;5537:127::-;5598:10;5593:3;5589:20;5586:1;5579:31;5629:4;5626:1;5619:15;5653:4;5650:1;5643:15;5669:127;5730:10;5725:3;5721:20;5718:1;5711:31;5761:4;5758:1;5751:15;5785:4;5782:1;5775:15"},"gasEstimates":{"creation":{"codeDepositCost":"660600","executionCost":"696","totalCost":"661296"},"external":{"getTokenAllowances(address[],address,address)":"infinite","getTokenBalances(address[],address)":"infinite","getTokenDecimals(address[])":"infinite","getTokenSupplies(address[])":"infinite","getTokensAllowance(address,address[],address)":"infinite","getTokensBalance(address,address[])":"infinite"}},"methodIdentifiers":{"getTokenAllowances(address[],address,address)":"63f35cdd","getTokenBalances(address[],address)":"c3fae362","getTokenDecimals(address[])":"706e2f9b","getTokenSupplies(address[])":"1e6a1597","getTokensAllowance(address,address[],address)":"4e11048f","getTokensBalance(address,address[])":"37860a08"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"getTokenAllowances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getTokenDecimals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getTokenSupplies\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"getTokensAllowance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getTokensBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenReader.sol\":\"TokenReader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenReader.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\npragma abicoder v2;\\n\\nimport \\\"./interfaces/IERC20.sol\\\";\\n\\ncontract TokenReader {\\n    function getTokenSupplies(\\n        address[] memory _tokens\\n    ) external view returns (uint256[] memory) {\\n        uint256 length = _tokens.length;\\n        uint256[] memory supplies = new uint256[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            require(_tokens[i] != address(0), \\\"TokenReader: ZERO_ADDRESS\\\");\\n            supplies[i] = IERC20(_tokens[i]).totalSupply();\\n        }\\n        return supplies;\\n    }\\n\\n    function getTokenDecimals(\\n        address[] memory _tokens\\n    ) external view returns (uint256[] memory) {\\n        uint256 length = _tokens.length;\\n        uint256[] memory decimals = new uint256[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            require(_tokens[i] != address(0), \\\"TokenReader: ZERO_ADDRESS\\\");\\n            decimals[i] = IERC20(_tokens[i]).decimals();\\n        }\\n        return decimals;\\n    }\\n\\n    function getTokensBalance(\\n        address _user,\\n        address[] memory _tokens\\n    ) external view returns (uint256[] memory) {\\n        uint256 length = _tokens.length;\\n        uint256[] memory balances = new uint256[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            require(_tokens[i] != address(0), \\\"TokenReader: ZERO_ADDRESS\\\");\\n            balances[i] = IERC20(_tokens[i]).balanceOf(_user);\\n        }\\n        return balances;\\n    }\\n\\n    function getTokenBalances(\\n        address[] memory _users,\\n        address _token\\n    ) external view returns (uint256[] memory) {\\n        require(_token != address(0), \\\"TokenReader: ZERO_ADDRESS\\\");\\n        uint256 length = _users.length;\\n        uint256[] memory balances = new uint256[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            balances[i] = IERC20(_token).balanceOf(_users[i]);\\n        }\\n        return balances;\\n    }\\n\\n    function getTokensAllowance(\\n        address _user,\\n        address[] memory _tokens,\\n        address _spender\\n    ) external view returns (uint256[] memory) {\\n        uint256 length = _tokens.length;\\n        uint256[] memory allowances = new uint256[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            require(_tokens[i] != address(0), \\\"TokenReader: ZERO_ADDRESS\\\");\\n            allowances[i] = IERC20(_tokens[i]).allowance(_user, _spender);\\n        }\\n        return allowances;\\n    }\\n\\n    function getTokenAllowances(\\n        address[] memory _users,\\n        address _token,\\n        address _spender\\n    ) external view returns (uint256[] memory) {\\n        require(_token != address(0), \\\"TokenReader: ZERO_ADDRESS\\\");\\n        uint256 length = _users.length;\\n        uint256[] memory allowances = new uint256[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            allowances[i] = IERC20(_token).allowance(_users[i], _spender);\\n        }\\n        return allowances;\\n    }\\n}\\n\",\"keccak256\":\"0x28ca93693a38026e4bffa749001d241b8bced27f72bf87bb732e1f41926069b1\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/UniswapV3PriceFeedIntegration.sol":{"UniswapV3PriceFeedIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"feeTiers","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2264":{"entryPoint":null,"id":2264,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":302,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:36","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:36"},"nodeType":"YulFunctionCall","src":"143:12:36"},"nodeType":"YulExpressionStatement","src":"143:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:36"},"nodeType":"YulFunctionCall","src":"112:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:36"},"nodeType":"YulFunctionCall","src":"108:32:36"},"nodeType":"YulIf","src":"105:52:36"},{"nodeType":"YulVariableDeclaration","src":"166:29:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:36"},"nodeType":"YulFunctionCall","src":"179:16:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:36"},"nodeType":"YulFunctionCall","src":"260:12:36"},"nodeType":"YulExpressionStatement","src":"260:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:36"},"nodeType":"YulFunctionCall","src":"239:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:36"},"nodeType":"YulFunctionCall","src":"235:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:36"},"nodeType":"YulFunctionCall","src":"224:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:36"},"nodeType":"YulFunctionCall","src":"214:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:36"},"nodeType":"YulFunctionCall","src":"207:50:36"},"nodeType":"YulIf","src":"204:70:36"},{"nodeType":"YulAssignment","src":"283:15:36","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:36"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:36","type":""}],"src":"14:290:36"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"610120604052606460a09081526101f460c052610bb860e0526127106101005261002d90600090600461006e565b5034801561003a57600080fd5b50604051610b36380380610b368339810160408190526100599161012e565b60601b6001600160601b03191660805261015e565b82805482825590600052602060002090600901600a900481019282156101095791602002820160005b838211156100d857835183826101000a81548162ffffff021916908361ffff1602179055509260200192600301602081600201049283019260010302610097565b80156101075782816101000a81549062ffffff02191690556003016020816002010492830192600103026100d8565b505b50610115929150610119565b5090565b5b80821115610115576000815560010161011a565b60006020828403121561014057600080fd5b81516001600160a01b038116811461015757600080fd5b9392505050565b60805160601c6109b46101826000396000818160b7015261013001526109b46000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063230ed44a14610051578063aaf5eb681461007d578063ac41865a1461009f578063c45a0155146100b2575b600080fd5b61006461005f366004610789565b6100f1565b60405162ffffff90911681526020015b60405180910390f35b6100916c0c9f2c9cd04674edea4000000081565b604051908152602001610074565b6100916100ad3660046106b5565b61012a565b6100d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610074565b6000818154811061010157600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b600080547f000000000000000000000000000000000000000000000000000000000000000082805b8381101561065f576000836001600160a01b0316631698ee8289896000868154811061018057610180610950565b60009182526020909120600a8083049091015460405160e087901b6001600160e01b03191681526001600160a01b03958616600482015293909416602484015290066003026101000a90910462ffffff16604482015260640160206040518083038186803b1580156101f157600080fd5b505afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102299190610691565b90506001600160a01b0381161561064c5760008190506000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561027a57600080fd5b505afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b29190610691565b6040516370a0823160e01b81526001600160a01b0385811660048301529192506000918316906370a082319060240160206040518083038186803b1580156102f957600080fd5b505afa15801561030d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033191906107a2565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561036e57600080fd5b505afa158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190610691565b6040516370a0823160e01b81526001600160a01b0387811660048301529192506000918316906370a082319060240160206040518083038186803b1580156103ed57600080fd5b505afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042591906107a2565b90506000856001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561046257600080fd5b505afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906106ee565b505050505050905060006002600160601b6104b59190610853565b6c0c9f2c9cd04674edea400000006104d760026001600160a01b038616610853565b6104e19190610900565b6104eb91906107ee565b90506000836c0c9f2c9cd04674edea400000006105088489610900565b61051291906107ee565b61051c91906107d6565b90508a81111561064357809a506000876001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561056457600080fd5b505afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c91906107bb565b6105a790600a610853565b90506000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e457600080fd5b505afa1580156105f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061c91906107bb565b61062790600a610853565b9050806106348386610900565b61063e91906107ee565b9f5050505b50505050505050505b50806106578161091f565b915050610152565b5050505092915050565b805161ffff8116811461067b57600080fd5b919050565b805160ff8116811461067b57600080fd5b6000602082840312156106a357600080fd5b81516106ae81610966565b9392505050565b600080604083850312156106c857600080fd5b82356106d381610966565b915060208301356106e381610966565b809150509250929050565b600080600080600080600060e0888a03121561070957600080fd5b875161071481610966565b8097505060208801518060020b811461072c57600080fd5b955061073a60408901610669565b945061074860608901610669565b935061075660808901610669565b925061076460a08901610680565b915060c0880151801515811461077957600080fd5b8091505092959891949750929550565b60006020828403121561079b57600080fd5b5035919050565b6000602082840312156107b457600080fd5b5051919050565b6000602082840312156107cd57600080fd5b6106ae82610680565b600082198211156107e9576107e961093a565b500190565b60008261080b57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111561084b5781600019048211156108315761083161093a565b8085161561083e57918102915b93841c9390800290610815565b509250929050565b60006106ae60ff84168360008261086c575060016108fa565b81610879575060006108fa565b816001811461088f5760028114610899576108b5565b60019150506108fa565b60ff8411156108aa576108aa61093a565b50506001821b6108fa565b5060208310610133831016604e8410600b84101617156108d8575081810a6108fa565b6108e28383610810565b80600019048211156108f6576108f661093a565b0290505b92915050565b600081600019048311821515161561091a5761091a61093a565b500290565b60006000198214156109335761093361093a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461097b57600080fd5b5056fea26469706673582212200e298870688378745ffc33d0460e375e918871d2c7a344679d0688a998d06af064736f6c63430008070033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH2 0x1F4 PUSH1 0xC0 MSTORE PUSH2 0xBB8 PUSH1 0xE0 MSTORE PUSH2 0x2710 PUSH2 0x100 MSTORE PUSH2 0x2D SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 PUSH2 0x6E JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB36 CODESIZE SUB DUP1 PUSH2 0xB36 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x59 SWAP2 PUSH2 0x12E JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH2 0x15E JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 ADD PUSH1 0xA SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x109 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0xD8 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x3 ADD PUSH1 0x20 DUP2 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x97 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x107 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 ADD PUSH1 0x20 DUP2 PUSH1 0x2 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xD8 JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x115 SWAP3 SWAP2 POP PUSH2 0x119 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x9B4 PUSH2 0x182 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xB7 ADD MSTORE PUSH2 0x130 ADD MSTORE PUSH2 0x9B4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x230ED44A EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x789 JUMP JUMPDEST PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x74 JUMP JUMPDEST PUSH2 0x91 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x12A JUMP JUMPDEST PUSH2 0xD9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x74 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x3 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0x0 DUP3 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1698EE82 DUP10 DUP10 PUSH1 0x0 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x180 JUMPI PUSH2 0x180 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0xA DUP1 DUP4 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP8 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP1 MOD PUSH1 0x3 MUL PUSH2 0x100 EXP SWAP1 SWAP2 DIV PUSH3 0xFFFFFF AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x382 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x401 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x476 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x6EE JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x853 JUMP JUMPDEST PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x4D7 PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x853 JUMP JUMPDEST PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x508 DUP5 DUP10 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 POP DUP11 DUP2 GT ISZERO PUSH2 0x643 JUMPI DUP1 SWAP11 POP PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x5A7 SWAP1 PUSH1 0xA PUSH2 0x853 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x627 SWAP1 PUSH1 0xA PUSH2 0x853 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x634 DUP4 DUP7 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x63E SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST SWAP16 POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST POP DUP1 PUSH2 0x657 DUP2 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x152 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6AE DUP2 PUSH2 0x966 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x6D3 DUP2 PUSH2 0x966 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x6E3 DUP2 PUSH2 0x966 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x714 DUP2 PUSH2 0x966 JUMP JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH2 0x73A PUSH1 0x40 DUP10 ADD PUSH2 0x669 JUMP JUMPDEST SWAP5 POP PUSH2 0x748 PUSH1 0x60 DUP10 ADD PUSH2 0x669 JUMP JUMPDEST SWAP4 POP PUSH2 0x756 PUSH1 0x80 DUP10 ADD PUSH2 0x669 JUMP JUMPDEST SWAP3 POP PUSH2 0x764 PUSH1 0xA0 DUP10 ADD PUSH2 0x680 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6AE DUP3 PUSH2 0x680 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E9 PUSH2 0x93A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x80B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x84B JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x831 JUMPI PUSH2 0x831 PUSH2 0x93A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x83E JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x815 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE PUSH1 0xFF DUP5 AND DUP4 PUSH1 0x0 DUP3 PUSH2 0x86C JUMPI POP PUSH1 0x1 PUSH2 0x8FA JUMP JUMPDEST DUP2 PUSH2 0x879 JUMPI POP PUSH1 0x0 PUSH2 0x8FA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x88F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x899 JUMPI PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8FA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x8AA JUMPI PUSH2 0x8AA PUSH2 0x93A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8FA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x8D8 JUMPI POP DUP2 DUP2 EXP PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x8E2 DUP4 DUP4 PUSH2 0x810 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x8F6 JUMPI PUSH2 0x8F6 PUSH2 0x93A JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x91A JUMPI PUSH2 0x91A PUSH2 0x93A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x933 JUMPI PUSH2 0x933 PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x29 DUP9 PUSH17 0x688378745FFC33D0460E375E918871D2C7 LOG3 DIFFICULTY PUSH8 0x9D0688A998D06AF0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"519:50:18:-:0;356:1719;519:50;547:3;356:1719;519:50;;;552:3;519:50;;557:4;519:50;;563:5;519:50;;;;-1:-1:-1;;519:50:18;;:::i;:::-;;576:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;616:18;;-1:-1:-1;;;;;;616:18:18;;;356:1719;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;356:1719:18;;;-1:-1:-1;356:1719:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:36;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:36;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:36:o;:::-;356:1719:18;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PRECISION_2244":{"entryPoint":null,"id":2244,"parameterSlots":0,"returnSlots":0},"@factory_2246":{"entryPoint":null,"id":2246,"parameterSlots":0,"returnSlots":0},"@feeTiers_2254":{"entryPoint":241,"id":2254,"parameterSlots":0,"returnSlots":0},"@getPrice_2431":{"entryPoint":298,"id":2431,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1717,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory":{"entryPoint":1774,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_uint256":{"entryPoint":1929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":1979,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint16_fromMemory":{"entryPoint":1641,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint8_fromMemory":{"entryPoint":1664,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2006,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2030,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2064,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":2131,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2304,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":2335,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2362,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2384,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":2406,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5919:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"73:104:36","statements":[{"nodeType":"YulAssignment","src":"83:22:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"98:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"92:5:36"},"nodeType":"YulFunctionCall","src":"92:13:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"83:5:36"}]},{"body":{"nodeType":"YulBlock","src":"155:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"164:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"167:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"157:6:36"},"nodeType":"YulFunctionCall","src":"157:12:36"},"nodeType":"YulExpressionStatement","src":"157:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"127:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:36"},{"kind":"number","nodeType":"YulLiteral","src":"145:6:36","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"134:3:36"},"nodeType":"YulFunctionCall","src":"134:18:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"124:2:36"},"nodeType":"YulFunctionCall","src":"124:29:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"117:6:36"},"nodeType":"YulFunctionCall","src":"117:37:36"},"nodeType":"YulIf","src":"114:57:36"}]},"name":"abi_decode_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"63:5:36","type":""}],"src":"14:163:36"},{"body":{"nodeType":"YulBlock","src":"240:102:36","statements":[{"nodeType":"YulAssignment","src":"250:22:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"265:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"259:5:36"},"nodeType":"YulFunctionCall","src":"259:13:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"250:5:36"}]},{"body":{"nodeType":"YulBlock","src":"320:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"329:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"332:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"322:6:36"},"nodeType":"YulFunctionCall","src":"322:12:36"},"nodeType":"YulExpressionStatement","src":"322:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"294:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"305:5:36"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:36","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"301:3:36"},"nodeType":"YulFunctionCall","src":"301:16:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"291:2:36"},"nodeType":"YulFunctionCall","src":"291:27:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"284:6:36"},"nodeType":"YulFunctionCall","src":"284:35:36"},"nodeType":"YulIf","src":"281:55:36"}]},"name":"abi_decode_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"219:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"230:5:36","type":""}],"src":"182:160:36"},{"body":{"nodeType":"YulBlock","src":"428:170:36","statements":[{"body":{"nodeType":"YulBlock","src":"474:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"483:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"486:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"476:6:36"},"nodeType":"YulFunctionCall","src":"476:12:36"},"nodeType":"YulExpressionStatement","src":"476:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"449:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"445:3:36"},"nodeType":"YulFunctionCall","src":"445:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"470:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"441:3:36"},"nodeType":"YulFunctionCall","src":"441:32:36"},"nodeType":"YulIf","src":"438:52:36"},{"nodeType":"YulVariableDeclaration","src":"499:29:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"518:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"512:5:36"},"nodeType":"YulFunctionCall","src":"512:16:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"503:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"562:5:36"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"537:24:36"},"nodeType":"YulFunctionCall","src":"537:31:36"},"nodeType":"YulExpressionStatement","src":"537:31:36"},{"nodeType":"YulAssignment","src":"577:15:36","value":{"name":"value","nodeType":"YulIdentifier","src":"587:5:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"577:6:36"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"394:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"405:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"417:6:36","type":""}],"src":"347:251:36"},{"body":{"nodeType":"YulBlock","src":"690:301:36","statements":[{"body":{"nodeType":"YulBlock","src":"736:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"745:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"748:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"738:6:36"},"nodeType":"YulFunctionCall","src":"738:12:36"},"nodeType":"YulExpressionStatement","src":"738:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"711:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"720:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"707:3:36"},"nodeType":"YulFunctionCall","src":"707:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"732:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"703:3:36"},"nodeType":"YulFunctionCall","src":"703:32:36"},"nodeType":"YulIf","src":"700:52:36"},{"nodeType":"YulVariableDeclaration","src":"761:36:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"787:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"774:12:36"},"nodeType":"YulFunctionCall","src":"774:23:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"765:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"831:5:36"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"806:24:36"},"nodeType":"YulFunctionCall","src":"806:31:36"},"nodeType":"YulExpressionStatement","src":"806:31:36"},{"nodeType":"YulAssignment","src":"846:15:36","value":{"name":"value","nodeType":"YulIdentifier","src":"856:5:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"846:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"870:47:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"902:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"913:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"898:3:36"},"nodeType":"YulFunctionCall","src":"898:18:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"885:12:36"},"nodeType":"YulFunctionCall","src":"885:32:36"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"874:7:36","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"951:7:36"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"926:24:36"},"nodeType":"YulFunctionCall","src":"926:33:36"},"nodeType":"YulExpressionStatement","src":"926:33:36"},{"nodeType":"YulAssignment","src":"968:17:36","value":{"name":"value_1","nodeType":"YulIdentifier","src":"978:7:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"968:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"648:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"659:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"671:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"679:6:36","type":""}],"src":"603:388:36"},{"body":{"nodeType":"YulBlock","src":"1169:736:36","statements":[{"body":{"nodeType":"YulBlock","src":"1216:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1225:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1228:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1218:6:36"},"nodeType":"YulFunctionCall","src":"1218:12:36"},"nodeType":"YulExpressionStatement","src":"1218:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1190:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"1199:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1186:3:36"},"nodeType":"YulFunctionCall","src":"1186:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"1211:3:36","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1182:3:36"},"nodeType":"YulFunctionCall","src":"1182:33:36"},"nodeType":"YulIf","src":"1179:53:36"},{"nodeType":"YulVariableDeclaration","src":"1241:29:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1260:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1254:5:36"},"nodeType":"YulFunctionCall","src":"1254:16:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1245:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1304:5:36"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1279:24:36"},"nodeType":"YulFunctionCall","src":"1279:31:36"},"nodeType":"YulExpressionStatement","src":"1279:31:36"},{"nodeType":"YulAssignment","src":"1319:15:36","value":{"name":"value","nodeType":"YulIdentifier","src":"1329:5:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1319:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"1343:40:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:36"},"nodeType":"YulFunctionCall","src":"1364:18:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1358:5:36"},"nodeType":"YulFunctionCall","src":"1358:25:36"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1347:7:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1439:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1448:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1451:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1441:6:36"},"nodeType":"YulFunctionCall","src":"1441:12:36"},"nodeType":"YulExpressionStatement","src":"1441:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1405:7:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1425:1:36","type":"","value":"2"},{"name":"value_1","nodeType":"YulIdentifier","src":"1428:7:36"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"1414:10:36"},"nodeType":"YulFunctionCall","src":"1414:22:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1402:2:36"},"nodeType":"YulFunctionCall","src":"1402:35:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1395:6:36"},"nodeType":"YulFunctionCall","src":"1395:43:36"},"nodeType":"YulIf","src":"1392:63:36"},{"nodeType":"YulAssignment","src":"1464:17:36","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1474:7:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1464:6:36"}]},{"nodeType":"YulAssignment","src":"1490:58:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1533:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1544:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1529:3:36"},"nodeType":"YulFunctionCall","src":"1529:18:36"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"1500:28:36"},"nodeType":"YulFunctionCall","src":"1500:48:36"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1490:6:36"}]},{"nodeType":"YulAssignment","src":"1557:58:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1600:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1611:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1596:3:36"},"nodeType":"YulFunctionCall","src":"1596:18:36"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"1567:28:36"},"nodeType":"YulFunctionCall","src":"1567:48:36"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1557:6:36"}]},{"nodeType":"YulAssignment","src":"1624:59:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1667:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1678:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1663:3:36"},"nodeType":"YulFunctionCall","src":"1663:19:36"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"1634:28:36"},"nodeType":"YulFunctionCall","src":"1634:49:36"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1624:6:36"}]},{"nodeType":"YulAssignment","src":"1692:58:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1745:3:36","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:36"},"nodeType":"YulFunctionCall","src":"1730:19:36"}],"functionName":{"name":"abi_decode_uint8_fromMemory","nodeType":"YulIdentifier","src":"1702:27:36"},"nodeType":"YulFunctionCall","src":"1702:48:36"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1692:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"1759:41:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1784:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1795:3:36","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1780:3:36"},"nodeType":"YulFunctionCall","src":"1780:19:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1774:5:36"},"nodeType":"YulFunctionCall","src":"1774:26:36"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1763:7:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1857:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1866:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1869:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1859:6:36"},"nodeType":"YulFunctionCall","src":"1859:12:36"},"nodeType":"YulExpressionStatement","src":"1859:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1822:7:36"},{"arguments":[{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1845:7:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1838:6:36"},"nodeType":"YulFunctionCall","src":"1838:15:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1831:6:36"},"nodeType":"YulFunctionCall","src":"1831:23:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1819:2:36"},"nodeType":"YulFunctionCall","src":"1819:36:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1812:6:36"},"nodeType":"YulFunctionCall","src":"1812:44:36"},"nodeType":"YulIf","src":"1809:64:36"},{"nodeType":"YulAssignment","src":"1882:17:36","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1892:7:36"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1882:6:36"}]}]},"name":"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1087:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1098:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1110:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1118:6:36","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1126:6:36","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1134:6:36","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1142:6:36","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1150:6:36","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1158:6:36","type":""}],"src":"996:909:36"},{"body":{"nodeType":"YulBlock","src":"1980:110:36","statements":[{"body":{"nodeType":"YulBlock","src":"2026:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2035:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2038:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2028:6:36"},"nodeType":"YulFunctionCall","src":"2028:12:36"},"nodeType":"YulExpressionStatement","src":"2028:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2001:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2010:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1997:3:36"},"nodeType":"YulFunctionCall","src":"1997:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2022:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1993:3:36"},"nodeType":"YulFunctionCall","src":"1993:32:36"},"nodeType":"YulIf","src":"1990:52:36"},{"nodeType":"YulAssignment","src":"2051:33:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2074:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2061:12:36"},"nodeType":"YulFunctionCall","src":"2061:23:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2051:6:36"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1946:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1957:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1969:6:36","type":""}],"src":"1910:180:36"},{"body":{"nodeType":"YulBlock","src":"2176:103:36","statements":[{"body":{"nodeType":"YulBlock","src":"2222:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2231:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2234:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2224:6:36"},"nodeType":"YulFunctionCall","src":"2224:12:36"},"nodeType":"YulExpressionStatement","src":"2224:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2197:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2206:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2193:3:36"},"nodeType":"YulFunctionCall","src":"2193:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2218:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2189:3:36"},"nodeType":"YulFunctionCall","src":"2189:32:36"},"nodeType":"YulIf","src":"2186:52:36"},{"nodeType":"YulAssignment","src":"2247:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2257:5:36"},"nodeType":"YulFunctionCall","src":"2257:16:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2247:6:36"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2142:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2153:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2165:6:36","type":""}],"src":"2095:184:36"},{"body":{"nodeType":"YulBlock","src":"2363:125:36","statements":[{"body":{"nodeType":"YulBlock","src":"2409:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2418:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2421:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2411:6:36"},"nodeType":"YulFunctionCall","src":"2411:12:36"},"nodeType":"YulExpressionStatement","src":"2411:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2384:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2393:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2380:3:36"},"nodeType":"YulFunctionCall","src":"2380:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2405:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2376:3:36"},"nodeType":"YulFunctionCall","src":"2376:32:36"},"nodeType":"YulIf","src":"2373:52:36"},{"nodeType":"YulAssignment","src":"2434:48:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2472:9:36"}],"functionName":{"name":"abi_decode_uint8_fromMemory","nodeType":"YulIdentifier","src":"2444:27:36"},"nodeType":"YulFunctionCall","src":"2444:38:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2434:6:36"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2329:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2340:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2352:6:36","type":""}],"src":"2284:204:36"},{"body":{"nodeType":"YulBlock","src":"2594:102:36","statements":[{"nodeType":"YulAssignment","src":"2604:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2616:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2627:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2612:3:36"},"nodeType":"YulFunctionCall","src":"2612:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2604:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2646:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2661:6:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2677:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2682:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2673:3:36"},"nodeType":"YulFunctionCall","src":"2673:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"2686:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2669:3:36"},"nodeType":"YulFunctionCall","src":"2669:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2657:3:36"},"nodeType":"YulFunctionCall","src":"2657:32:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2639:6:36"},"nodeType":"YulFunctionCall","src":"2639:51:36"},"nodeType":"YulExpressionStatement","src":"2639:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2563:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2574:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2585:4:36","type":""}],"src":"2493:203:36"},{"body":{"nodeType":"YulBlock","src":"2856:233:36","statements":[{"nodeType":"YulAssignment","src":"2866:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2878:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2889:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2874:3:36"},"nodeType":"YulFunctionCall","src":"2874:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2866:4:36"}]},{"nodeType":"YulVariableDeclaration","src":"2901:29:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2919:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2924:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2915:3:36"},"nodeType":"YulFunctionCall","src":"2915:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"2928:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2911:3:36"},"nodeType":"YulFunctionCall","src":"2911:19:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2905:2:36","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2946:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2961:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"2969:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2957:3:36"},"nodeType":"YulFunctionCall","src":"2957:15:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2939:6:36"},"nodeType":"YulFunctionCall","src":"2939:34:36"},"nodeType":"YulExpressionStatement","src":"2939:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2993:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3004:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2989:3:36"},"nodeType":"YulFunctionCall","src":"2989:18:36"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3013:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3021:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3009:3:36"},"nodeType":"YulFunctionCall","src":"3009:15:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2982:6:36"},"nodeType":"YulFunctionCall","src":"2982:43:36"},"nodeType":"YulExpressionStatement","src":"2982:43:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3045:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3056:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3041:3:36"},"nodeType":"YulFunctionCall","src":"3041:18:36"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3065:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"3073:8:36","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3061:3:36"},"nodeType":"YulFunctionCall","src":"3061:21:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3034:6:36"},"nodeType":"YulFunctionCall","src":"3034:49:36"},"nodeType":"YulExpressionStatement","src":"3034:49:36"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2809:9:36","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2820:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2828:6:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2836:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2847:4:36","type":""}],"src":"2701:388:36"},{"body":{"nodeType":"YulBlock","src":"3193:91:36","statements":[{"nodeType":"YulAssignment","src":"3203:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3215:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3226:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3211:3:36"},"nodeType":"YulFunctionCall","src":"3211:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3203:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3245:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3260:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"3268:8:36","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3256:3:36"},"nodeType":"YulFunctionCall","src":"3256:21:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3238:6:36"},"nodeType":"YulFunctionCall","src":"3238:40:36"},"nodeType":"YulExpressionStatement","src":"3238:40:36"}]},"name":"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3162:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3173:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3184:4:36","type":""}],"src":"3094:190:36"},{"body":{"nodeType":"YulBlock","src":"3390:76:36","statements":[{"nodeType":"YulAssignment","src":"3400:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3423:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:36"},"nodeType":"YulFunctionCall","src":"3408:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3400:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3442:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"3453:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3435:6:36"},"nodeType":"YulFunctionCall","src":"3435:25:36"},"nodeType":"YulExpressionStatement","src":"3435:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3359:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3370:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3381:4:36","type":""}],"src":"3289:177:36"},{"body":{"nodeType":"YulBlock","src":"3519:80:36","statements":[{"body":{"nodeType":"YulBlock","src":"3546:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3548:16:36"},"nodeType":"YulFunctionCall","src":"3548:18:36"},"nodeType":"YulExpressionStatement","src":"3548:18:36"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3535:1:36"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3542:1:36"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3538:3:36"},"nodeType":"YulFunctionCall","src":"3538:6:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3532:2:36"},"nodeType":"YulFunctionCall","src":"3532:13:36"},"nodeType":"YulIf","src":"3529:39:36"},{"nodeType":"YulAssignment","src":"3577:16:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3588:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"3591:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3584:3:36"},"nodeType":"YulFunctionCall","src":"3584:9:36"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3577:3:36"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3502:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"3505:1:36","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3511:3:36","type":""}],"src":"3471:128:36"},{"body":{"nodeType":"YulBlock","src":"3650:171:36","statements":[{"body":{"nodeType":"YulBlock","src":"3681:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3702:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3709:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3714:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3705:3:36"},"nodeType":"YulFunctionCall","src":"3705:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3695:6:36"},"nodeType":"YulFunctionCall","src":"3695:31:36"},"nodeType":"YulExpressionStatement","src":"3695:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3746:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3749:4:36","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3739:6:36"},"nodeType":"YulFunctionCall","src":"3739:15:36"},"nodeType":"YulExpressionStatement","src":"3739:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3774:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3777:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3767:6:36"},"nodeType":"YulFunctionCall","src":"3767:15:36"},"nodeType":"YulExpressionStatement","src":"3767:15:36"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3670:1:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3663:6:36"},"nodeType":"YulFunctionCall","src":"3663:9:36"},"nodeType":"YulIf","src":"3660:132:36"},{"nodeType":"YulAssignment","src":"3801:14:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3810:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"3813:1:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3806:3:36"},"nodeType":"YulFunctionCall","src":"3806:9:36"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3801:1:36"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3635:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"3638:1:36","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3644:1:36","type":""}],"src":"3604:217:36"},{"body":{"nodeType":"YulBlock","src":"3890:358:36","statements":[{"nodeType":"YulVariableDeclaration","src":"3900:16:36","value":{"kind":"number","nodeType":"YulLiteral","src":"3915:1:36","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"3904:7:36","type":""}]},{"nodeType":"YulAssignment","src":"3925:16:36","value":{"name":"power_1","nodeType":"YulIdentifier","src":"3934:7:36"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3925:5:36"}]},{"nodeType":"YulAssignment","src":"3950:13:36","value":{"name":"_base","nodeType":"YulIdentifier","src":"3958:5:36"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"3950:4:36"}]},{"body":{"nodeType":"YulBlock","src":"4014:228:36","statements":[{"body":{"nodeType":"YulBlock","src":"4059:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4061:16:36"},"nodeType":"YulFunctionCall","src":"4061:18:36"},"nodeType":"YulExpressionStatement","src":"4061:18:36"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4034:4:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4048:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4044:3:36"},"nodeType":"YulFunctionCall","src":"4044:6:36"},{"name":"base","nodeType":"YulIdentifier","src":"4052:4:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4040:3:36"},"nodeType":"YulFunctionCall","src":"4040:17:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4031:2:36"},"nodeType":"YulFunctionCall","src":"4031:27:36"},"nodeType":"YulIf","src":"4028:53:36"},{"body":{"nodeType":"YulBlock","src":"4120:29:36","statements":[{"nodeType":"YulAssignment","src":"4122:25:36","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"4135:5:36"},{"name":"base","nodeType":"YulIdentifier","src":"4142:4:36"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4131:3:36"},"nodeType":"YulFunctionCall","src":"4131:16:36"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4122:5:36"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4101:8:36"},{"name":"power_1","nodeType":"YulIdentifier","src":"4111:7:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4097:3:36"},"nodeType":"YulFunctionCall","src":"4097:22:36"},"nodeType":"YulIf","src":"4094:55:36"},{"nodeType":"YulAssignment","src":"4162:23:36","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4174:4:36"},{"name":"base","nodeType":"YulIdentifier","src":"4180:4:36"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4170:3:36"},"nodeType":"YulFunctionCall","src":"4170:15:36"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"4162:4:36"}]},{"nodeType":"YulAssignment","src":"4198:34:36","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4214:7:36"},{"name":"exponent","nodeType":"YulIdentifier","src":"4223:8:36"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4210:3:36"},"nodeType":"YulFunctionCall","src":"4210:22:36"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"4198:8:36"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3983:8:36"},{"name":"power_1","nodeType":"YulIdentifier","src":"3993:7:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3980:2:36"},"nodeType":"YulFunctionCall","src":"3980:21:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4002:3:36","statements":[]},"pre":{"nodeType":"YulBlock","src":"3976:3:36","statements":[]},"src":"3972:270:36"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"3854:5:36","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"3861:8:36","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"3874:5:36","type":""},{"name":"base","nodeType":"YulTypedName","src":"3881:4:36","type":""}],"src":"3826:422:36"},{"body":{"nodeType":"YulBlock","src":"4321:72:36","statements":[{"nodeType":"YulAssignment","src":"4331:56:36","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4361:4:36"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4371:8:36"},{"kind":"number","nodeType":"YulLiteral","src":"4381:4:36","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4367:3:36"},"nodeType":"YulFunctionCall","src":"4367:19:36"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"4340:20:36"},"nodeType":"YulFunctionCall","src":"4340:47:36"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4331:5:36"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"4292:4:36","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4298:8:36","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4311:5:36","type":""}],"src":"4253:140:36"},{"body":{"nodeType":"YulBlock","src":"4457:747:36","statements":[{"body":{"nodeType":"YulBlock","src":"4495:52:36","statements":[{"nodeType":"YulAssignment","src":"4509:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"4518:1:36","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4509:5:36"}]},{"nodeType":"YulLeave","src":"4532:5:36"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4477:8:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4470:6:36"},"nodeType":"YulFunctionCall","src":"4470:16:36"},"nodeType":"YulIf","src":"4467:80:36"},{"body":{"nodeType":"YulBlock","src":"4580:52:36","statements":[{"nodeType":"YulAssignment","src":"4594:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"4603:1:36","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4594:5:36"}]},{"nodeType":"YulLeave","src":"4617:5:36"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4566:4:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4559:6:36"},"nodeType":"YulFunctionCall","src":"4559:12:36"},"nodeType":"YulIf","src":"4556:76:36"},{"cases":[{"body":{"nodeType":"YulBlock","src":"4668:52:36","statements":[{"nodeType":"YulAssignment","src":"4682:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"4691:1:36","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4682:5:36"}]},{"nodeType":"YulLeave","src":"4705:5:36"}]},"nodeType":"YulCase","src":"4661:59:36","value":{"kind":"number","nodeType":"YulLiteral","src":"4666:1:36","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4736:123:36","statements":[{"body":{"nodeType":"YulBlock","src":"4771:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4773:16:36"},"nodeType":"YulFunctionCall","src":"4773:18:36"},"nodeType":"YulExpressionStatement","src":"4773:18:36"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4756:8:36"},{"kind":"number","nodeType":"YulLiteral","src":"4766:3:36","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4753:2:36"},"nodeType":"YulFunctionCall","src":"4753:17:36"},"nodeType":"YulIf","src":"4750:43:36"},{"nodeType":"YulAssignment","src":"4806:25:36","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4819:8:36"},{"kind":"number","nodeType":"YulLiteral","src":"4829:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4815:3:36"},"nodeType":"YulFunctionCall","src":"4815:16:36"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4806:5:36"}]},{"nodeType":"YulLeave","src":"4844:5:36"}]},"nodeType":"YulCase","src":"4729:130:36","value":{"kind":"number","nodeType":"YulLiteral","src":"4734:1:36","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"4648:4:36"},"nodeType":"YulSwitch","src":"4641:218:36"},{"body":{"nodeType":"YulBlock","src":"4957:70:36","statements":[{"nodeType":"YulAssignment","src":"4971:28:36","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4984:4:36"},{"name":"exponent","nodeType":"YulIdentifier","src":"4990:8:36"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"4980:3:36"},"nodeType":"YulFunctionCall","src":"4980:19:36"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4971:5:36"}]},{"nodeType":"YulLeave","src":"5012:5:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4881:4:36"},{"kind":"number","nodeType":"YulLiteral","src":"4887:2:36","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4878:2:36"},"nodeType":"YulFunctionCall","src":"4878:12:36"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4895:8:36"},{"kind":"number","nodeType":"YulLiteral","src":"4905:2:36","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4892:2:36"},"nodeType":"YulFunctionCall","src":"4892:16:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4874:3:36"},"nodeType":"YulFunctionCall","src":"4874:35:36"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4918:4:36"},{"kind":"number","nodeType":"YulLiteral","src":"4924:3:36","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4915:2:36"},"nodeType":"YulFunctionCall","src":"4915:13:36"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4933:8:36"},{"kind":"number","nodeType":"YulLiteral","src":"4943:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4930:2:36"},"nodeType":"YulFunctionCall","src":"4930:16:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4911:3:36"},"nodeType":"YulFunctionCall","src":"4911:36:36"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4871:2:36"},"nodeType":"YulFunctionCall","src":"4871:77:36"},"nodeType":"YulIf","src":"4868:159:36"},{"nodeType":"YulVariableDeclaration","src":"5036:57:36","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5078:4:36"},{"name":"exponent","nodeType":"YulIdentifier","src":"5084:8:36"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"5059:18:36"},"nodeType":"YulFunctionCall","src":"5059:34:36"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"5040:7:36","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"5049:6:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"5138:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5140:16:36"},"nodeType":"YulFunctionCall","src":"5140:18:36"},"nodeType":"YulExpressionStatement","src":"5140:18:36"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5108:7:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5125:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5121:3:36"},"nodeType":"YulFunctionCall","src":"5121:6:36"},{"name":"base_1","nodeType":"YulIdentifier","src":"5129:6:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5117:3:36"},"nodeType":"YulFunctionCall","src":"5117:19:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5105:2:36"},"nodeType":"YulFunctionCall","src":"5105:32:36"},"nodeType":"YulIf","src":"5102:58:36"},{"nodeType":"YulAssignment","src":"5169:29:36","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5182:7:36"},{"name":"base_1","nodeType":"YulIdentifier","src":"5191:6:36"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5178:3:36"},"nodeType":"YulFunctionCall","src":"5178:20:36"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5169:5:36"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"4428:4:36","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4434:8:36","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4447:5:36","type":""}],"src":"4398:806:36"},{"body":{"nodeType":"YulBlock","src":"5261:116:36","statements":[{"body":{"nodeType":"YulBlock","src":"5320:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5322:16:36"},"nodeType":"YulFunctionCall","src":"5322:18:36"},"nodeType":"YulExpressionStatement","src":"5322:18:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5292:1:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5285:6:36"},"nodeType":"YulFunctionCall","src":"5285:9:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5278:6:36"},"nodeType":"YulFunctionCall","src":"5278:17:36"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5300:1:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5311:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5307:3:36"},"nodeType":"YulFunctionCall","src":"5307:6:36"},{"name":"x","nodeType":"YulIdentifier","src":"5315:1:36"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5303:3:36"},"nodeType":"YulFunctionCall","src":"5303:14:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5297:2:36"},"nodeType":"YulFunctionCall","src":"5297:21:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5274:3:36"},"nodeType":"YulFunctionCall","src":"5274:45:36"},"nodeType":"YulIf","src":"5271:71:36"},{"nodeType":"YulAssignment","src":"5351:20:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5366:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"5369:1:36"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5362:3:36"},"nodeType":"YulFunctionCall","src":"5362:9:36"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5351:7:36"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5240:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"5243:1:36","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5249:7:36","type":""}],"src":"5209:168:36"},{"body":{"nodeType":"YulBlock","src":"5429:88:36","statements":[{"body":{"nodeType":"YulBlock","src":"5460:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5462:16:36"},"nodeType":"YulFunctionCall","src":"5462:18:36"},"nodeType":"YulExpressionStatement","src":"5462:18:36"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5445:5:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5456:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5452:3:36"},"nodeType":"YulFunctionCall","src":"5452:6:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5442:2:36"},"nodeType":"YulFunctionCall","src":"5442:17:36"},"nodeType":"YulIf","src":"5439:43:36"},{"nodeType":"YulAssignment","src":"5491:20:36","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5502:5:36"},{"kind":"number","nodeType":"YulLiteral","src":"5509:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5498:3:36"},"nodeType":"YulFunctionCall","src":"5498:13:36"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5491:3:36"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5411:5:36","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5421:3:36","type":""}],"src":"5382:135:36"},{"body":{"nodeType":"YulBlock","src":"5554:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5571:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5578:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5583:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5574:3:36"},"nodeType":"YulFunctionCall","src":"5574:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:36"},"nodeType":"YulFunctionCall","src":"5564:31:36"},"nodeType":"YulExpressionStatement","src":"5564:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5611:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5614:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5604:6:36"},"nodeType":"YulFunctionCall","src":"5604:15:36"},"nodeType":"YulExpressionStatement","src":"5604:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5635:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5638:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5628:6:36"},"nodeType":"YulFunctionCall","src":"5628:15:36"},"nodeType":"YulExpressionStatement","src":"5628:15:36"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5522:127:36"},{"body":{"nodeType":"YulBlock","src":"5686:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5703:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5710:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5715:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5706:3:36"},"nodeType":"YulFunctionCall","src":"5706:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5696:6:36"},"nodeType":"YulFunctionCall","src":"5696:31:36"},"nodeType":"YulExpressionStatement","src":"5696:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5743:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5746:4:36","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5736:6:36"},"nodeType":"YulFunctionCall","src":"5736:15:36"},"nodeType":"YulExpressionStatement","src":"5736:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5767:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5770:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5760:6:36"},"nodeType":"YulFunctionCall","src":"5760:15:36"},"nodeType":"YulExpressionStatement","src":"5760:15:36"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5654:127:36"},{"body":{"nodeType":"YulBlock","src":"5831:86:36","statements":[{"body":{"nodeType":"YulBlock","src":"5895:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5904:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5907:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5897:6:36"},"nodeType":"YulFunctionCall","src":"5897:12:36"},"nodeType":"YulExpressionStatement","src":"5897:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5854:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5865:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5880:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5885:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5876:3:36"},"nodeType":"YulFunctionCall","src":"5876:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"5889:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5872:3:36"},"nodeType":"YulFunctionCall","src":"5872:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5861:3:36"},"nodeType":"YulFunctionCall","src":"5861:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5851:2:36"},"nodeType":"YulFunctionCall","src":"5851:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5844:6:36"},"nodeType":"YulFunctionCall","src":"5844:50:36"},"nodeType":"YulIf","src":"5841:70:36"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5820:5:36","type":""}],"src":"5786:131:36"}]},"contents":"{\n    { }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, signextend(2, value_1))) { revert(0, 0) }\n        value1 := value_1\n        value2 := abi_decode_uint16_fromMemory(add(headStart, 64))\n        value3 := abi_decode_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_uint16_fromMemory(add(headStart, 128))\n        value5 := abi_decode_uint8_fromMemory(add(headStart, 160))\n        let value_2 := mload(add(headStart, 192))\n        if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(0, 0) }\n        value6 := value_2\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint8_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2246":[{"length":32,"start":183},{"length":32,"start":304}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c8063230ed44a14610051578063aaf5eb681461007d578063ac41865a1461009f578063c45a0155146100b2575b600080fd5b61006461005f366004610789565b6100f1565b60405162ffffff90911681526020015b60405180910390f35b6100916c0c9f2c9cd04674edea4000000081565b604051908152602001610074565b6100916100ad3660046106b5565b61012a565b6100d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610074565b6000818154811061010157600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b600080547f000000000000000000000000000000000000000000000000000000000000000082805b8381101561065f576000836001600160a01b0316631698ee8289896000868154811061018057610180610950565b60009182526020909120600a8083049091015460405160e087901b6001600160e01b03191681526001600160a01b03958616600482015293909416602484015290066003026101000a90910462ffffff16604482015260640160206040518083038186803b1580156101f157600080fd5b505afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102299190610691565b90506001600160a01b0381161561064c5760008190506000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561027a57600080fd5b505afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b29190610691565b6040516370a0823160e01b81526001600160a01b0385811660048301529192506000918316906370a082319060240160206040518083038186803b1580156102f957600080fd5b505afa15801561030d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033191906107a2565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561036e57600080fd5b505afa158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190610691565b6040516370a0823160e01b81526001600160a01b0387811660048301529192506000918316906370a082319060240160206040518083038186803b1580156103ed57600080fd5b505afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042591906107a2565b90506000856001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561046257600080fd5b505afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906106ee565b505050505050905060006002600160601b6104b59190610853565b6c0c9f2c9cd04674edea400000006104d760026001600160a01b038616610853565b6104e19190610900565b6104eb91906107ee565b90506000836c0c9f2c9cd04674edea400000006105088489610900565b61051291906107ee565b61051c91906107d6565b90508a81111561064357809a506000876001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561056457600080fd5b505afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c91906107bb565b6105a790600a610853565b90506000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e457600080fd5b505afa1580156105f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061c91906107bb565b61062790600a610853565b9050806106348386610900565b61063e91906107ee565b9f5050505b50505050505050505b50806106578161091f565b915050610152565b5050505092915050565b805161ffff8116811461067b57600080fd5b919050565b805160ff8116811461067b57600080fd5b6000602082840312156106a357600080fd5b81516106ae81610966565b9392505050565b600080604083850312156106c857600080fd5b82356106d381610966565b915060208301356106e381610966565b809150509250929050565b600080600080600080600060e0888a03121561070957600080fd5b875161071481610966565b8097505060208801518060020b811461072c57600080fd5b955061073a60408901610669565b945061074860608901610669565b935061075660808901610669565b925061076460a08901610680565b915060c0880151801515811461077957600080fd5b8091505092959891949750929550565b60006020828403121561079b57600080fd5b5035919050565b6000602082840312156107b457600080fd5b5051919050565b6000602082840312156107cd57600080fd5b6106ae82610680565b600082198211156107e9576107e961093a565b500190565b60008261080b57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111561084b5781600019048211156108315761083161093a565b8085161561083e57918102915b93841c9390800290610815565b509250929050565b60006106ae60ff84168360008261086c575060016108fa565b81610879575060006108fa565b816001811461088f5760028114610899576108b5565b60019150506108fa565b60ff8411156108aa576108aa61093a565b50506001821b6108fa565b5060208310610133831016604e8410600b84101617156108d8575081810a6108fa565b6108e28383610810565b80600019048211156108f6576108f661093a565b0290505b92915050565b600081600019048311821515161561091a5761091a61093a565b500290565b60006000198214156109335761093361093a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461097b57600080fd5b5056fea26469706673582212200e298870688378745ffc33d0460e375e918871d2c7a344679d0688a998d06af064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x230ED44A EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xAC41865A EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x789 JUMP JUMPDEST PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x74 JUMP JUMPDEST PUSH2 0x91 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x12A JUMP JUMPDEST PUSH2 0xD9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x74 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x3 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0x0 DUP3 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1698EE82 DUP10 DUP10 PUSH1 0x0 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x180 JUMPI PUSH2 0x180 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0xA DUP1 DUP4 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP8 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP1 MOD PUSH1 0x3 MUL PUSH2 0x100 EXP SWAP1 SWAP2 DIV PUSH3 0xFFFFFF AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x382 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x401 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x476 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x6EE JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x853 JUMP JUMPDEST PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x4D7 PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x853 JUMP JUMPDEST PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x508 DUP5 DUP10 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 POP DUP11 DUP2 GT ISZERO PUSH2 0x643 JUMPI DUP1 SWAP11 POP PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x5A7 SWAP1 PUSH1 0xA PUSH2 0x853 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x627 SWAP1 PUSH1 0xA PUSH2 0x853 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x634 DUP4 DUP7 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x63E SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST SWAP16 POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST POP DUP1 PUSH2 0x657 DUP2 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x152 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6AE DUP2 PUSH2 0x966 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x6D3 DUP2 PUSH2 0x966 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x6E3 DUP2 PUSH2 0x966 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x714 DUP2 PUSH2 0x966 JUMP JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH2 0x73A PUSH1 0x40 DUP10 ADD PUSH2 0x669 JUMP JUMPDEST SWAP5 POP PUSH2 0x748 PUSH1 0x60 DUP10 ADD PUSH2 0x669 JUMP JUMPDEST SWAP4 POP PUSH2 0x756 PUSH1 0x80 DUP10 ADD PUSH2 0x669 JUMP JUMPDEST SWAP3 POP PUSH2 0x764 PUSH1 0xA0 DUP10 ADD PUSH2 0x680 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6AE DUP3 PUSH2 0x680 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E9 PUSH2 0x93A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x80B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x84B JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x831 JUMPI PUSH2 0x831 PUSH2 0x93A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x83E JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x815 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE PUSH1 0xFF DUP5 AND DUP4 PUSH1 0x0 DUP3 PUSH2 0x86C JUMPI POP PUSH1 0x1 PUSH2 0x8FA JUMP JUMPDEST DUP2 PUSH2 0x879 JUMPI POP PUSH1 0x0 PUSH2 0x8FA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x88F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x899 JUMPI PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8FA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x8AA JUMPI PUSH2 0x8AA PUSH2 0x93A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8FA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x8D8 JUMPI POP DUP2 DUP2 EXP PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x8E2 DUP4 DUP4 PUSH2 0x810 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x8F6 JUMPI PUSH2 0x8F6 PUSH2 0x93A JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x91A JUMPI PUSH2 0x91A PUSH2 0x93A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x933 JUMPI PUSH2 0x933 PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x29 DUP9 PUSH17 0x688378745FFC33D0460E375E918871D2C7 LOG3 DIFFICULTY PUSH8 0x9D0688A998D06AF0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"356:1719:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;519:50;;;;;;:::i;:::-;;:::i;:::-;;;3268:8:36;3256:21;;;3238:40;;3226:2;3211:18;519:50:18;;;;;;;;426:49;;471:4;426:49;;;;;3435:25:36;;;3423:2;3408:18;426:49:18;3289:177:36;647:1426:18;;;;;;:::i;:::-;;:::i;481:32::-;;;;;;;;-1:-1:-1;;;;;2657:32:36;;;2639:51;;2627:2;2612:18;481:32:18;2493:203:36;519:50:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;647:1426::-;760:13;802:15;;874:7;760:13;;923:1144;947:6;943:1;:10;923:1144;;;974:19;996:8;-1:-1:-1;;;;;996:16:18;;1030:10;1058:11;1087:8;1096:1;1087:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;996:116;;;;;;-1:-1:-1;;;;;;996:116:18;;;-1:-1:-1;;;;;2957:15:36;;;996:116:18;;;2939:34:36;3009:15;;;;2989:18;;;2982:43;1087:11:18;;;;;;;;;;;3041:18:36;;;3034:49;2874:18;;996:116:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;974:138;-1:-1:-1;;;;;;1130:25:18;;;1126:931;;1175:19;1212:11;1175:49;;1242:14;1259:4;-1:-1:-1;;;;;1259:11:18;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1309:37;;-1:-1:-1;;;1309:37:18;;-1:-1:-1;;;;;2657:32:36;;;1309:37:18;;;2639:51:36;1242:30:18;;-1:-1:-1;1290:16:18;;1309:24;;;;;2612:18:36;;1309:37:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1290:56;;1364:14;1381:4;-1:-1:-1;;;;;1381:11:18;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1431:37;;-1:-1:-1;;;1431:37:18;;-1:-1:-1;;;;;2657:32:36;;;1431:37:18;;;2639:51:36;1364:30:18;;-1:-1:-1;1412:16:18;;1431:24;;;;;2612:18:36;;1431:37:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1412:56;;1487:20;1523:4;-1:-1:-1;;;;;1523:10:18;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1486:49;;;;;;;;1553:14;1654:1;-1:-1:-1;;;1634:21:18;;;;:::i;:::-;471:4;1571:26;1596:1;-1:-1:-1;;;;;1571:21:18;;:26;:::i;:::-;:38;;;;:::i;:::-;1570:86;;;;:::i;:::-;1553:103;-1:-1:-1;1674:17:18;1728:8;471:4;1695:17;1553:103;1695:8;:17;:::i;:::-;1694:31;;;;:::i;:::-;:42;;;;:::i;:::-;1674:62;;1770:13;1758:9;:25;1754:289;;;1823:9;1807:25;;1854:13;1883:6;-1:-1:-1;;;;;1876:23:18;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1870:31;;:2;:31;:::i;:::-;1854:47;;1923:13;1952:6;-1:-1:-1;;;;;1945:23:18;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1939:31;;:2;:31;:::i;:::-;1923:47;-1:-1:-1;1923:47:18;2001:14;2010:5;2001:6;:14;:::i;:::-;2000:24;;;;:::i;:::-;1992:32;;1785:258;;1754:289;1157:900;;;;;;;;1126:931;-1:-1:-1;955:3:18;;;;:::i;:::-;;;;923:1144;;;;775:1298;;;647:1426;;;;:::o;14:163:36:-;92:13;;145:6;134:18;;124:29;;114:57;;167:1;164;157:12;114:57;14:163;;;:::o;182:160::-;259:13;;312:4;301:16;;291:27;;281:55;;332:1;329;322:12;347:251;417:6;470:2;458:9;449:7;445:23;441:32;438:52;;;486:1;483;476:12;438:52;518:9;512:16;537:31;562:5;537:31;:::i;:::-;587:5;347:251;-1:-1:-1;;;347:251:36:o;603:388::-;671:6;679;732:2;720:9;711:7;707:23;703:32;700:52;;;748:1;745;738:12;700:52;787:9;774:23;806:31;831:5;806:31;:::i;:::-;856:5;-1:-1:-1;913:2:36;898:18;;885:32;926:33;885:32;926:33;:::i;:::-;978:7;968:17;;;603:388;;;;;:::o;996:909::-;1110:6;1118;1126;1134;1142;1150;1158;1211:3;1199:9;1190:7;1186:23;1182:33;1179:53;;;1228:1;1225;1218:12;1179:53;1260:9;1254:16;1279:31;1304:5;1279:31;:::i;:::-;1329:5;1319:15;;;1379:2;1368:9;1364:18;1358:25;1428:7;1425:1;1414:22;1405:7;1402:35;1392:63;;1451:1;1448;1441:12;1392:63;1474:7;-1:-1:-1;1500:48:36;1544:2;1529:18;;1500:48;:::i;:::-;1490:58;;1567:48;1611:2;1600:9;1596:18;1567:48;:::i;:::-;1557:58;;1634:49;1678:3;1667:9;1663:19;1634:49;:::i;:::-;1624:59;;1702:48;1745:3;1734:9;1730:19;1702:48;:::i;:::-;1692:58;;1795:3;1784:9;1780:19;1774:26;1845:7;1838:15;1831:23;1822:7;1819:36;1809:64;;1869:1;1866;1859:12;1809:64;1892:7;1882:17;;;996:909;;;;;;;;;;:::o;1910:180::-;1969:6;2022:2;2010:9;2001:7;1997:23;1993:32;1990:52;;;2038:1;2035;2028:12;1990:52;-1:-1:-1;2061:23:36;;1910:180;-1:-1:-1;1910:180:36:o;2095:184::-;2165:6;2218:2;2206:9;2197:7;2193:23;2189:32;2186:52;;;2234:1;2231;2224:12;2186:52;-1:-1:-1;2257:16:36;;2095:184;-1:-1:-1;2095:184:36:o;2284:204::-;2352:6;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:38;2472:9;2444:38;:::i;3471:128::-;3511:3;3542:1;3538:6;3535:1;3532:13;3529:39;;;3548:18;;:::i;:::-;-1:-1:-1;3584:9:36;;3471:128::o;3604:217::-;3644:1;3670;3660:132;;3714:10;3709:3;3705:20;3702:1;3695:31;3749:4;3746:1;3739:15;3777:4;3774:1;3767:15;3660:132;-1:-1:-1;3806:9:36;;3604:217::o;3826:422::-;3915:1;3958:5;3915:1;3972:270;3993:7;3983:8;3980:21;3972:270;;;4052:4;4048:1;4044:6;4040:17;4034:4;4031:27;4028:53;;;4061:18;;:::i;:::-;4111:7;4101:8;4097:22;4094:55;;;4131:16;;;;4094:55;4210:22;;;;4170:15;;;;3972:270;;;3976:3;3826:422;;;;;:::o;4253:140::-;4311:5;4340:47;4381:4;4371:8;4367:19;4361:4;4447:5;4477:8;4467:80;;-1:-1:-1;4518:1:36;4532:5;;4467:80;4566:4;4556:76;;-1:-1:-1;4603:1:36;4617:5;;4556:76;4648:4;4666:1;4661:59;;;;4734:1;4729:130;;;;4641:218;;4661:59;4691:1;4682:10;;4705:5;;;4729:130;4766:3;4756:8;4753:17;4750:43;;;4773:18;;:::i;:::-;-1:-1:-1;;4829:1:36;4815:16;;4844:5;;4641:218;;4943:2;4933:8;4930:16;4924:3;4918:4;4915:13;4911:36;4905:2;4895:8;4892:16;4887:2;4881:4;4878:12;4874:35;4871:77;4868:159;;;-1:-1:-1;4980:19:36;;;5012:5;;4868:159;5059:34;5084:8;5078:4;5059:34;:::i;:::-;5129:6;5125:1;5121:6;5117:19;5108:7;5105:32;5102:58;;;5140:18;;:::i;:::-;5178:20;;-1:-1:-1;4398:806:36;;;;;:::o;5209:168::-;5249:7;5315:1;5311;5307:6;5303:14;5300:1;5297:21;5292:1;5285:9;5278:17;5274:45;5271:71;;;5322:18;;:::i;:::-;-1:-1:-1;5362:9:36;;5209:168::o;5382:135::-;5421:3;-1:-1:-1;;5442:17:36;;5439:43;;;5462:18;;:::i;:::-;-1:-1:-1;5509:1:36;5498:13;;5382:135::o;5522:127::-;5583:10;5578:3;5574:20;5571:1;5564:31;5614:4;5611:1;5604:15;5638:4;5635:1;5628:15;5654:127;5715:10;5710:3;5706:20;5703:1;5696:31;5746:4;5743:1;5736:15;5770:4;5767:1;5760:15;5786:131;-1:-1:-1;;;;;5861:31:36;;5851:42;;5841:70;;5907:1;5904;5897:12;5841:70;5786:131;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"496800","executionCost":"infinite","totalCost":"infinite"},"external":{"PRECISION()":"195","factory()":"infinite","feeTiers(uint256)":"6214","getPrice(address,address)":"infinite"}},"methodIdentifiers":{"PRECISION()":"aaf5eb68","factory()":"c45a0155","feeTiers(uint256)":"230ed44a","getPrice(address,address)":"ac41865a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeTiers\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV3PriceFeedIntegration.sol\":\"UniswapV3PriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.4.0;\\n\\n/// @title FixedPoint96\\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\\n/// @dev Used in SqrtPriceMath.sol\\nlibrary FixedPoint96 {\\n    uint8 internal constant RESOLUTION = 96;\\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\\n}\\n\",\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\"},\"contracts/UniswapV3PriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\\\";\\nimport \\\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\\\";\\nimport \\\"./interfaces/IPriceFeedIntegration.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\n\\ncontract UniswapV3PriceFeedIntegration is IPriceFeedIntegration {\\n    uint256 public constant override PRECISION = 1e30;\\n    address public immutable factory;\\n    uint24[] public feeTiers = [100, 500, 3000, 10000];\\n\\n    constructor(address _factory) {\\n        factory = _factory;\\n    }\\n\\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view override returns (uint256 price) {\\n        uint256 length = feeTiers.length;\\n        IUniswapV3Factory _factory = IUniswapV3Factory(factory);\\n        uint256 bestLiquidity;\\n        for (uint256 i = 0; i < length; i++) {\\n            address poolAddress = _factory.getPool(\\n                _baseToken,\\n                _quoteToken,\\n                feeTiers[i]\\n            );\\n            if (poolAddress != address(0)) {\\n                IUniswapV3Pool pool = IUniswapV3Pool(poolAddress);\\n                address token0 = pool.token0();\\n                uint256 balance0 = IERC20(token0).balanceOf(poolAddress);\\n                address token1 = pool.token1();\\n                uint256 balance1 = IERC20(token1).balanceOf(poolAddress);\\n                (uint160 sqrtPriceX96, , , , , , ) = pool.slot0();\\n                uint256 price0 = (uint256(sqrtPriceX96) ** 2 * PRECISION) /\\n                    (FixedPoint96.Q96 ** 2);\\n                uint256 liquidity = (balance0 * price0) / PRECISION + balance1;\\n                if (liquidity > bestLiquidity) {\\n                    bestLiquidity = liquidity;\\n                    uint256 prec0 = 10 ** IERC20(token0).decimals();\\n                    uint256 prec1 = 10 ** IERC20(token1).decimals();\\n                    price = (price0 * prec0) / prec1;\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x89a20d5c497c79277e5e691ad4292afcac77871f1764a04ca0b8ad7224593ba4\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeedIntegration {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2254,"contract":"contracts/UniswapV3PriceFeedIntegration.sol:UniswapV3PriceFeedIntegration","label":"feeTiers","offset":0,"slot":"0","type":"t_array(t_uint24)dyn_storage"}],"types":{"t_array(t_uint24)dyn_storage":{"base":"t_uint24","encoding":"dynamic_array","label":"uint24[]","numberOfBytes":"32"},"t_uint24":{"encoding":"inplace","label":"uint24","numberOfBytes":"3"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/base/BancorConverterRegistry.sol":{"BancorConverterRegistry":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_token","type":"address"},{"indexed":false,"internalType":"address","name":"_address","type":"address"}],"name":"ConverterAddition","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_token","type":"address"},{"indexed":false,"internalType":"address","name":"_address","type":"address"}],"name":"ConverterRemoval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_prevOwner","type":"address"},{"indexed":true,"internalType":"address","name":"_newOwner","type":"address"}],"name":"OwnerUpdate","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"blockStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint32","name":"_index","type":"uint32"}],"name":"converterAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"converterCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"newOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_converter","type":"address"}],"name":"registerConverter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_converter","type":"address"}],"name":"tokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint32","name":"_index","type":"uint32"}],"name":"unregisterConverter","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptOwnership()":{"details":"used by a new owner to accept an ownership transfer"},"constructor":{"details":"constructor"},"converterAddress(address,uint32)":{"details":"returns the converter address associated with the given token or zero address if no such converter exists","params":{"_index":"converter index","_token":"token address"},"returns":{"_0":"converter address"}},"converterCount(address)":{"details":"returns the number of converters associated with the given token or 0 if the token isn't registered","params":{"_token":"token address"},"returns":{"_0":"number of converters"}},"registerConverter(address,address)":{"details":"adds a new converter address for a given token to the registry throws if the converter is already registered","params":{"_converter":"converter address","_token":"token address"}},"tokenAddress(address)":{"details":"returns the token address associated with the given converter or zero address if no such converter exists","params":{"_converter":"converter address"},"returns":{"_0":"token address"}},"tokenCount()":{"details":"returns the number of tokens in the registry","returns":{"_0":"number of tokens"}},"transferOwnership(address)":{"details":"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner","params":{"_newOwner":"new contract owner"}},"unregisterConverter(address,uint32)":{"details":"removes an existing converter from the registry note that the function doesn't scale and might be needed to be called multiple times when removing an older converter from a large converter list","params":{"_index":"converter index","_token":"token address"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2474":{"entryPoint":null,"id":2474,"parameterSlots":0,"returnSlots":0},"@_3048":{"entryPoint":null,"id":3048,"parameterSlots":0,"returnSlots":0},"@_3114":{"entryPoint":null,"id":3114,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610893806100326000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639f181b5e116100715780639f181b5e14610158578063cd9d4d661461016a578063d26a8d2e14610193578063d4ee1d90146101a6578063f2fde38b146101b9578063f427fdf9146101cc57600080fd5b806338cb066f146100b95780634f64b2be146100ce57806379ba5097146100fe5780638da5cb5b1461010657806390ab3106146101195780639884e8011461012c575b600080fd5b6100cc6100c7366004610751565b6101d2565b005b6100e16100dc366004610791565b6103ff565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc610429565b6000546100e1906001600160a01b031681565b6100e1610127366004610751565b6104a4565b6100e161013a3660046106fc565b6001600160a01b039081166000908152600460205260409020541690565b6005545b6040519081526020016100f5565b61015c6101783660046106fc565b6001600160a01b031660009081526003602052604090205490565b6100cc6101a136600461071e565b61051f565b6001546100e1906001600160a01b031681565b6100cc6101c73660046106fc565b61068c565b4261015c565b6000546001600160a01b031633146101e957600080fd5b816001600160a01b0381166101fd57600080fd5b6001600160a01b03831660009081526003602052604090205463ffffffff83161061022757600080fd5b6001600160a01b0383166000908152600360205260408120805463ffffffff851690811061025757610257610847565b60009182526020822001546001600160a01b031691506102788460016107aa565b90505b6001600160a01b03851660009081526003602052604090205463ffffffff82161015610355576001600160a01b0385166000908152600360205260409020805463ffffffff83169081106102d1576102d1610847565b60009182526020808320909101546001600160a01b038881168452600390925260409092209116906103046001846107d2565b63ffffffff168154811061031a5761031a610847565b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790558061034d816107f7565b91505061027b565b506001600160a01b038416600090815260036020526040902080548061037d5761037d610831565b60008281526020808220600019908401810180546001600160a01b031990811690915593019093556001600160a01b0384811680835260048552604092839020805490941690935590519182528616917fc3b25a6c3b7509edde0f2e6cc317b5820a901fa82ac554709206e1d7237fe29491015b60405180910390a250505050565b6005818154811061040f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b0316331461044057600080fd5b600154600080546040516001600160a01b0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6001600160a01b03821660009081526003602052604081205463ffffffff8316106104d157506000610519565b6001600160a01b0383166000908152600360205260409020805463ffffffff841690811061050157610501610847565b6000918252602090912001546001600160a01b031690505b92915050565b6000546001600160a01b0316331461053657600080fd5b816001600160a01b03811661054a57600080fd5b816001600160a01b03811661055e57600080fd5b6001600160a01b03838116600090815260046020526040902054161561058357600080fd5b6001600160a01b03841660009081526002602052604090205460ff16610607576005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0387169081179091556000908152600260205260409020805460ff191690911790555b6001600160a01b03848116600081815260036020908152604080832080546001810182559084528284200180549589166001600160a01b03199687168117909155808452600483529281902080549095168417909455925190815290917f229aec2ec4b21e700d6daf13a894e7b38c18b844b021f2eee263f04af3ea6f0091016103f1565b6000546001600160a01b031633146106a357600080fd5b6000546001600160a01b03828116911614156106be57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b03811681146106f757600080fd5b919050565b60006020828403121561070e57600080fd5b610717826106e0565b9392505050565b6000806040838503121561073157600080fd5b61073a836106e0565b9150610748602084016106e0565b90509250929050565b6000806040838503121561076457600080fd5b61076d836106e0565b9150602083013563ffffffff8116811461078657600080fd5b809150509250929050565b6000602082840312156107a357600080fd5b5035919050565b600063ffffffff8083168185168083038211156107c9576107c961081b565b01949350505050565b600063ffffffff838116908316818110156107ef576107ef61081b565b039392505050565b600063ffffffff808316818114156108115761081161081b565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d7ee1d86e7402fdc4d138feadaa909cb5e10e44710fe39edf1654149a194a1ea64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x893 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F181B5E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xCD9D4D66 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xD26A8D2E EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xF427FDF9 EQ PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38CB066F EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x90AB3106 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x9884E801 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x751 JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x791 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x751 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF5 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST TIMESTAMP PUSH2 0x15C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x257 JUMPI PUSH2 0x257 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x278 DUP5 PUSH1 0x1 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP3 AND LT ISZERO PUSH2 0x355 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP4 AND SWAP1 DUP2 LT PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 AND SWAP1 PUSH2 0x304 PUSH1 0x1 DUP5 PUSH2 0x7D2 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x31A JUMPI PUSH2 0x31A PUSH2 0x847 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x34D DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x37D JUMPI PUSH2 0x37D PUSH2 0x831 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 PUSH1 0x0 NOT SWAP1 DUP5 ADD DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE SWAP4 ADD SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x4 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP5 AND SWAP1 SWAP4 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE DUP7 AND SWAP2 PUSH32 0xC3B25A6C3B7509EDDE0F2E6CC317B5820A901FA82AC554709206E1D7237FE294 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT PUSH2 0x4D1 JUMPI POP PUSH1 0x0 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x501 JUMPI PUSH2 0x501 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x607 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD SWAP6 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP7 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND DUP5 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 SWAP2 PUSH32 0x229AEC2EC4B21E700D6DAF13A894E7B38C18B844B021F2EEE263F04AF3EA6F00 SWAP2 ADD PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73A DUP4 PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x748 PUSH1 0x20 DUP5 ADD PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76D DUP4 PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C9 PUSH2 0x81B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x81B JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xEE SAR DUP7 0xE7 BLOCKHASH 0x2F 0xDC 0x4D SGT DUP16 0xEA 0xDA 0xA9 MULMOD 0xCB 0x5E LT 0xE4 SELFBALANCE LT INVALID CODECOPY 0xED CALL PUSH6 0x4149A194A1EA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"601:4393:19:-:0;;;1330:23;;;;;;;;;-1:-1:-1;299:5:22;:18;;-1:-1:-1;;;;;;299:18:22;307:10;299:18;;;601:4393:19;;;;;;"},"deployedBytecode":{"functionDebugData":{"@acceptOwnership_3106":{"entryPoint":1065,"id":3106,"parameterSlots":0,"returnSlots":0},"@blockStamp_2691":{"entryPoint":null,"id":2691,"parameterSlots":0,"returnSlots":1},"@converterAddress_2527":{"entryPoint":1188,"id":2527,"parameterSlots":2,"returnSlots":1},"@converterCount_2498":{"entryPoint":null,"id":2498,"parameterSlots":1,"returnSlots":1},"@newOwner_3032":{"entryPoint":null,"id":3032,"parameterSlots":0,"returnSlots":0},"@owner_3030":{"entryPoint":null,"id":3030,"parameterSlots":0,"returnSlots":0},"@registerConverter_2604":{"entryPoint":1311,"id":2604,"parameterSlots":2,"returnSlots":0},"@tokenAddress_2540":{"entryPoint":null,"id":2540,"parameterSlots":1,"returnSlots":1},"@tokenCount_2484":{"entryPoint":null,"id":2484,"parameterSlots":0,"returnSlots":1},"@tokens_2457":{"entryPoint":1023,"id":2457,"parameterSlots":0,"returnSlots":0},"@transferOwnership_3078":{"entryPoint":1676,"id":3078,"parameterSlots":1,"returnSlots":0},"@unregisterConverter_2682":{"entryPoint":466,"id":2682,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1760,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1788,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1822,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":1873,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint32":{"entryPoint":1962,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint32":{"entryPoint":2002,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint32":{"entryPoint":2039,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2075,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":2097,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2119,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2636:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:36","statements":[{"nodeType":"YulAssignment","src":"73:29:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:36"},"nodeType":"YulFunctionCall","src":"82:20:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:36"}]},{"body":{"nodeType":"YulBlock","src":"165:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:36"},"nodeType":"YulFunctionCall","src":"167:12:36"},"nodeType":"YulExpressionStatement","src":"167:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:36"},"nodeType":"YulFunctionCall","src":"146:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:36"},"nodeType":"YulFunctionCall","src":"142:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:36"},"nodeType":"YulFunctionCall","src":"131:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:36"},"nodeType":"YulFunctionCall","src":"121:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:36"},"nodeType":"YulFunctionCall","src":"114:50:36"},"nodeType":"YulIf","src":"111:70:36"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:36","type":""}],"src":"14:173:36"},{"body":{"nodeType":"YulBlock","src":"262:116:36","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:36"},"nodeType":"YulFunctionCall","src":"310:12:36"},"nodeType":"YulExpressionStatement","src":"310:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:36"},"nodeType":"YulFunctionCall","src":"279:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:36"},"nodeType":"YulFunctionCall","src":"275:32:36"},"nodeType":"YulIf","src":"272:52:36"},{"nodeType":"YulAssignment","src":"333:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:36"},"nodeType":"YulFunctionCall","src":"343:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:36"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:36","type":""}],"src":"192:186:36"},{"body":{"nodeType":"YulBlock","src":"470:173:36","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:36"},"nodeType":"YulFunctionCall","src":"518:12:36"},"nodeType":"YulExpressionStatement","src":"518:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:36"},"nodeType":"YulFunctionCall","src":"487:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:36"},"nodeType":"YulFunctionCall","src":"483:32:36"},"nodeType":"YulIf","src":"480:52:36"},{"nodeType":"YulAssignment","src":"541:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:36"},"nodeType":"YulFunctionCall","src":"551:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:36"}]},{"nodeType":"YulAssignment","src":"589:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:36"},"nodeType":"YulFunctionCall","src":"618:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"599:18:36"},"nodeType":"YulFunctionCall","src":"599:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:36","type":""}],"src":"383:260:36"},{"body":{"nodeType":"YulBlock","src":"734:264:36","statements":[{"body":{"nodeType":"YulBlock","src":"780:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"789:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"792:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"782:6:36"},"nodeType":"YulFunctionCall","src":"782:12:36"},"nodeType":"YulExpressionStatement","src":"782:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"755:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"764:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"751:3:36"},"nodeType":"YulFunctionCall","src":"751:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"776:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"747:3:36"},"nodeType":"YulFunctionCall","src":"747:32:36"},"nodeType":"YulIf","src":"744:52:36"},{"nodeType":"YulAssignment","src":"805:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"834:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"815:18:36"},"nodeType":"YulFunctionCall","src":"815:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"805:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"853:45:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"883:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"894:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"879:3:36"},"nodeType":"YulFunctionCall","src":"879:18:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"866:12:36"},"nodeType":"YulFunctionCall","src":"866:32:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"857:5:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"952:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"961:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"964:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"954:6:36"},"nodeType":"YulFunctionCall","src":"954:12:36"},"nodeType":"YulExpressionStatement","src":"954:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"920:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"931:5:36"},{"kind":"number","nodeType":"YulLiteral","src":"938:10:36","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"927:3:36"},"nodeType":"YulFunctionCall","src":"927:22:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"917:2:36"},"nodeType":"YulFunctionCall","src":"917:33:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"910:6:36"},"nodeType":"YulFunctionCall","src":"910:41:36"},"nodeType":"YulIf","src":"907:61:36"},{"nodeType":"YulAssignment","src":"977:15:36","value":{"name":"value","nodeType":"YulIdentifier","src":"987:5:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"977:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"692:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"703:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"715:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"723:6:36","type":""}],"src":"648:350:36"},{"body":{"nodeType":"YulBlock","src":"1073:110:36","statements":[{"body":{"nodeType":"YulBlock","src":"1119:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1128:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1131:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1121:6:36"},"nodeType":"YulFunctionCall","src":"1121:12:36"},"nodeType":"YulExpressionStatement","src":"1121:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1094:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"1103:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1090:3:36"},"nodeType":"YulFunctionCall","src":"1090:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"1115:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1086:3:36"},"nodeType":"YulFunctionCall","src":"1086:32:36"},"nodeType":"YulIf","src":"1083:52:36"},{"nodeType":"YulAssignment","src":"1144:33:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1167:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1154:12:36"},"nodeType":"YulFunctionCall","src":"1154:23:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1144:6:36"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1039:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1050:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1062:6:36","type":""}],"src":"1003:180:36"},{"body":{"nodeType":"YulBlock","src":"1289:102:36","statements":[{"nodeType":"YulAssignment","src":"1299:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1311:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1307:3:36"},"nodeType":"YulFunctionCall","src":"1307:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1299:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1341:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1356:6:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1372:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1377:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1368:3:36"},"nodeType":"YulFunctionCall","src":"1368:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"1381:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1364:3:36"},"nodeType":"YulFunctionCall","src":"1364:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1352:3:36"},"nodeType":"YulFunctionCall","src":"1352:32:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:36"},"nodeType":"YulFunctionCall","src":"1334:51:36"},"nodeType":"YulExpressionStatement","src":"1334:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1258:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1269:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1280:4:36","type":""}],"src":"1188:203:36"},{"body":{"nodeType":"YulBlock","src":"1497:76:36","statements":[{"nodeType":"YulAssignment","src":"1507:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1519:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1530:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1515:3:36"},"nodeType":"YulFunctionCall","src":"1515:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1507:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1549:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"1560:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1542:6:36"},"nodeType":"YulFunctionCall","src":"1542:25:36"},"nodeType":"YulExpressionStatement","src":"1542:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1466:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1477:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1488:4:36","type":""}],"src":"1396:177:36"},{"body":{"nodeType":"YulBlock","src":"1625:181:36","statements":[{"nodeType":"YulVariableDeclaration","src":"1635:20:36","value":{"kind":"number","nodeType":"YulLiteral","src":"1645:10:36","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1639:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1664:21:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1679:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1682:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1675:3:36"},"nodeType":"YulFunctionCall","src":"1675:10:36"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"1668:3:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1694:21:36","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1709:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1712:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1705:3:36"},"nodeType":"YulFunctionCall","src":"1705:10:36"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"1698:3:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1749:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1751:16:36"},"nodeType":"YulFunctionCall","src":"1751:18:36"},"nodeType":"YulExpressionStatement","src":"1751:18:36"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"1730:3:36"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1739:2:36"},{"name":"y_1","nodeType":"YulIdentifier","src":"1743:3:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1735:3:36"},"nodeType":"YulFunctionCall","src":"1735:12:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1727:2:36"},"nodeType":"YulFunctionCall","src":"1727:21:36"},"nodeType":"YulIf","src":"1724:47:36"},{"nodeType":"YulAssignment","src":"1780:20:36","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"1791:3:36"},{"name":"y_1","nodeType":"YulIdentifier","src":"1796:3:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1787:3:36"},"nodeType":"YulFunctionCall","src":"1787:13:36"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"1780:3:36"}]}]},"name":"checked_add_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1608:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"1611:1:36","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"1617:3:36","type":""}],"src":"1578:228:36"},{"body":{"nodeType":"YulBlock","src":"1859:173:36","statements":[{"nodeType":"YulVariableDeclaration","src":"1869:20:36","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:10:36","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1873:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1898:21:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1913:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1916:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1909:3:36"},"nodeType":"YulFunctionCall","src":"1909:10:36"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"1902:3:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1928:21:36","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1943:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1946:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1939:3:36"},"nodeType":"YulFunctionCall","src":"1939:10:36"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"1932:3:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1974:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1976:16:36"},"nodeType":"YulFunctionCall","src":"1976:18:36"},"nodeType":"YulExpressionStatement","src":"1976:18:36"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"1964:3:36"},{"name":"y_1","nodeType":"YulIdentifier","src":"1969:3:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1961:2:36"},"nodeType":"YulFunctionCall","src":"1961:12:36"},"nodeType":"YulIf","src":"1958:38:36"},{"nodeType":"YulAssignment","src":"2005:21:36","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"2017:3:36"},{"name":"y_1","nodeType":"YulIdentifier","src":"2022:3:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2013:3:36"},"nodeType":"YulFunctionCall","src":"2013:13:36"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"2005:4:36"}]}]},"name":"checked_sub_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1841:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"1844:1:36","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"1850:4:36","type":""}],"src":"1811:221:36"},{"body":{"nodeType":"YulBlock","src":"2083:155:36","statements":[{"nodeType":"YulVariableDeclaration","src":"2093:20:36","value":{"kind":"number","nodeType":"YulLiteral","src":"2103:10:36","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2097:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2122:29:36","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2141:5:36"},{"name":"_1","nodeType":"YulIdentifier","src":"2148:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2137:3:36"},"nodeType":"YulFunctionCall","src":"2137:14:36"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2126:7:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"2179:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2181:16:36"},"nodeType":"YulFunctionCall","src":"2181:18:36"},"nodeType":"YulExpressionStatement","src":"2181:18:36"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2166:7:36"},{"name":"_1","nodeType":"YulIdentifier","src":"2175:2:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2163:2:36"},"nodeType":"YulFunctionCall","src":"2163:15:36"},"nodeType":"YulIf","src":"2160:41:36"},{"nodeType":"YulAssignment","src":"2210:22:36","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2221:7:36"},{"kind":"number","nodeType":"YulLiteral","src":"2230:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2217:3:36"},"nodeType":"YulFunctionCall","src":"2217:15:36"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2210:3:36"}]}]},"name":"increment_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2065:5:36","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2075:3:36","type":""}],"src":"2037:201:36"},{"body":{"nodeType":"YulBlock","src":"2275:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2292:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2299:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2304:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2295:3:36"},"nodeType":"YulFunctionCall","src":"2295:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2285:6:36"},"nodeType":"YulFunctionCall","src":"2285:31:36"},"nodeType":"YulExpressionStatement","src":"2285:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2332:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2335:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2325:6:36"},"nodeType":"YulFunctionCall","src":"2325:15:36"},"nodeType":"YulExpressionStatement","src":"2325:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2356:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2359:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2349:6:36"},"nodeType":"YulFunctionCall","src":"2349:15:36"},"nodeType":"YulExpressionStatement","src":"2349:15:36"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"2243:127:36"},{"body":{"nodeType":"YulBlock","src":"2407:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2424:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2431:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2436:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2427:3:36"},"nodeType":"YulFunctionCall","src":"2427:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2417:6:36"},"nodeType":"YulFunctionCall","src":"2417:31:36"},"nodeType":"YulExpressionStatement","src":"2417:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2464:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2467:4:36","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2457:6:36"},"nodeType":"YulFunctionCall","src":"2457:15:36"},"nodeType":"YulExpressionStatement","src":"2457:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2488:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2491:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2481:6:36"},"nodeType":"YulFunctionCall","src":"2481:15:36"},"nodeType":"YulExpressionStatement","src":"2481:15:36"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"2375:127:36"},{"body":{"nodeType":"YulBlock","src":"2539:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2556:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2563:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2568:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2559:3:36"},"nodeType":"YulFunctionCall","src":"2559:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2549:6:36"},"nodeType":"YulFunctionCall","src":"2549:31:36"},"nodeType":"YulExpressionStatement","src":"2549:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2596:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:36","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2589:6:36"},"nodeType":"YulFunctionCall","src":"2589:15:36"},"nodeType":"YulExpressionStatement","src":"2589:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2620:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2623:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2613:6:36"},"nodeType":"YulFunctionCall","src":"2613:15:36"},"nodeType":"YulExpressionStatement","src":"2613:15:36"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"2507:127:36"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_sub_t_uint32(x, y) -> diff\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function increment_t_uint32(value) -> ret\n    {\n        let _1 := 0xffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c80639f181b5e116100715780639f181b5e14610158578063cd9d4d661461016a578063d26a8d2e14610193578063d4ee1d90146101a6578063f2fde38b146101b9578063f427fdf9146101cc57600080fd5b806338cb066f146100b95780634f64b2be146100ce57806379ba5097146100fe5780638da5cb5b1461010657806390ab3106146101195780639884e8011461012c575b600080fd5b6100cc6100c7366004610751565b6101d2565b005b6100e16100dc366004610791565b6103ff565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc610429565b6000546100e1906001600160a01b031681565b6100e1610127366004610751565b6104a4565b6100e161013a3660046106fc565b6001600160a01b039081166000908152600460205260409020541690565b6005545b6040519081526020016100f5565b61015c6101783660046106fc565b6001600160a01b031660009081526003602052604090205490565b6100cc6101a136600461071e565b61051f565b6001546100e1906001600160a01b031681565b6100cc6101c73660046106fc565b61068c565b4261015c565b6000546001600160a01b031633146101e957600080fd5b816001600160a01b0381166101fd57600080fd5b6001600160a01b03831660009081526003602052604090205463ffffffff83161061022757600080fd5b6001600160a01b0383166000908152600360205260408120805463ffffffff851690811061025757610257610847565b60009182526020822001546001600160a01b031691506102788460016107aa565b90505b6001600160a01b03851660009081526003602052604090205463ffffffff82161015610355576001600160a01b0385166000908152600360205260409020805463ffffffff83169081106102d1576102d1610847565b60009182526020808320909101546001600160a01b038881168452600390925260409092209116906103046001846107d2565b63ffffffff168154811061031a5761031a610847565b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790558061034d816107f7565b91505061027b565b506001600160a01b038416600090815260036020526040902080548061037d5761037d610831565b60008281526020808220600019908401810180546001600160a01b031990811690915593019093556001600160a01b0384811680835260048552604092839020805490941690935590519182528616917fc3b25a6c3b7509edde0f2e6cc317b5820a901fa82ac554709206e1d7237fe29491015b60405180910390a250505050565b6005818154811061040f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b0316331461044057600080fd5b600154600080546040516001600160a01b0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6001600160a01b03821660009081526003602052604081205463ffffffff8316106104d157506000610519565b6001600160a01b0383166000908152600360205260409020805463ffffffff841690811061050157610501610847565b6000918252602090912001546001600160a01b031690505b92915050565b6000546001600160a01b0316331461053657600080fd5b816001600160a01b03811661054a57600080fd5b816001600160a01b03811661055e57600080fd5b6001600160a01b03838116600090815260046020526040902054161561058357600080fd5b6001600160a01b03841660009081526002602052604090205460ff16610607576005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0387169081179091556000908152600260205260409020805460ff191690911790555b6001600160a01b03848116600081815260036020908152604080832080546001810182559084528284200180549589166001600160a01b03199687168117909155808452600483529281902080549095168417909455925190815290917f229aec2ec4b21e700d6daf13a894e7b38c18b844b021f2eee263f04af3ea6f0091016103f1565b6000546001600160a01b031633146106a357600080fd5b6000546001600160a01b03828116911614156106be57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b03811681146106f757600080fd5b919050565b60006020828403121561070e57600080fd5b610717826106e0565b9392505050565b6000806040838503121561073157600080fd5b61073a836106e0565b9150610748602084016106e0565b90509250929050565b6000806040838503121561076457600080fd5b61076d836106e0565b9150602083013563ffffffff8116811461078657600080fd5b809150509250929050565b6000602082840312156107a357600080fd5b5035919050565b600063ffffffff8083168185168083038211156107c9576107c961081b565b01949350505050565b600063ffffffff838116908316818110156107ef576107ef61081b565b039392505050565b600063ffffffff808316818114156108115761081161081b565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d7ee1d86e7402fdc4d138feadaa909cb5e10e44710fe39edf1654149a194a1ea64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F181B5E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xCD9D4D66 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xD26A8D2E EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xF427FDF9 EQ PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38CB066F EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x90AB3106 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x9884E801 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x751 JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x791 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x751 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF5 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST TIMESTAMP PUSH2 0x15C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x257 JUMPI PUSH2 0x257 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x278 DUP5 PUSH1 0x1 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP3 AND LT ISZERO PUSH2 0x355 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP4 AND SWAP1 DUP2 LT PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 AND SWAP1 PUSH2 0x304 PUSH1 0x1 DUP5 PUSH2 0x7D2 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x31A JUMPI PUSH2 0x31A PUSH2 0x847 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x34D DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x37D JUMPI PUSH2 0x37D PUSH2 0x831 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 PUSH1 0x0 NOT SWAP1 DUP5 ADD DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE SWAP4 ADD SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x4 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP5 AND SWAP1 SWAP4 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE DUP7 AND SWAP2 PUSH32 0xC3B25A6C3B7509EDDE0F2E6CC317B5820A901FA82AC554709206E1D7237FE294 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT PUSH2 0x4D1 JUMPI POP PUSH1 0x0 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x501 JUMPI PUSH2 0x501 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x607 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD SWAP6 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP7 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND DUP5 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 SWAP2 PUSH32 0x229AEC2EC4B21E700D6DAF13A894E7B38C18B844B021F2EEE263F04AF3EA6F00 SWAP2 ADD PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73A DUP4 PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x748 PUSH1 0x20 DUP5 ADD PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76D DUP4 PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C9 PUSH2 0x81B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x81B JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xEE SAR DUP7 0xE7 BLOCKHASH 0x2F 0xDC 0x4D SGT DUP16 0xEA 0xDA 0xA9 MULMOD 0xCB 0x5E LT 0xE4 SELFBALANCE LT INVALID CODECOPY 0xED CALL PUSH6 0x4149A194A1EA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"601:4393:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4009:879;;;;;;:::i;:::-;;:::i;:::-;;953:23;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1352:32:36;;;1334:51;;1322:2;1307:18;953:23:19;;;;;;;;905:184:22;;;:::i;93:20::-;;;;;-1:-1:-1;;;;;93:20:22;;;2195:251:19;;;;;;:::i;:::-;;:::i;2682:128::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2772:30:19;;;2745:7;2772:30;;;:18;:30;;;;;;;;2682:128;1473:91;1543:6;:13;1473:91;;;1542:25:36;;;1530:2;1515:18;1473:91:19;1396:177:36;1793:129:19;;;;;;:::i;:::-;-1:-1:-1;;;;;1881:26:19;1854:7;1881:26;;;:18;:26;;;;;:33;;1793:129;3059:617;;;;;;:::i;:::-;;:::i;119:23:22:-;;;;;-1:-1:-1;;;;;119:23:22;;;680:139;;;;;;:::i;:::-;;:::i;4896:95:19:-;4968:15;4896:95;;4009:879;425:5:22;;-1:-1:-1;;;;;425:5:22;411:10;:19;403:28;;;;;;4124:6:19;-1:-1:-1;;;;;434:22:23;::::1;426:31;;;::::0;::::1;;-1:-1:-1::0;;;;;4160:26:19;::::2;;::::0;;;:18:::2;:26;::::0;;;;:33;4151:42:::2;::::0;::::2;;4143:51;;;::::0;::::2;;-1:-1:-1::0;;;;;4227:26:19;::::2;4207:17;4227:26:::0;;;:18:::2;:26;::::0;;;;:34;;::::2;::::0;::::2;::::0;;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;::::2;::::0;-1:-1:-1;;;;;4227:34:19::2;::::0;-1:-1:-1;4359:10:19::2;:6:::0;4227:34;4359:10:::2;:::i;:::-;4348:21;;4329:214;-1:-1:-1::0;;;;;4388:26:19;::::2;;::::0;;;:18:::2;:26;::::0;;;;:33;4384:37:::2;::::0;::::2;;4329:214;;;-1:-1:-1::0;;;;;4502:26:19;::::2;;::::0;;;:18:::2;:26;::::0;;;;:29;;::::2;::::0;::::2;::::0;;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;;::::2;::::0;-1:-1:-1;;;;;4466:26:19;;::::2;::::0;;:18:::2;:26:::0;;;;;;;4502:29;::::2;::::0;4493:5:::2;4502:29:::0;4493:1;:5:::2;:::i;:::-;4466:33;;;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;:65:::0;;-1:-1:-1;;;;;;4466:65:19::2;-1:-1:-1::0;;;;;4466:65:19;;;::::2;::::0;;;::::2;::::0;;4436:3;::::2;::::0;::::2;:::i;:::-;;;;4329:214;;;-1:-1:-1::0;;;;;;4628:26:19;::::2;;::::0;;;:18:::2;:26;::::0;;;;:32;;;::::2;;;;:::i;:::-;;::::0;;;::::2;::::0;;;-1:-1:-1;;4628:32:19;;;;;;;-1:-1:-1;;;;;;4628:32:19;;::::2;::::0;;;;;;;;-1:-1:-1;;;;;4749:29:19;;::::2;::::0;;;:18:::2;:29:::0;;;;;;;4742:36;;;;::::2;::::0;;;4845:35;;1334:51:36;;;4845:35:19;::::2;::::0;::::2;::::0;1307:18:36;4845:35:19::2;;;;;;;;4132:756;441:1:22::1;4009:879:19::0;;:::o;953:23::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;953:23:19;;-1:-1:-1;953:23:19;:::o;905:184:22:-;973:8;;-1:-1:-1;;;;;973:8:22;959:10;:22;951:31;;;;;;1016:8;;;1009:5;;997:28;;-1:-1:-1;;;;;1016:8:22;;;;1009:5;;;;997:28;;;1043:8;;;;1035:16;;-1:-1:-1;;;;;;1035:16:22;;;-1:-1:-1;;;;;1043:8:22;;1035:16;;;;1061:21;;;905:184::o;2195:251:19:-;-1:-1:-1;;;;;2332:26:19;;2298:7;2332:26;;;:18;:26;;;;;:33;2322:43;;;;2318:66;;-1:-1:-1;2382:1:19;2367:17;;2318:66;-1:-1:-1;;;;;2404:26:19;;;;;;:18;:26;;;;;:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2404:34:19;;-1:-1:-1;2195:251:19;;;;;:::o;3059:617::-;425:5:22;;-1:-1:-1;;;;;425:5:22;411:10;:19;403:28;;;;;;3177:6:19;-1:-1:-1;;;;;434:22:23;::::1;426:31;;;::::0;::::1;;3198:10:19::0;-1:-1:-1;;;;;434:22:23;::::2;426:31;;;::::0;::::2;;-1:-1:-1::0;;;;;3229:30:19;;::::3;3271:1;3229:30:::0;;;:18:::3;:30;::::0;;;;;::::3;:44:::0;3221:53:::3;;;::::0;::::3;;-1:-1:-1::0;;;;;3340:24:19;::::3;;::::0;;;:16:::3;:24;::::0;;;;;::::3;;3335:123;;3381:6;:19:::0;;::::3;::::0;;::::3;::::0;;;;::::3;::::0;;-1:-1:-1;;;;;;3381:19:19::3;-1:-1:-1::0;;;;;3381:19:19;::::3;::::0;;::::3;::::0;;;-1:-1:-1;3415:24:19;;;:16:::3;3381:19;3415:24:::0;;;;:31;;-1:-1:-1;;3415:31:19::3;::::0;;::::3;::::0;;3335:123:::3;-1:-1:-1::0;;;;;3470:26:19;;::::3;;::::0;;;:18:::3;:26;::::0;;;;;;;:43;;::::3;::::0;::::3;::::0;;;;;;;;::::3;::::0;;;;::::3;-1:-1:-1::0;;;;;;3470:43:19;;::::3;::::0;::::3;::::0;;;3524:30;;;:18:::3;:30:::0;;;;;;:39;;;;::::3;::::0;::::3;::::0;;;3631:37;;1334:51:36;;;3470:26:19;;3631:37:::3;::::0;1307:18:36;3631:37:19::3;1188:203:36::0;680:139:22;425:5;;-1:-1:-1;;;;;425:5:22;411:10;:19;403:28;;;;;;776:5:::1;::::0;-1:-1:-1;;;;;763:18:22;;::::1;776:5:::0;::::1;763:18;;755:27;;;::::0;::::1;;792:8;:20:::0;;-1:-1:-1;;;;;;792:20:22::1;-1:-1:-1::0;;;;;792:20:22;;;::::1;::::0;;;::::1;::::0;;680:139::o;14:173:36:-;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:36:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:350::-;715:6;723;776:2;764:9;755:7;751:23;747:32;744:52;;;792:1;789;782:12;744:52;815:29;834:9;815:29;:::i;:::-;805:39;;894:2;883:9;879:18;866:32;938:10;931:5;927:22;920:5;917:33;907:61;;964:1;961;954:12;907:61;987:5;977:15;;;648:350;;;;;:::o;1003:180::-;1062:6;1115:2;1103:9;1094:7;1090:23;1086:32;1083:52;;;1131:1;1128;1121:12;1083:52;-1:-1:-1;1154:23:36;;1003:180;-1:-1:-1;1003:180:36:o;1578:228::-;1617:3;1645:10;1682:2;1679:1;1675:10;1712:2;1709:1;1705:10;1743:3;1739:2;1735:12;1730:3;1727:21;1724:47;;;1751:18;;:::i;:::-;1787:13;;1578:228;-1:-1:-1;;;;1578:228:36:o;1811:221::-;1850:4;1879:10;1939;;;;1909;;1961:12;;;1958:38;;;1976:18;;:::i;:::-;2013:13;;1811:221;-1:-1:-1;;;1811:221:36:o;2037:201::-;2075:3;2103:10;2148:2;2141:5;2137:14;2175:2;2166:7;2163:15;2160:41;;;2181:18;;:::i;:::-;2230:1;2217:15;;2037:201;-1:-1:-1;;;2037:201:36:o;2243:127::-;2304:10;2299:3;2295:20;2292:1;2285:31;2335:4;2332:1;2325:15;2359:4;2356:1;2349:15;2375:127;2436:10;2431:3;2427:20;2424:1;2417:31;2467:4;2464:1;2457:15;2491:4;2488:1;2481:15;2507:127;2568:10;2563:3;2559:20;2556:1;2549:31;2599:4;2596:1;2589:15;2623:4;2620:1;2613:15"},"gasEstimates":{"creation":{"codeDepositCost":"439000","executionCost":"24709","totalCost":"463709"},"external":{"acceptOwnership()":"56564","blockStamp()":"301","converterAddress(address,uint32)":"7153","converterCount(address)":"2559","newOwner()":"2392","owner()":"2393","registerConverter(address,address)":"infinite","tokenAddress(address)":"2667","tokenCount()":"2281","tokens(uint256)":"4626","transferOwnership(address)":"28952","unregisterConverter(address,uint32)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","blockStamp()":"f427fdf9","converterAddress(address,uint32)":"90ab3106","converterCount(address)":"cd9d4d66","newOwner()":"d4ee1d90","owner()":"8da5cb5b","registerConverter(address,address)":"d26a8d2e","tokenAddress(address)":"9884e801","tokenCount()":"9f181b5e","tokens(uint256)":"4f64b2be","transferOwnership(address)":"f2fde38b","unregisterConverter(address,uint32)":"38cb066f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"ConverterAddition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"ConverterRemoval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_index\",\"type\":\"uint32\"}],\"name\":\"converterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"converterCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_converter\",\"type\":\"address\"}],\"name\":\"registerConverter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_converter\",\"type\":\"address\"}],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_index\",\"type\":\"uint32\"}],\"name\":\"unregisterConverter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\"},\"constructor\":{\"details\":\"constructor\"},\"converterAddress(address,uint32)\":{\"details\":\"returns the converter address associated with the given token or zero address if no such converter exists\",\"params\":{\"_index\":\"converter index\",\"_token\":\"token address\"},\"returns\":{\"_0\":\"converter address\"}},\"converterCount(address)\":{\"details\":\"returns the number of converters associated with the given token or 0 if the token isn't registered\",\"params\":{\"_token\":\"token address\"},\"returns\":{\"_0\":\"number of converters\"}},\"registerConverter(address,address)\":{\"details\":\"adds a new converter address for a given token to the registry throws if the converter is already registered\",\"params\":{\"_converter\":\"converter address\",\"_token\":\"token address\"}},\"tokenAddress(address)\":{\"details\":\"returns the token address associated with the given converter or zero address if no such converter exists\",\"params\":{\"_converter\":\"converter address\"},\"returns\":{\"_0\":\"token address\"}},\"tokenCount()\":{\"details\":\"returns the number of tokens in the registry\",\"returns\":{\"_0\":\"number of tokens\"}},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner\",\"params\":{\"_newOwner\":\"new contract owner\"}},\"unregisterConverter(address,uint32)\":{\"details\":\"removes an existing converter from the registry note that the function doesn't scale and might be needed to be called multiple times when removing an older converter from a large converter list\",\"params\":{\"_index\":\"converter index\",\"_token\":\"token address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Bancor Converter Registry The bancor converter registry keeps converter addresses by token addresses and vice versa. The owner can update converter addresses so that a the token address always points to the updated list of converters for each token. The contract also allows to iterate through all the tokens in the network. Note that converter addresses for each token are returned in ascending order (from oldest to latest).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/BancorConverterRegistry.sol\":\"BancorConverterRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/BancorConverterRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\r\\n\\r\\npragma solidity >=0.8.4;\\r\\n\\r\\nimport \\\"./Owned.sol\\\";\\r\\nimport \\\"./Utils.sol\\\";\\r\\n\\r\\n/**\\r\\n    Bancor Converter Registry\\r\\n\\r\\n    The bancor converter registry keeps converter addresses by token addresses and vice versa.\\r\\n    The owner can update converter addresses so that a the token address always points to\\r\\n    the updated list of converters for each token.\\r\\n\\r\\n    The contract also allows to iterate through all the tokens in the network.\\r\\n\\r\\n    Note that converter addresses for each token are returned in ascending order (from oldest\\r\\n    to latest).\\r\\n*/\\r\\ncontract BancorConverterRegistry is Owned, Utils {\\r\\n    mapping(address => bool) private tokensRegistered; // token address -> registered or not\\r\\n    mapping(address => address[]) private tokensToConverters; // token address -> converter addresses\\r\\n    mapping(address => address) private convertersToTokens; // converter address -> token address\\r\\n    address[] public tokens; // list of all token addresses\\r\\n\\r\\n    // triggered when a converter is added to the registry\\r\\n    event ConverterAddition(address indexed _token, address _address);\\r\\n\\r\\n    // triggered when a converter is removed from the registry\\r\\n    event ConverterRemoval(address indexed _token, address _address);\\r\\n\\r\\n    /**\\r\\n        @dev constructor\\r\\n    */\\r\\n    constructor() public {}\\r\\n\\r\\n    /**\\r\\n        @dev returns the number of tokens in the registry\\r\\n\\r\\n        @return number of tokens\\r\\n    */\\r\\n    function tokenCount() public view returns (uint256) {\\r\\n        return tokens.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev returns the number of converters associated with the given token\\r\\n        or 0 if the token isn't registered\\r\\n\\r\\n        @param _token   token address\\r\\n\\r\\n        @return number of converters\\r\\n    */\\r\\n    function converterCount(address _token) public view returns (uint256) {\\r\\n        return tokensToConverters[_token].length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev returns the converter address associated with the given token\\r\\n        or zero address if no such converter exists\\r\\n\\r\\n        @param _token   token address\\r\\n        @param _index   converter index\\r\\n\\r\\n        @return converter address\\r\\n    */\\r\\n    function converterAddress(\\r\\n        address _token,\\r\\n        uint32 _index\\r\\n    ) public view returns (address) {\\r\\n        if (_index >= tokensToConverters[_token].length) return address(0);\\r\\n\\r\\n        return tokensToConverters[_token][_index];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev returns the token address associated with the given converter\\r\\n        or zero address if no such converter exists\\r\\n\\r\\n        @param _converter   converter address\\r\\n\\r\\n        @return token address\\r\\n    */\\r\\n    function tokenAddress(address _converter) public view returns (address) {\\r\\n        return convertersToTokens[_converter];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev adds a new converter address for a given token to the registry\\r\\n        throws if the converter is already registered\\r\\n\\r\\n        @param _token       token address\\r\\n        @param _converter   converter address\\r\\n    */\\r\\n    function registerConverter(\\r\\n        address _token,\\r\\n        address _converter\\r\\n    ) public ownerOnly validAddress(_token) validAddress(_converter) {\\r\\n        require(convertersToTokens[_converter] == address(0));\\r\\n\\r\\n        // add the token to the list of tokens\\r\\n        if (!tokensRegistered[_token]) {\\r\\n            tokens.push(_token);\\r\\n            tokensRegistered[_token] = true;\\r\\n        }\\r\\n\\r\\n        tokensToConverters[_token].push(_converter);\\r\\n        convertersToTokens[_converter] = _token;\\r\\n\\r\\n        // dispatch the converter addition event\\r\\n        emit ConverterAddition(_token, _converter);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev removes an existing converter from the registry\\r\\n        note that the function doesn't scale and might be needed to be called\\r\\n        multiple times when removing an older converter from a large converter list\\r\\n\\r\\n        @param _token   token address\\r\\n        @param _index   converter index\\r\\n    */\\r\\n    function unregisterConverter(\\r\\n        address _token,\\r\\n        uint32 _index\\r\\n    ) public ownerOnly validAddress(_token) {\\r\\n        require(_index < tokensToConverters[_token].length);\\r\\n\\r\\n        address converter = tokensToConverters[_token][_index];\\r\\n\\r\\n        // move all newer converters 1 position lower\\r\\n        for (\\r\\n            uint32 i = _index + 1;\\r\\n            i < tokensToConverters[_token].length;\\r\\n            i++\\r\\n        ) {\\r\\n            tokensToConverters[_token][i - 1] = tokensToConverters[_token][i];\\r\\n        }\\r\\n\\r\\n        // decrease the number of converters defined for the token by 1\\r\\n        tokensToConverters[_token].pop();\\r\\n\\r\\n        // removes the converter from the converters -> tokens list\\r\\n        delete convertersToTokens[converter];\\r\\n\\r\\n        // dispatch the converter removal event\\r\\n        emit ConverterRemoval(_token, converter);\\r\\n    }\\r\\n\\r\\n    function blockStamp() external view returns (uint256) {\\r\\n        return block.timestamp;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1087598857f6df7c102d5686925f64acd6391111292022111d343c83e7799763\",\"license\":\"GPL-2.0-or-later\"},\"contracts/base/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity >=0.8.4;\\n\\ncontract Owned {\\n    address public owner;\\n    address public newOwner;\\n\\n    event OwnerUpdate(address indexed _prevOwner, address indexed _newOwner);\\n\\n    /**\\n        @dev constructor\\n    */\\n    constructor() public {\\n        owner = msg.sender;\\n    }\\n\\n    // allows execution by the owner only\\n    modifier ownerOnly() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n        @dev allows transferring the contract ownership\\n        the new owner still needs to accept the transfer\\n        can only be called by the contract owner\\n\\n        @param _newOwner    new contract owner\\n    */\\n    function transferOwnership(address _newOwner) external ownerOnly {\\n        require(_newOwner != owner);\\n        newOwner = _newOwner;\\n    }\\n\\n    /**\\n        @dev used by a new owner to accept an ownership transfer\\n    */\\n    function acceptOwnership() external {\\n        require(msg.sender == newOwner);\\n        emit OwnerUpdate(owner, newOwner);\\n        owner = newOwner;\\n        newOwner = address(0);\\n    }\\n}\\n\",\"keccak256\":\"0x1c385eb7e54f859b905be6f337bffe52b545d27ec4c4dfe7ad91a886010473d3\",\"license\":\"GPL-2.0-or-later\"},\"contracts/base/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity >=0.8.4;\\n\\ncontract Utils {\\n    /**\\n        constructor\\n    */\\n    constructor() public {}\\n\\n    // verifies that an amount is greater than zero\\n    modifier greaterThanZero(uint256 _amount) {\\n        require(_amount > 0);\\n        _;\\n    }\\n\\n    // validates an address - currently only checks that it isn't null\\n    modifier validAddress(address _address) {\\n        require(_address != address(0));\\n        _;\\n    }\\n\\n    // verifies that the address is different than this contract address\\n    modifier notThis(address _address) {\\n        require(_address != address(this));\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xeea46f69a9ab7625fc4460a447fe18326372513fc523d112e383c5ed825fc5da\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3030,"contract":"contracts/base/BancorConverterRegistry.sol:BancorConverterRegistry","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":3032,"contract":"contracts/base/BancorConverterRegistry.sol:BancorConverterRegistry","label":"newOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2445,"contract":"contracts/base/BancorConverterRegistry.sol:BancorConverterRegistry","label":"tokensRegistered","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"},{"astId":2450,"contract":"contracts/base/BancorConverterRegistry.sol:BancorConverterRegistry","label":"tokensToConverters","offset":0,"slot":"3","type":"t_mapping(t_address,t_array(t_address)dyn_storage)"},{"astId":2454,"contract":"contracts/base/BancorConverterRegistry.sol:BancorConverterRegistry","label":"convertersToTokens","offset":0,"slot":"4","type":"t_mapping(t_address,t_address)"},{"astId":2457,"contract":"contracts/base/BancorConverterRegistry.sol:BancorConverterRegistry","label":"tokens","offset":0,"slot":"5","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"}}},"userdoc":{"kind":"user","methods":{},"notice":"Bancor Converter Registry The bancor converter registry keeps converter addresses by token addresses and vice versa. The owner can update converter addresses so that a the token address always points to the updated list of converters for each token. The contract also allows to iterate through all the tokens in the network. Note that converter addresses for each token are returned in ascending order (from oldest to latest).","version":1}}},"contracts/base/Lockable.sol":{"Lockable":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60806040526001600055348015601457600080fd5b50603f8060226000396000f3fe6080604052600080fdfea26469706673582212207dd65b1247140204264b4dafd8ae3dfd8cd235677bf83980a53fc4648d0ac53064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x22 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xD65B1247140204264B4DAFD8AE3DFD8CD235677BF83980A53FC4648D0AC5 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"72:191:20:-:0;;;123:1;96:28;;72:191;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212207dd65b1247140204264b4dafd8ae3dfd8cd235677bf83980a53fc4648d0ac53064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xD65B1247140204264B4DAFD8AE3DFD8CD235677BF83980A53FC4648D0AC5 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"72:191:20:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"22172","totalCost":"34772"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Lockable.sol\":\"Lockable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Lockable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity >=0.8.4;\\n\\ncontract Lockable {\\n    uint256 private unlocked = 1;\\n\\n    modifier lock() {\\n        require(unlocked == 1, \\\"Lockable: LOCKED\\\");\\n        unlocked = 0;\\n        _;\\n        unlocked = 1;\\n    }\\n}\\n\",\"keccak256\":\"0xa103cfec99cd1081a90adba2f08eb0c4c7234453f14da6112becc0f442f83edb\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2697,"contract":"contracts/base/Lockable.sol:Lockable","label":"unlocked","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/base/Multicall.sol":{"Multicall":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall.Call[]","name":"_calls","type":"tuple[]"}],"name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall.Call[]","name":"_calls","type":"tuple[]"}],"name":"blockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall.Call[]","name":"_calls","type":"tuple[]"}],"name":"tryAggregate","outputs":[{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall.Call[]","name":"_calls","type":"tuple[]"}],"name":"tryBlockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506109d6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806372425d9d1161007157806372425d9d1461013a57806386d516e814610140578063a8b0574e14610146578063bce38bd714610154578063c3077fa914610174578063ee82ac5e1461018757600080fd5b80630f28c97d146100b9578063252dba42146100ce57806327e86d6e146100ef578063399542e9146100f757806342cbb15c146101195780634d2301cc1461011f575b600080fd5b425b6040519081526020015b60405180910390f35b6100e16100dc36600461069c565b610199565b6040516100c5929190610810565b6100bb610321565b61010a6101053660046106d9565b610334565b6040516100c59392919061087a565b436100bb565b6100bb61012d36600461067a565b6001600160a01b03163190565b446100bb565b456100bb565b6040514181526020016100c5565b6101676101623660046106d9565b61034c565b6040516100c591906107fd565b61010a61018236600461069c565b610506565b6100bb61019536600461072e565b4090565b8051439060609067ffffffffffffffff8111156101b8576101b861098a565b6040519080825280602002602001820160405280156101eb57816020015b60608152602001906001900390816101d65790505b50905060005b835181101561031b5760008085838151811061020f5761020f610974565b6020026020010151600001516001600160a01b031686848151811061023657610236610974565b60200260200101516020015160405161024f91906107e1565b6000604051808303816000865af19150503d806000811461028c576040519150601f19603f3d011682016040523d82523d6000602084013e610291565b606091505b5091509150816102e85760405162461bcd60e51b815260206004820181905260248201527f4d756c746963616c6c206167677265676174653a2063616c6c206661696c656460448201526064015b60405180910390fd5b808484815181106102fb576102fb610974565b60200260200101819052505050808061031390610943565b9150506101f1565b50915091565b600061032e6001436108fc565b40905090565b4380406060610343858561034c565b90509250925092565b6060815167ffffffffffffffff8111156103685761036861098a565b6040519080825280602002602001820160405280156103ae57816020015b6040805180820190915260008152606060208201528152602001906001900390816103865790505b50905060005b82518110156104ff576000808483815181106103d2576103d2610974565b6020026020010151600001516001600160a01b03168584815181106103f9576103f9610974565b60200260200101516020015160405161041291906107e1565b6000604051808303816000865af19150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b509150915085156104b657816104b65760405162461bcd60e51b815260206004820152602160248201527f4d756c746963616c6c32206167677265676174653a2063616c6c206661696c656044820152601960fa1b60648201526084016102df565b60405180604001604052808315158152602001828152508484815181106104df576104df610974565b6020026020010181905250505080806104f790610943565b9150506103b4565b5092915050565b6000806060610516600185610334565b9196909550909350915050565b80356001600160a01b038116811461053a57600080fd5b919050565b600082601f83011261055057600080fd5b8135602067ffffffffffffffff8083111561056d5761056d61098a565b8260051b61057c8382016108cb565b8481528381019087850183890186018a101561059757600080fd5b600093505b8684101561066d578035858111156105b357600080fd5b89016040601f19828d0381018213156105cb57600080fd5b6105d36108a2565b6105de8a8501610523565b815282840135898111156105f157600080fd5b8085019450508d603f85011261060657600080fd5b898401358981111561061a5761061a61098a565b61062a8b84601f840116016108cb565b92508083528e8482870101111561064057600080fd5b808486018c85013760009083018b0152808a0191909152855250506001939093019291850191850161059c565b5098975050505050505050565b60006020828403121561068c57600080fd5b61069582610523565b9392505050565b6000602082840312156106ae57600080fd5b813567ffffffffffffffff8111156106c557600080fd5b6106d18482850161053f565b949350505050565b600080604083850312156106ec57600080fd5b823580151581146106fc57600080fd5b9150602083013567ffffffffffffffff81111561071857600080fd5b6107248582860161053f565b9150509250929050565b60006020828403121561074057600080fd5b5035919050565b600082825180855260208086019550808260051b84010181860160005b848110156107a857858303601f1901895281518051151584528401516040858501819052610794818601836107b5565b9a86019a9450505090830190600101610764565b5090979650505050505050565b600081518084526107cd816020860160208601610913565b601f01601f19169290920160200192915050565b600082516107f3818460208701610913565b9190910192915050565b6020815260006106956020830184610747565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b8281101561086c57605f1988870301845261085a8683516107b5565b9550928401929084019060010161083e565b509398975050505050505050565b8381528260208201526060604082015260006108996060830184610747565b95945050505050565b6040805190810167ffffffffffffffff811182821017156108c5576108c561098a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108f4576108f461098a565b604052919050565b60008282101561090e5761090e61095e565b500390565b60005b8381101561092e578181015183820152602001610916565b8381111561093d576000848401525b50505050565b60006000198214156109575761095761095e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b7a462e6e9d6826e74e6e8448de434552dbb3d1717810d91606df1f2c25ba00464736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72425D9D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x72425D9D EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x86D516E8 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xA8B0574E EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xBCE38BD7 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xC3077FA9 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xEE82AC5E EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF28C97D EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x252DBA42 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x27E86D6E EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x399542E9 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x42CBB15C EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x4D2301CC EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP3 SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x321 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x105 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST NUMBER PUSH2 0xBB JUMP JUMPDEST PUSH2 0xBB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST DIFFICULTY PUSH2 0xBB JUMP JUMPDEST GASLIMIT PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD COINBASE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x167 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x10A PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x72E JUMP JUMPDEST BLOCKHASH SWAP1 JUMP JUMPDEST DUP1 MLOAD NUMBER SWAP1 PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B8 JUMPI PUSH2 0x1B8 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x20F JUMPI PUSH2 0x20F PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x236 JUMPI PUSH2 0x236 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x291 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C746963616C6C206167677265676174653A2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2FB JUMPI PUSH2 0x2FB PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x313 SWAP1 PUSH2 0x943 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F1 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E PUSH1 0x1 NUMBER PUSH2 0x8FC JUMP JUMPDEST BLOCKHASH SWAP1 POP SWAP1 JUMP JUMPDEST NUMBER DUP1 BLOCKHASH PUSH1 0x60 PUSH2 0x343 DUP6 DUP6 PUSH2 0x34C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x368 JUMPI PUSH2 0x368 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3AE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x386 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3F9 JUMPI PUSH2 0x3F9 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x44F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x454 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP6 ISZERO PUSH2 0x4B6 JUMPI DUP2 PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C746963616C6C32206167677265676174653A2063616C6C206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4DF JUMPI PUSH2 0x4DF PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x4F7 SWAP1 PUSH2 0x943 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B4 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH2 0x516 PUSH1 0x1 DUP6 PUSH2 0x334 JUMP JUMPDEST SWAP2 SWAP7 SWAP1 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x56D JUMPI PUSH2 0x56D PUSH2 0x98A JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH2 0x57C DUP4 DUP3 ADD PUSH2 0x8CB JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP8 DUP6 ADD DUP4 DUP10 ADD DUP7 ADD DUP11 LT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP7 DUP5 LT ISZERO PUSH2 0x66D JUMPI DUP1 CALLDATALOAD DUP6 DUP2 GT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 ADD PUSH1 0x40 PUSH1 0x1F NOT DUP3 DUP14 SUB DUP2 ADD DUP3 SGT ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D3 PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x5DE DUP11 DUP6 ADD PUSH2 0x523 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP5 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP6 ADD SWAP5 POP POP DUP14 PUSH1 0x3F DUP6 ADD SLT PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 DUP5 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0x61A JUMPI PUSH2 0x61A PUSH2 0x98A JUMP JUMPDEST PUSH2 0x62A DUP12 DUP5 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x8CB JUMP JUMPDEST SWAP3 POP DUP1 DUP4 MSTORE DUP15 DUP5 DUP3 DUP8 ADD ADD GT ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP7 ADD DUP13 DUP6 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP4 ADD DUP12 ADD MSTORE DUP1 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MSTORE POP POP PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x59C JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x695 DUP3 PUSH2 0x523 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D1 DUP5 DUP3 DUP6 ADD PUSH2 0x53F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x724 DUP6 DUP3 DUP7 ADD PUSH2 0x53F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD DUP2 DUP7 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7A8 JUMPI DUP6 DUP4 SUB PUSH1 0x1F NOT ADD DUP10 MSTORE DUP2 MLOAD DUP1 MLOAD ISZERO ISZERO DUP5 MSTORE DUP5 ADD MLOAD PUSH1 0x40 DUP6 DUP6 ADD DUP2 SWAP1 MSTORE PUSH2 0x794 DUP2 DUP7 ADD DUP4 PUSH2 0x7B5 JUMP JUMPDEST SWAP11 DUP7 ADD SWAP11 SWAP5 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x764 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x7CD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x7F3 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x913 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x695 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP3 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x86C JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP5 MSTORE PUSH2 0x85A DUP7 DUP4 MLOAD PUSH2 0x7B5 JUMP JUMPDEST SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x83E JUMP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x899 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x747 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8C5 JUMPI PUSH2 0x8C5 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8F4 JUMPI PUSH2 0x8F4 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x90E JUMPI PUSH2 0x90E PUSH2 0x95E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x92E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x916 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x957 JUMPI PUSH2 0x957 PUSH2 0x95E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 LOG4 PUSH3 0xE6E9D6 DUP3 PUSH15 0x74E6E8448DE434552DBB3D1717810D SWAP2 PUSH1 0x6D CALL CALLCODE 0xC2 JUMPDEST LOG0 DIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"91:3057:21:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@aggregate_2796":{"entryPoint":409,"id":2796,"parameterSlots":1,"returnSlots":2},"@blockAndAggregate_2822":{"entryPoint":1286,"id":2822,"parameterSlots":1,"returnSlots":3},"@getBlockHash_2836":{"entryPoint":null,"id":2836,"parameterSlots":1,"returnSlots":1},"@getBlockNumber_2847":{"entryPoint":null,"id":2847,"parameterSlots":0,"returnSlots":1},"@getCurrentBlockCoinbase_2858":{"entryPoint":null,"id":2858,"parameterSlots":0,"returnSlots":1},"@getCurrentBlockDifficulty_2869":{"entryPoint":null,"id":2869,"parameterSlots":0,"returnSlots":1},"@getCurrentBlockGasLimit_2880":{"entryPoint":null,"id":2880,"parameterSlots":0,"returnSlots":1},"@getCurrentBlockTimestamp_2891":{"entryPoint":null,"id":2891,"parameterSlots":0,"returnSlots":1},"@getEthBalance_2904":{"entryPoint":null,"id":2904,"parameterSlots":1,"returnSlots":1},"@getLastBlockHash_2919":{"entryPoint":801,"id":2919,"parameterSlots":0,"returnSlots":1},"@tryAggregate_2988":{"entryPoint":844,"id":2988,"parameterSlots":2,"returnSlots":1},"@tryBlockAndAggregate_3025":{"entryPoint":820,"id":3025,"parameterSlots":2,"returnSlots":3},"abi_decode_address":{"entryPoint":1315,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_struct_Call_dyn":{"entryPoint":1343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_boolt_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr":{"entryPoint":1753,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Result_dyn":{"entryPoint":1863,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":1973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2045,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bd97bfad63caef51f3372eed9dcabcf122404ebbb470c4fd9b09fcde78ebd3cf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f00f29c42686fd9baf65b5bd8fa63c642ded98b2f947cb8aeb6a004fb9f654ec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2064,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes32_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_bytes32_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2170,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":2251,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_1595":{"entryPoint":2210,"id":null,"parameterSlots":0,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2300,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2323,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":2371,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2398,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2420,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2442,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9045:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:36","statements":[{"nodeType":"YulAssignment","src":"73:29:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:36"},"nodeType":"YulFunctionCall","src":"82:20:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:36"}]},{"body":{"nodeType":"YulBlock","src":"165:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:36"},"nodeType":"YulFunctionCall","src":"167:12:36"},"nodeType":"YulExpressionStatement","src":"167:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:36"},"nodeType":"YulFunctionCall","src":"146:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:36"},"nodeType":"YulFunctionCall","src":"142:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:36"},"nodeType":"YulFunctionCall","src":"131:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:36"},"nodeType":"YulFunctionCall","src":"121:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:36"},"nodeType":"YulFunctionCall","src":"114:50:36"},"nodeType":"YulIf","src":"111:70:36"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:36","type":""}],"src":"14:173:36"},{"body":{"nodeType":"YulBlock","src":"260:1668:36","statements":[{"body":{"nodeType":"YulBlock","src":"309:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"318:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"321:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"311:6:36"},"nodeType":"YulFunctionCall","src":"311:12:36"},"nodeType":"YulExpressionStatement","src":"311:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"288:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"296:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"284:3:36"},"nodeType":"YulFunctionCall","src":"284:17:36"},{"name":"end","nodeType":"YulIdentifier","src":"303:3:36"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"280:3:36"},"nodeType":"YulFunctionCall","src":"280:27:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"273:6:36"},"nodeType":"YulFunctionCall","src":"273:35:36"},"nodeType":"YulIf","src":"270:55:36"},{"nodeType":"YulVariableDeclaration","src":"334:30:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"357:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"344:12:36"},"nodeType":"YulFunctionCall","src":"344:20:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"338:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"373:14:36","value":{"kind":"number","nodeType":"YulLiteral","src":"383:4:36","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"377:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"396:28:36","value":{"kind":"number","nodeType":"YulLiteral","src":"406:18:36","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"400:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"447:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"449:16:36"},"nodeType":"YulFunctionCall","src":"449:18:36"},"nodeType":"YulExpressionStatement","src":"449:18:36"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"439:2:36"},{"name":"_3","nodeType":"YulIdentifier","src":"443:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"436:2:36"},"nodeType":"YulFunctionCall","src":"436:10:36"},"nodeType":"YulIf","src":"433:36:36"},{"nodeType":"YulVariableDeclaration","src":"478:20:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"492:1:36","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"495:2:36"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"488:3:36"},"nodeType":"YulFunctionCall","src":"488:10:36"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"482:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"507:39:36","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"538:2:36"},{"name":"_2","nodeType":"YulIdentifier","src":"542:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"534:3:36"},"nodeType":"YulFunctionCall","src":"534:11:36"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"518:15:36"},"nodeType":"YulFunctionCall","src":"518:28:36"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"511:3:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"555:16:36","value":{"name":"dst","nodeType":"YulIdentifier","src":"568:3:36"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"559:5:36","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"587:3:36"},{"name":"_1","nodeType":"YulIdentifier","src":"592:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"580:6:36"},"nodeType":"YulFunctionCall","src":"580:15:36"},"nodeType":"YulExpressionStatement","src":"580:15:36"},{"nodeType":"YulAssignment","src":"604:19:36","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"615:3:36"},{"name":"_2","nodeType":"YulIdentifier","src":"620:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:36"},"nodeType":"YulFunctionCall","src":"611:12:36"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"604:3:36"}]},{"nodeType":"YulVariableDeclaration","src":"632:26:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"647:6:36"},{"name":"_2","nodeType":"YulIdentifier","src":"655:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"643:3:36"},"nodeType":"YulFunctionCall","src":"643:15:36"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"636:3:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"704:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"713:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"716:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"706:6:36"},"nodeType":"YulFunctionCall","src":"706:12:36"},"nodeType":"YulExpressionStatement","src":"706:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"681:6:36"},{"name":"_4","nodeType":"YulIdentifier","src":"689:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"677:3:36"},"nodeType":"YulFunctionCall","src":"677:15:36"},{"name":"_2","nodeType":"YulIdentifier","src":"694:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"673:3:36"},"nodeType":"YulFunctionCall","src":"673:24:36"},{"name":"end","nodeType":"YulIdentifier","src":"699:3:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"670:2:36"},"nodeType":"YulFunctionCall","src":"670:33:36"},"nodeType":"YulIf","src":"667:53:36"},{"nodeType":"YulVariableDeclaration","src":"729:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"738:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"733:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"793:1106:36","statements":[{"nodeType":"YulVariableDeclaration","src":"807:36:36","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"839:3:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"826:12:36"},"nodeType":"YulFunctionCall","src":"826:17:36"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"811:11:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"879:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"888:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"891:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"881:6:36"},"nodeType":"YulFunctionCall","src":"881:12:36"},"nodeType":"YulExpressionStatement","src":"881:12:36"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"862:11:36"},{"name":"_3","nodeType":"YulIdentifier","src":"875:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"859:2:36"},"nodeType":"YulFunctionCall","src":"859:19:36"},"nodeType":"YulIf","src":"856:39:36"},{"nodeType":"YulVariableDeclaration","src":"908:34:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"922:6:36"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"930:11:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"918:3:36"},"nodeType":"YulFunctionCall","src":"918:24:36"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"912:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"955:14:36","value":{"kind":"number","nodeType":"YulLiteral","src":"965:4:36","type":"","value":"0x40"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"959:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"982:17:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"996:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"992:3:36"},"nodeType":"YulFunctionCall","src":"992:7:36"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"986:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1046:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1055:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1058:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1048:6:36"},"nodeType":"YulFunctionCall","src":"1048:12:36"},"nodeType":"YulExpressionStatement","src":"1048:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1027:3:36"},{"name":"_5","nodeType":"YulIdentifier","src":"1032:2:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1023:3:36"},"nodeType":"YulFunctionCall","src":"1023:12:36"},{"name":"_7","nodeType":"YulIdentifier","src":"1037:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1019:3:36"},"nodeType":"YulFunctionCall","src":"1019:21:36"},{"name":"_6","nodeType":"YulIdentifier","src":"1042:2:36"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1015:3:36"},"nodeType":"YulFunctionCall","src":"1015:30:36"},"nodeType":"YulIf","src":"1012:50:36"},{"nodeType":"YulVariableDeclaration","src":"1075:35:36","value":{"arguments":[],"functionName":{"name":"allocate_memory_1595","nodeType":"YulIdentifier","src":"1088:20:36"},"nodeType":"YulFunctionCall","src":"1088:22:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1079:5:36","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1130:5:36"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"1160:2:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1164:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1156:3:36"},"nodeType":"YulFunctionCall","src":"1156:11:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1137:18:36"},"nodeType":"YulFunctionCall","src":"1137:31:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1123:6:36"},"nodeType":"YulFunctionCall","src":"1123:46:36"},"nodeType":"YulExpressionStatement","src":"1123:46:36"},{"nodeType":"YulVariableDeclaration","src":"1182:41:36","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"1215:2:36"},{"name":"_6","nodeType":"YulIdentifier","src":"1219:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1211:3:36"},"nodeType":"YulFunctionCall","src":"1211:11:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1198:12:36"},"nodeType":"YulFunctionCall","src":"1198:25:36"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1186:8:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1256:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1265:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1268:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1258:6:36"},"nodeType":"YulFunctionCall","src":"1258:12:36"},"nodeType":"YulExpressionStatement","src":"1258:12:36"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1242:8:36"},{"name":"_3","nodeType":"YulIdentifier","src":"1252:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1239:2:36"},"nodeType":"YulFunctionCall","src":"1239:16:36"},"nodeType":"YulIf","src":"1236:36:36"},{"nodeType":"YulVariableDeclaration","src":"1285:27:36","value":{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"1299:2:36"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1303:8:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1295:3:36"},"nodeType":"YulFunctionCall","src":"1295:17:36"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"1289:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1358:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1367:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1370:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1360:6:36"},"nodeType":"YulFunctionCall","src":"1360:12:36"},"nodeType":"YulExpressionStatement","src":"1360:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_8","nodeType":"YulIdentifier","src":"1343:2:36"},{"kind":"number","nodeType":"YulLiteral","src":"1347:2:36","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:36"},"nodeType":"YulFunctionCall","src":"1339:11:36"},{"name":"end","nodeType":"YulIdentifier","src":"1352:3:36"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1335:3:36"},"nodeType":"YulFunctionCall","src":"1335:21:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1328:6:36"},"nodeType":"YulFunctionCall","src":"1328:29:36"},"nodeType":"YulIf","src":"1325:49:36"},{"nodeType":"YulVariableDeclaration","src":"1387:35:36","value":{"arguments":[{"arguments":[{"name":"_8","nodeType":"YulIdentifier","src":"1414:2:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1418:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1410:3:36"},"nodeType":"YulFunctionCall","src":"1410:11:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1397:12:36"},"nodeType":"YulFunctionCall","src":"1397:25:36"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"1391:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1451:16:36"},"nodeType":"YulFunctionCall","src":"1451:18:36"},"nodeType":"YulExpressionStatement","src":"1451:18:36"}]},"condition":{"arguments":[{"name":"_9","nodeType":"YulIdentifier","src":"1441:2:36"},{"name":"_3","nodeType":"YulIdentifier","src":"1445:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1438:2:36"},"nodeType":"YulFunctionCall","src":"1438:10:36"},"nodeType":"YulIf","src":"1435:36:36"},{"nodeType":"YulVariableDeclaration","src":"1484:63:36","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_9","nodeType":"YulIdentifier","src":"1527:2:36"},{"kind":"number","nodeType":"YulLiteral","src":"1531:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:36"},"nodeType":"YulFunctionCall","src":"1523:13:36"},{"name":"_7","nodeType":"YulIdentifier","src":"1538:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1519:3:36"},"nodeType":"YulFunctionCall","src":"1519:22:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1543:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1515:3:36"},"nodeType":"YulFunctionCall","src":"1515:31:36"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1499:15:36"},"nodeType":"YulFunctionCall","src":"1499:48:36"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"1488:7:36","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1567:7:36"},{"name":"_9","nodeType":"YulIdentifier","src":"1576:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1560:6:36"},"nodeType":"YulFunctionCall","src":"1560:19:36"},"nodeType":"YulExpressionStatement","src":"1560:19:36"},{"body":{"nodeType":"YulBlock","src":"1625:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1634:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1637:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1627:6:36"},"nodeType":"YulFunctionCall","src":"1627:12:36"},"nodeType":"YulExpressionStatement","src":"1627:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_8","nodeType":"YulIdentifier","src":"1606:2:36"},{"name":"_9","nodeType":"YulIdentifier","src":"1610:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1602:3:36"},"nodeType":"YulFunctionCall","src":"1602:11:36"},{"name":"_6","nodeType":"YulIdentifier","src":"1615:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1598:3:36"},"nodeType":"YulFunctionCall","src":"1598:20:36"},{"name":"end","nodeType":"YulIdentifier","src":"1620:3:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1595:2:36"},"nodeType":"YulFunctionCall","src":"1595:29:36"},"nodeType":"YulIf","src":"1592:49:36"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1671:7:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1680:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1667:3:36"},"nodeType":"YulFunctionCall","src":"1667:16:36"},{"arguments":[{"name":"_8","nodeType":"YulIdentifier","src":"1689:2:36"},{"name":"_6","nodeType":"YulIdentifier","src":"1693:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1685:3:36"},"nodeType":"YulFunctionCall","src":"1685:11:36"},{"name":"_9","nodeType":"YulIdentifier","src":"1698:2:36"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1654:12:36"},"nodeType":"YulFunctionCall","src":"1654:47:36"},"nodeType":"YulExpressionStatement","src":"1654:47:36"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1729:7:36"},{"name":"_9","nodeType":"YulIdentifier","src":"1738:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1725:3:36"},"nodeType":"YulFunctionCall","src":"1725:16:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1743:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1721:3:36"},"nodeType":"YulFunctionCall","src":"1721:25:36"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1714:6:36"},"nodeType":"YulFunctionCall","src":"1714:36:36"},"nodeType":"YulExpressionStatement","src":"1714:36:36"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1774:5:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1781:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1770:3:36"},"nodeType":"YulFunctionCall","src":"1770:14:36"},{"name":"array_1","nodeType":"YulIdentifier","src":"1786:7:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1763:6:36"},"nodeType":"YulFunctionCall","src":"1763:31:36"},"nodeType":"YulExpressionStatement","src":"1763:31:36"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1814:3:36"},{"name":"value","nodeType":"YulIdentifier","src":"1819:5:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1807:6:36"},"nodeType":"YulFunctionCall","src":"1807:18:36"},"nodeType":"YulExpressionStatement","src":"1807:18:36"},{"nodeType":"YulAssignment","src":"1838:19:36","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1849:3:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1854:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1845:3:36"},"nodeType":"YulFunctionCall","src":"1845:12:36"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1838:3:36"}]},{"nodeType":"YulAssignment","src":"1870:19:36","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1881:3:36"},{"name":"_2","nodeType":"YulIdentifier","src":"1886:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1877:3:36"},"nodeType":"YulFunctionCall","src":"1877:12:36"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1870:3:36"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"759:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"762:2:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"756:2:36"},"nodeType":"YulFunctionCall","src":"756:9:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"766:18:36","statements":[{"nodeType":"YulAssignment","src":"768:14:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"777:1:36"},{"kind":"number","nodeType":"YulLiteral","src":"780:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:36"},"nodeType":"YulFunctionCall","src":"773:9:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"768:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"752:3:36","statements":[]},"src":"748:1151:36"},{"nodeType":"YulAssignment","src":"1908:14:36","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"1917:5:36"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1908:5:36"}]}]},"name":"abi_decode_array_struct_Call_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"234:6:36","type":""},{"name":"end","nodeType":"YulTypedName","src":"242:3:36","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"250:5:36","type":""}],"src":"192:1736:36"},{"body":{"nodeType":"YulBlock","src":"2003:116:36","statements":[{"body":{"nodeType":"YulBlock","src":"2049:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2058:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2061:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2051:6:36"},"nodeType":"YulFunctionCall","src":"2051:12:36"},"nodeType":"YulExpressionStatement","src":"2051:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2024:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2033:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2020:3:36"},"nodeType":"YulFunctionCall","src":"2020:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2045:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2016:3:36"},"nodeType":"YulFunctionCall","src":"2016:32:36"},"nodeType":"YulIf","src":"2013:52:36"},{"nodeType":"YulAssignment","src":"2074:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2103:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2084:18:36"},"nodeType":"YulFunctionCall","src":"2084:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2074:6:36"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1969:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1980:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1992:6:36","type":""}],"src":"1933:186:36"},{"body":{"nodeType":"YulBlock","src":"2241:257:36","statements":[{"body":{"nodeType":"YulBlock","src":"2287:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2296:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2299:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2289:6:36"},"nodeType":"YulFunctionCall","src":"2289:12:36"},"nodeType":"YulExpressionStatement","src":"2289:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2262:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2271:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2258:3:36"},"nodeType":"YulFunctionCall","src":"2258:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2283:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2254:3:36"},"nodeType":"YulFunctionCall","src":"2254:32:36"},"nodeType":"YulIf","src":"2251:52:36"},{"nodeType":"YulVariableDeclaration","src":"2312:37:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2339:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2326:12:36"},"nodeType":"YulFunctionCall","src":"2326:23:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2316:6:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"2392:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2401:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2404:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2394:6:36"},"nodeType":"YulFunctionCall","src":"2394:12:36"},"nodeType":"YulExpressionStatement","src":"2394:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2364:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"2372:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2361:2:36"},"nodeType":"YulFunctionCall","src":"2361:30:36"},"nodeType":"YulIf","src":"2358:50:36"},{"nodeType":"YulAssignment","src":"2417:75:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2464:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"2475:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2460:3:36"},"nodeType":"YulFunctionCall","src":"2460:22:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2484:7:36"}],"functionName":{"name":"abi_decode_array_struct_Call_dyn","nodeType":"YulIdentifier","src":"2427:32:36"},"nodeType":"YulFunctionCall","src":"2427:65:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2417:6:36"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2207:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2218:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2230:6:36","type":""}],"src":"2124:374:36"},{"body":{"nodeType":"YulBlock","src":"2634:404:36","statements":[{"body":{"nodeType":"YulBlock","src":"2680:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2692:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2682:6:36"},"nodeType":"YulFunctionCall","src":"2682:12:36"},"nodeType":"YulExpressionStatement","src":"2682:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2655:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"2664:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2651:3:36"},"nodeType":"YulFunctionCall","src":"2651:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"2676:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2647:3:36"},"nodeType":"YulFunctionCall","src":"2647:32:36"},"nodeType":"YulIf","src":"2644:52:36"},{"nodeType":"YulVariableDeclaration","src":"2705:36:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2731:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2718:12:36"},"nodeType":"YulFunctionCall","src":"2718:23:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2709:5:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"2794:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2803:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2806:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2796:6:36"},"nodeType":"YulFunctionCall","src":"2796:12:36"},"nodeType":"YulExpressionStatement","src":"2796:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2763:5:36"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2784:5:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2777:6:36"},"nodeType":"YulFunctionCall","src":"2777:13:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2770:6:36"},"nodeType":"YulFunctionCall","src":"2770:21:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2760:2:36"},"nodeType":"YulFunctionCall","src":"2760:32:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2753:6:36"},"nodeType":"YulFunctionCall","src":"2753:40:36"},"nodeType":"YulIf","src":"2750:60:36"},{"nodeType":"YulAssignment","src":"2819:15:36","value":{"name":"value","nodeType":"YulIdentifier","src":"2829:5:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2819:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"2843:46:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2874:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2885:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2870:3:36"},"nodeType":"YulFunctionCall","src":"2870:18:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2857:12:36"},"nodeType":"YulFunctionCall","src":"2857:32:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2847:6:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"2932:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2941:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2944:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2934:6:36"},"nodeType":"YulFunctionCall","src":"2934:12:36"},"nodeType":"YulExpressionStatement","src":"2934:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2904:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"2912:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2901:2:36"},"nodeType":"YulFunctionCall","src":"2901:30:36"},"nodeType":"YulIf","src":"2898:50:36"},{"nodeType":"YulAssignment","src":"2957:75:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"3015:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:36"},"nodeType":"YulFunctionCall","src":"3000:22:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3024:7:36"}],"functionName":{"name":"abi_decode_array_struct_Call_dyn","nodeType":"YulIdentifier","src":"2967:32:36"},"nodeType":"YulFunctionCall","src":"2967:65:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2957:6:36"}]}]},"name":"abi_decode_tuple_t_boolt_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2592:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2603:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2615:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2623:6:36","type":""}],"src":"2503:535:36"},{"body":{"nodeType":"YulBlock","src":"3113:110:36","statements":[{"body":{"nodeType":"YulBlock","src":"3159:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3168:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3171:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3161:6:36"},"nodeType":"YulFunctionCall","src":"3161:12:36"},"nodeType":"YulExpressionStatement","src":"3161:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3134:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"3143:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3130:3:36"},"nodeType":"YulFunctionCall","src":"3130:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"3155:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3126:3:36"},"nodeType":"YulFunctionCall","src":"3126:32:36"},"nodeType":"YulIf","src":"3123:52:36"},{"nodeType":"YulAssignment","src":"3184:33:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3207:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3194:12:36"},"nodeType":"YulFunctionCall","src":"3194:23:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3184:6:36"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3079:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3090:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3102:6:36","type":""}],"src":"3043:180:36"},{"body":{"nodeType":"YulBlock","src":"3295:743:36","statements":[{"nodeType":"YulVariableDeclaration","src":"3305:16:36","value":{"name":"pos","nodeType":"YulIdentifier","src":"3318:3:36"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"3309:5:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3330:26:36","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3350:5:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3344:5:36"},"nodeType":"YulFunctionCall","src":"3344:12:36"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3334:6:36","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3372:3:36"},{"name":"length","nodeType":"YulIdentifier","src":"3377:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3365:6:36"},"nodeType":"YulFunctionCall","src":"3365:19:36"},"nodeType":"YulExpressionStatement","src":"3365:19:36"},{"nodeType":"YulVariableDeclaration","src":"3393:14:36","value":{"kind":"number","nodeType":"YulLiteral","src":"3403:4:36","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3397:2:36","type":""}]},{"nodeType":"YulAssignment","src":"3416:19:36","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3427:3:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3432:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3423:3:36"},"nodeType":"YulFunctionCall","src":"3423:12:36"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3416:3:36"}]},{"nodeType":"YulVariableDeclaration","src":"3444:47:36","value":{"arguments":[{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"3464:5:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3475:1:36","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3478:6:36"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3471:3:36"},"nodeType":"YulFunctionCall","src":"3471:14:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3460:3:36"},"nodeType":"YulFunctionCall","src":"3460:26:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3488:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3456:3:36"},"nodeType":"YulFunctionCall","src":"3456:35:36"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3448:4:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3500:28:36","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3518:5:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3525:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3514:3:36"},"nodeType":"YulFunctionCall","src":"3514:14:36"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3504:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3537:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"3546:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3541:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"3605:407:36","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3626:3:36"},{"arguments":[{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3639:4:36"},{"name":"pos_1","nodeType":"YulIdentifier","src":"3645:5:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3635:3:36"},"nodeType":"YulFunctionCall","src":"3635:16:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3657:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3653:3:36"},"nodeType":"YulFunctionCall","src":"3653:7:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3631:3:36"},"nodeType":"YulFunctionCall","src":"3631:30:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3619:6:36"},"nodeType":"YulFunctionCall","src":"3619:43:36"},"nodeType":"YulExpressionStatement","src":"3619:43:36"},{"nodeType":"YulVariableDeclaration","src":"3675:23:36","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3691:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3685:5:36"},"nodeType":"YulFunctionCall","src":"3685:13:36"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3679:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3711:14:36","value":{"kind":"number","nodeType":"YulLiteral","src":"3721:4:36","type":"","value":"0x40"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3715:2:36","type":""}]},{"expression":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3745:4:36"},{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3771:2:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3765:5:36"},"nodeType":"YulFunctionCall","src":"3765:9:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3758:6:36"},"nodeType":"YulFunctionCall","src":"3758:17:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3751:6:36"},"nodeType":"YulFunctionCall","src":"3751:25:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3738:6:36"},"nodeType":"YulFunctionCall","src":"3738:39:36"},"nodeType":"YulExpressionStatement","src":"3738:39:36"},{"nodeType":"YulVariableDeclaration","src":"3790:38:36","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3820:2:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3824:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3816:3:36"},"nodeType":"YulFunctionCall","src":"3816:11:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3810:5:36"},"nodeType":"YulFunctionCall","src":"3810:18:36"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3794:12:36","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3852:4:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3858:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3848:3:36"},"nodeType":"YulFunctionCall","src":"3848:13:36"},{"name":"_3","nodeType":"YulIdentifier","src":"3863:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3841:6:36"},"nodeType":"YulFunctionCall","src":"3841:25:36"},"nodeType":"YulExpressionStatement","src":"3841:25:36"},{"nodeType":"YulAssignment","src":"3879:53:36","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3904:12:36"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3922:4:36"},{"name":"_3","nodeType":"YulIdentifier","src":"3928:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3918:3:36"},"nodeType":"YulFunctionCall","src":"3918:13:36"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"3887:16:36"},"nodeType":"YulFunctionCall","src":"3887:45:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3879:4:36"}]},{"nodeType":"YulAssignment","src":"3945:25:36","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3959:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3967:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3955:3:36"},"nodeType":"YulFunctionCall","src":"3955:15:36"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3945:6:36"}]},{"nodeType":"YulAssignment","src":"3983:19:36","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3994:3:36"},{"name":"_1","nodeType":"YulIdentifier","src":"3999:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:36"},"nodeType":"YulFunctionCall","src":"3990:12:36"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3983:3:36"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3567:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"3570:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3564:2:36"},"nodeType":"YulFunctionCall","src":"3564:13:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3578:18:36","statements":[{"nodeType":"YulAssignment","src":"3580:14:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3589:1:36"},{"kind":"number","nodeType":"YulLiteral","src":"3592:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3585:3:36"},"nodeType":"YulFunctionCall","src":"3585:9:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3580:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"3560:3:36","statements":[]},"src":"3556:456:36"},{"nodeType":"YulAssignment","src":"4021:11:36","value":{"name":"tail","nodeType":"YulIdentifier","src":"4028:4:36"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4021:3:36"}]}]},"name":"abi_encode_array_struct_Result_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3272:5:36","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3279:3:36","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3287:3:36","type":""}],"src":"3228:810:36"},{"body":{"nodeType":"YulBlock","src":"4092:208:36","statements":[{"nodeType":"YulVariableDeclaration","src":"4102:26:36","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4122:5:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4116:5:36"},"nodeType":"YulFunctionCall","src":"4116:12:36"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4106:6:36","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4144:3:36"},{"name":"length","nodeType":"YulIdentifier","src":"4149:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4137:6:36"},"nodeType":"YulFunctionCall","src":"4137:19:36"},"nodeType":"YulExpressionStatement","src":"4137:19:36"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4191:5:36"},{"kind":"number","nodeType":"YulLiteral","src":"4198:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4187:3:36"},"nodeType":"YulFunctionCall","src":"4187:16:36"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4209:3:36"},{"kind":"number","nodeType":"YulLiteral","src":"4214:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4205:3:36"},"nodeType":"YulFunctionCall","src":"4205:14:36"},{"name":"length","nodeType":"YulIdentifier","src":"4221:6:36"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4165:21:36"},"nodeType":"YulFunctionCall","src":"4165:63:36"},"nodeType":"YulExpressionStatement","src":"4165:63:36"},{"nodeType":"YulAssignment","src":"4237:57:36","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4252:3:36"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4265:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"4273:2:36","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4261:3:36"},"nodeType":"YulFunctionCall","src":"4261:15:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4282:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4278:3:36"},"nodeType":"YulFunctionCall","src":"4278:7:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4257:3:36"},"nodeType":"YulFunctionCall","src":"4257:29:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4248:3:36"},"nodeType":"YulFunctionCall","src":"4248:39:36"},{"kind":"number","nodeType":"YulLiteral","src":"4289:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4244:3:36"},"nodeType":"YulFunctionCall","src":"4244:50:36"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4237:3:36"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4069:5:36","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4076:3:36","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4084:3:36","type":""}],"src":"4043:257:36"},{"body":{"nodeType":"YulBlock","src":"4442:137:36","statements":[{"nodeType":"YulVariableDeclaration","src":"4452:27:36","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4472:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4466:5:36"},"nodeType":"YulFunctionCall","src":"4466:13:36"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4456:6:36","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4514:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"4522:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4510:3:36"},"nodeType":"YulFunctionCall","src":"4510:17:36"},{"name":"pos","nodeType":"YulIdentifier","src":"4529:3:36"},{"name":"length","nodeType":"YulIdentifier","src":"4534:6:36"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4488:21:36"},"nodeType":"YulFunctionCall","src":"4488:53:36"},"nodeType":"YulExpressionStatement","src":"4488:53:36"},{"nodeType":"YulAssignment","src":"4550:23:36","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4561:3:36"},{"name":"length","nodeType":"YulIdentifier","src":"4566:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4557:3:36"},"nodeType":"YulFunctionCall","src":"4557:16:36"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4550:3:36"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4418:3:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4423:6:36","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4434:3:36","type":""}],"src":"4305:274:36"},{"body":{"nodeType":"YulBlock","src":"4685:102:36","statements":[{"nodeType":"YulAssignment","src":"4695:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4707:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4718:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4703:3:36"},"nodeType":"YulFunctionCall","src":"4703:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4695:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4737:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4752:6:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4768:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4773:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4764:3:36"},"nodeType":"YulFunctionCall","src":"4764:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"4777:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4760:3:36"},"nodeType":"YulFunctionCall","src":"4760:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4748:3:36"},"nodeType":"YulFunctionCall","src":"4748:32:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4730:6:36"},"nodeType":"YulFunctionCall","src":"4730:51:36"},"nodeType":"YulExpressionStatement","src":"4730:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4654:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4665:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4676:4:36","type":""}],"src":"4584:203:36"},{"body":{"nodeType":"YulBlock","src":"4991:116:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5008:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5019:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5001:6:36"},"nodeType":"YulFunctionCall","src":"5001:21:36"},"nodeType":"YulExpressionStatement","src":"5001:21:36"},{"nodeType":"YulAssignment","src":"5031:70:36","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5074:6:36"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5086:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5097:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5082:3:36"},"nodeType":"YulFunctionCall","src":"5082:18:36"}],"functionName":{"name":"abi_encode_array_struct_Result_dyn","nodeType":"YulIdentifier","src":"5039:34:36"},"nodeType":"YulFunctionCall","src":"5039:62:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5031:4:36"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4960:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4971:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4982:4:36","type":""}],"src":"4792:315:36"},{"body":{"nodeType":"YulBlock","src":"5213:76:36","statements":[{"nodeType":"YulAssignment","src":"5223:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5235:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5246:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5231:3:36"},"nodeType":"YulFunctionCall","src":"5231:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5223:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5265:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"5276:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5258:6:36"},"nodeType":"YulFunctionCall","src":"5258:25:36"},"nodeType":"YulExpressionStatement","src":"5258:25:36"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5182:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5193:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5204:4:36","type":""}],"src":"5112:177:36"},{"body":{"nodeType":"YulBlock","src":"5468:223:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5485:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5496:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5478:6:36"},"nodeType":"YulFunctionCall","src":"5478:21:36"},"nodeType":"YulExpressionStatement","src":"5478:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5519:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5530:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5515:3:36"},"nodeType":"YulFunctionCall","src":"5515:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"5535:2:36","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5508:6:36"},"nodeType":"YulFunctionCall","src":"5508:30:36"},"nodeType":"YulExpressionStatement","src":"5508:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5558:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5569:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5554:3:36"},"nodeType":"YulFunctionCall","src":"5554:18:36"},{"hexValue":"4d756c746963616c6c32206167677265676174653a2063616c6c206661696c65","kind":"string","nodeType":"YulLiteral","src":"5574:34:36","type":"","value":"Multicall2 aggregate: call faile"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5547:6:36"},"nodeType":"YulFunctionCall","src":"5547:62:36"},"nodeType":"YulExpressionStatement","src":"5547:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5629:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5640:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5625:3:36"},"nodeType":"YulFunctionCall","src":"5625:18:36"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"5645:3:36","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5618:6:36"},"nodeType":"YulFunctionCall","src":"5618:31:36"},"nodeType":"YulExpressionStatement","src":"5618:31:36"},{"nodeType":"YulAssignment","src":"5658:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5670:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5681:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5666:3:36"},"nodeType":"YulFunctionCall","src":"5666:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5658:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_bd97bfad63caef51f3372eed9dcabcf122404ebbb470c4fd9b09fcde78ebd3cf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5445:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5459:4:36","type":""}],"src":"5294:397:36"},{"body":{"nodeType":"YulBlock","src":"5870:182:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5887:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5898:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5880:6:36"},"nodeType":"YulFunctionCall","src":"5880:21:36"},"nodeType":"YulExpressionStatement","src":"5880:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5921:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5932:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5917:3:36"},"nodeType":"YulFunctionCall","src":"5917:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"5937:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5910:6:36"},"nodeType":"YulFunctionCall","src":"5910:30:36"},"nodeType":"YulExpressionStatement","src":"5910:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5960:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5971:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5956:3:36"},"nodeType":"YulFunctionCall","src":"5956:18:36"},{"hexValue":"4d756c746963616c6c206167677265676174653a2063616c6c206661696c6564","kind":"string","nodeType":"YulLiteral","src":"5976:34:36","type":"","value":"Multicall aggregate: call failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5949:6:36"},"nodeType":"YulFunctionCall","src":"5949:62:36"},"nodeType":"YulExpressionStatement","src":"5949:62:36"},{"nodeType":"YulAssignment","src":"6020:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6032:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6043:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6028:3:36"},"nodeType":"YulFunctionCall","src":"6028:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6020:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_f00f29c42686fd9baf65b5bd8fa63c642ded98b2f947cb8aeb6a004fb9f654ec__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5847:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5861:4:36","type":""}],"src":"5696:356:36"},{"body":{"nodeType":"YulBlock","src":"6158:76:36","statements":[{"nodeType":"YulAssignment","src":"6168:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6180:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6191:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6176:3:36"},"nodeType":"YulFunctionCall","src":"6176:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6168:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6210:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"6221:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6203:6:36"},"nodeType":"YulFunctionCall","src":"6203:25:36"},"nodeType":"YulExpressionStatement","src":"6203:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6127:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6138:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6149:4:36","type":""}],"src":"6057:177:36"},{"body":{"nodeType":"YulBlock","src":"6436:674:36","statements":[{"nodeType":"YulVariableDeclaration","src":"6446:32:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6464:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6475:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6460:3:36"},"nodeType":"YulFunctionCall","src":"6460:18:36"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"6450:6:36","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6494:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"6505:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6487:6:36"},"nodeType":"YulFunctionCall","src":"6487:25:36"},"nodeType":"YulExpressionStatement","src":"6487:25:36"},{"nodeType":"YulVariableDeclaration","src":"6521:12:36","value":{"kind":"number","nodeType":"YulLiteral","src":"6531:2:36","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6525:2:36","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6553:9:36"},{"name":"_1","nodeType":"YulIdentifier","src":"6564:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6549:3:36"},"nodeType":"YulFunctionCall","src":"6549:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"6569:2:36","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6542:6:36"},"nodeType":"YulFunctionCall","src":"6542:30:36"},"nodeType":"YulExpressionStatement","src":"6542:30:36"},{"nodeType":"YulVariableDeclaration","src":"6581:17:36","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"6592:6:36"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"6585:3:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6607:27:36","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6627:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6621:5:36"},"nodeType":"YulFunctionCall","src":"6621:13:36"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6611:6:36","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"6650:6:36"},{"name":"length","nodeType":"YulIdentifier","src":"6658:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6643:6:36"},"nodeType":"YulFunctionCall","src":"6643:22:36"},"nodeType":"YulExpressionStatement","src":"6643:22:36"},{"nodeType":"YulAssignment","src":"6674:25:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6685:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6696:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6681:3:36"},"nodeType":"YulFunctionCall","src":"6681:18:36"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6674:3:36"}]},{"nodeType":"YulVariableDeclaration","src":"6708:53:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6730:9:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6745:1:36","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"6748:6:36"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6741:3:36"},"nodeType":"YulFunctionCall","src":"6741:14:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6726:3:36"},"nodeType":"YulFunctionCall","src":"6726:30:36"},{"kind":"number","nodeType":"YulLiteral","src":"6758:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6722:3:36"},"nodeType":"YulFunctionCall","src":"6722:39:36"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"6712:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6770:29:36","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6788:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"6796:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6784:3:36"},"nodeType":"YulFunctionCall","src":"6784:15:36"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6774:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6808:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"6817:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6812:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"6876:205:36","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6897:3:36"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"6910:6:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"6918:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6906:3:36"},"nodeType":"YulFunctionCall","src":"6906:22:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6934:2:36","type":"","value":"95"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6930:3:36"},"nodeType":"YulFunctionCall","src":"6930:7:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6902:3:36"},"nodeType":"YulFunctionCall","src":"6902:36:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6890:6:36"},"nodeType":"YulFunctionCall","src":"6890:49:36"},"nodeType":"YulExpressionStatement","src":"6890:49:36"},{"nodeType":"YulAssignment","src":"6952:49:36","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6985:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6979:5:36"},"nodeType":"YulFunctionCall","src":"6979:13:36"},{"name":"tail_2","nodeType":"YulIdentifier","src":"6994:6:36"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"6962:16:36"},"nodeType":"YulFunctionCall","src":"6962:39:36"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"6952:6:36"}]},{"nodeType":"YulAssignment","src":"7014:25:36","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7028:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"7036:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7024:3:36"},"nodeType":"YulFunctionCall","src":"7024:15:36"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7014:6:36"}]},{"nodeType":"YulAssignment","src":"7052:19:36","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7063:3:36"},{"name":"_1","nodeType":"YulIdentifier","src":"7068:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7059:3:36"},"nodeType":"YulFunctionCall","src":"7059:12:36"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7052:3:36"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6838:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"6841:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6835:2:36"},"nodeType":"YulFunctionCall","src":"6835:13:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6849:18:36","statements":[{"nodeType":"YulAssignment","src":"6851:14:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6860:1:36"},{"kind":"number","nodeType":"YulLiteral","src":"6863:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6856:3:36"},"nodeType":"YulFunctionCall","src":"6856:9:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6851:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"6831:3:36","statements":[]},"src":"6827:254:36"},{"nodeType":"YulAssignment","src":"7090:14:36","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"7098:6:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7090:4:36"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6397:9:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6408:6:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6416:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6427:4:36","type":""}],"src":"6239:871:36"},{"body":{"nodeType":"YulBlock","src":"7370:202:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7387:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"7398:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7380:6:36"},"nodeType":"YulFunctionCall","src":"7380:25:36"},"nodeType":"YulExpressionStatement","src":"7380:25:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7425:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"7436:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7421:3:36"},"nodeType":"YulFunctionCall","src":"7421:18:36"},{"name":"value1","nodeType":"YulIdentifier","src":"7441:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7414:6:36"},"nodeType":"YulFunctionCall","src":"7414:34:36"},"nodeType":"YulExpressionStatement","src":"7414:34:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7468:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"7479:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7464:3:36"},"nodeType":"YulFunctionCall","src":"7464:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"7484:2:36","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:36"},"nodeType":"YulFunctionCall","src":"7457:30:36"},"nodeType":"YulExpressionStatement","src":"7457:30:36"},{"nodeType":"YulAssignment","src":"7496:70:36","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7539:6:36"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7551:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"7562:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7547:3:36"},"nodeType":"YulFunctionCall","src":"7547:18:36"}],"functionName":{"name":"abi_encode_array_struct_Result_dyn","nodeType":"YulIdentifier","src":"7504:34:36"},"nodeType":"YulFunctionCall","src":"7504:62:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7496:4:36"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes32_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_bytes32_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7323:9:36","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7334:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7342:6:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7350:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7361:4:36","type":""}],"src":"7115:457:36"},{"body":{"nodeType":"YulBlock","src":"7623:211:36","statements":[{"nodeType":"YulAssignment","src":"7633:21:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7649:4:36","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7643:5:36"},"nodeType":"YulFunctionCall","src":"7643:11:36"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7633:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"7663:35:36","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7685:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"7693:4:36","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7681:3:36"},"nodeType":"YulFunctionCall","src":"7681:17:36"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7667:10:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"7773:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7775:16:36"},"nodeType":"YulFunctionCall","src":"7775:18:36"},"nodeType":"YulExpressionStatement","src":"7775:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7716:10:36"},{"kind":"number","nodeType":"YulLiteral","src":"7728:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7713:2:36"},"nodeType":"YulFunctionCall","src":"7713:34:36"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7752:10:36"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7764:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7749:2:36"},"nodeType":"YulFunctionCall","src":"7749:22:36"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7710:2:36"},"nodeType":"YulFunctionCall","src":"7710:62:36"},"nodeType":"YulIf","src":"7707:88:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7811:4:36","type":"","value":"0x40"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7817:10:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7804:6:36"},"nodeType":"YulFunctionCall","src":"7804:24:36"},"nodeType":"YulExpressionStatement","src":"7804:24:36"}]},"name":"allocate_memory_1595","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7612:6:36","type":""}],"src":"7577:257:36"},{"body":{"nodeType":"YulBlock","src":"7884:230:36","statements":[{"nodeType":"YulAssignment","src":"7894:19:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7910:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7904:5:36"},"nodeType":"YulFunctionCall","src":"7904:9:36"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7894:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"7922:58:36","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7944:6:36"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7960:4:36"},{"kind":"number","nodeType":"YulLiteral","src":"7966:2:36","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7956:3:36"},"nodeType":"YulFunctionCall","src":"7956:13:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7975:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7971:3:36"},"nodeType":"YulFunctionCall","src":"7971:7:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7952:3:36"},"nodeType":"YulFunctionCall","src":"7952:27:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7940:3:36"},"nodeType":"YulFunctionCall","src":"7940:40:36"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7926:10:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"8055:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8057:16:36"},"nodeType":"YulFunctionCall","src":"8057:18:36"},"nodeType":"YulExpressionStatement","src":"8057:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7998:10:36"},{"kind":"number","nodeType":"YulLiteral","src":"8010:18:36","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7995:2:36"},"nodeType":"YulFunctionCall","src":"7995:34:36"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8034:10:36"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8046:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8031:2:36"},"nodeType":"YulFunctionCall","src":"8031:22:36"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7992:2:36"},"nodeType":"YulFunctionCall","src":"7992:62:36"},"nodeType":"YulIf","src":"7989:88:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8093:2:36","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8097:10:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8086:6:36"},"nodeType":"YulFunctionCall","src":"8086:22:36"},"nodeType":"YulExpressionStatement","src":"8086:22:36"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7864:4:36","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7873:6:36","type":""}],"src":"7839:275:36"},{"body":{"nodeType":"YulBlock","src":"8168:76:36","statements":[{"body":{"nodeType":"YulBlock","src":"8190:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8192:16:36"},"nodeType":"YulFunctionCall","src":"8192:18:36"},"nodeType":"YulExpressionStatement","src":"8192:18:36"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8184:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"8187:1:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8181:2:36"},"nodeType":"YulFunctionCall","src":"8181:8:36"},"nodeType":"YulIf","src":"8178:34:36"},{"nodeType":"YulAssignment","src":"8221:17:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8233:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"8236:1:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8229:3:36"},"nodeType":"YulFunctionCall","src":"8229:9:36"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8221:4:36"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8150:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"8153:1:36","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8159:4:36","type":""}],"src":"8119:125:36"},{"body":{"nodeType":"YulBlock","src":"8302:205:36","statements":[{"nodeType":"YulVariableDeclaration","src":"8312:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"8321:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8316:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"8381:63:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8406:3:36"},{"name":"i","nodeType":"YulIdentifier","src":"8411:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8402:3:36"},"nodeType":"YulFunctionCall","src":"8402:11:36"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8425:3:36"},{"name":"i","nodeType":"YulIdentifier","src":"8430:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8421:3:36"},"nodeType":"YulFunctionCall","src":"8421:11:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8415:5:36"},"nodeType":"YulFunctionCall","src":"8415:18:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8395:6:36"},"nodeType":"YulFunctionCall","src":"8395:39:36"},"nodeType":"YulExpressionStatement","src":"8395:39:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8342:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"8345:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8339:2:36"},"nodeType":"YulFunctionCall","src":"8339:13:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8353:19:36","statements":[{"nodeType":"YulAssignment","src":"8355:15:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8364:1:36"},{"kind":"number","nodeType":"YulLiteral","src":"8367:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8360:3:36"},"nodeType":"YulFunctionCall","src":"8360:10:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8355:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"8335:3:36","statements":[]},"src":"8331:113:36"},{"body":{"nodeType":"YulBlock","src":"8470:31:36","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8483:3:36"},{"name":"length","nodeType":"YulIdentifier","src":"8488:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8479:3:36"},"nodeType":"YulFunctionCall","src":"8479:16:36"},{"kind":"number","nodeType":"YulLiteral","src":"8497:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8472:6:36"},"nodeType":"YulFunctionCall","src":"8472:27:36"},"nodeType":"YulExpressionStatement","src":"8472:27:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8459:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"8462:6:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8456:2:36"},"nodeType":"YulFunctionCall","src":"8456:13:36"},"nodeType":"YulIf","src":"8453:48:36"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8280:3:36","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8285:3:36","type":""},{"name":"length","nodeType":"YulTypedName","src":"8290:6:36","type":""}],"src":"8249:258:36"},{"body":{"nodeType":"YulBlock","src":"8559:88:36","statements":[{"body":{"nodeType":"YulBlock","src":"8590:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8592:16:36"},"nodeType":"YulFunctionCall","src":"8592:18:36"},"nodeType":"YulExpressionStatement","src":"8592:18:36"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8575:5:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8586:1:36","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8582:3:36"},"nodeType":"YulFunctionCall","src":"8582:6:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8572:2:36"},"nodeType":"YulFunctionCall","src":"8572:17:36"},"nodeType":"YulIf","src":"8569:43:36"},{"nodeType":"YulAssignment","src":"8621:20:36","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8632:5:36"},{"kind":"number","nodeType":"YulLiteral","src":"8639:1:36","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8628:3:36"},"nodeType":"YulFunctionCall","src":"8628:13:36"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8621:3:36"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8541:5:36","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8551:3:36","type":""}],"src":"8512:135:36"},{"body":{"nodeType":"YulBlock","src":"8684:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8701:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8708:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8713:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8704:3:36"},"nodeType":"YulFunctionCall","src":"8704:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8694:6:36"},"nodeType":"YulFunctionCall","src":"8694:31:36"},"nodeType":"YulExpressionStatement","src":"8694:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8741:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8744:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8734:6:36"},"nodeType":"YulFunctionCall","src":"8734:15:36"},"nodeType":"YulExpressionStatement","src":"8734:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8765:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8768:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8758:6:36"},"nodeType":"YulFunctionCall","src":"8758:15:36"},"nodeType":"YulExpressionStatement","src":"8758:15:36"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8652:127:36"},{"body":{"nodeType":"YulBlock","src":"8816:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8833:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8840:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8845:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8836:3:36"},"nodeType":"YulFunctionCall","src":"8836:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8826:6:36"},"nodeType":"YulFunctionCall","src":"8826:31:36"},"nodeType":"YulExpressionStatement","src":"8826:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8873:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8876:4:36","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8866:6:36"},"nodeType":"YulFunctionCall","src":"8866:15:36"},"nodeType":"YulExpressionStatement","src":"8866:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8897:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8900:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8890:6:36"},"nodeType":"YulFunctionCall","src":"8890:15:36"},"nodeType":"YulExpressionStatement","src":"8890:15:36"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8784:127:36"},{"body":{"nodeType":"YulBlock","src":"8948:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8965:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8972:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8977:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8968:3:36"},"nodeType":"YulFunctionCall","src":"8968:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8958:6:36"},"nodeType":"YulFunctionCall","src":"8958:31:36"},"nodeType":"YulExpressionStatement","src":"8958:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9005:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9008:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8998:6:36"},"nodeType":"YulFunctionCall","src":"8998:15:36"},"nodeType":"YulExpressionStatement","src":"8998:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9029:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9032:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9022:6:36"},"nodeType":"YulFunctionCall","src":"9022:15:36"},"nodeType":"YulExpressionStatement","src":"9022:15:36"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8916:127:36"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_struct_Call_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let dst := allocate_memory(add(_4, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _4), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _3) { revert(0, 0) }\n            let _5 := add(offset, innerOffset)\n            let _6 := 0x40\n            let _7 := not(31)\n            if slt(add(sub(end, _5), _7), _6) { revert(0, 0) }\n            let value := allocate_memory_1595()\n            mstore(value, abi_decode_address(add(_5, _2)))\n            let offset_1 := calldataload(add(_5, _6))\n            if gt(offset_1, _3) { revert(0, 0) }\n            let _8 := add(_5, offset_1)\n            if iszero(slt(add(_8, 63), end)) { revert(0, 0) }\n            let _9 := calldataload(add(_8, _2))\n            if gt(_9, _3) { panic_error_0x41() }\n            let array_1 := allocate_memory(add(and(add(_9, 0x1f), _7), _2))\n            mstore(array_1, _9)\n            if gt(add(add(_8, _9), _6), end) { revert(0, 0) }\n            calldatacopy(add(array_1, _2), add(_8, _6), _9)\n            mstore(add(add(array_1, _9), _2), 0)\n            mstore(add(value, _2), array_1)\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_struct_Call_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_boolt_array$_t_struct$_Call_$2725_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_struct_Call_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_struct_Result_dyn(value, pos) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let tail := add(add(pos_1, shl(5, length)), _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail, pos_1), not(31)))\n            let _2 := mload(srcPtr)\n            let _3 := 0x40\n            mstore(tail, iszero(iszero(mload(_2))))\n            let memberValue0 := mload(add(_2, _1))\n            mstore(add(tail, _1), _3)\n            tail := abi_encode_bytes(memberValue0, add(tail, _3))\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_struct_Result_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_bd97bfad63caef51f3372eed9dcabcf122404ebbb470c4fd9b09fcde78ebd3cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Multicall2 aggregate: call faile\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f00f29c42686fd9baf65b5bd8fa63c642ded98b2f947cb8aeb6a004fb9f654ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Multicall aggregate: call failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 64)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let tail_2 := add(add(headStart, shl(5, length)), 96)\n        let srcPtr := add(value1, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(95)))\n            tail_2 := abi_encode_bytes(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_uint256_t_bytes32_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_bytes32_t_array$_t_struct$_Result_$2730_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_array_struct_Result_dyn(value2, add(headStart, 96))\n    }\n    function allocate_memory_1595() -> memPtr\n    {\n        memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c806372425d9d1161007157806372425d9d1461013a57806386d516e814610140578063a8b0574e14610146578063bce38bd714610154578063c3077fa914610174578063ee82ac5e1461018757600080fd5b80630f28c97d146100b9578063252dba42146100ce57806327e86d6e146100ef578063399542e9146100f757806342cbb15c146101195780634d2301cc1461011f575b600080fd5b425b6040519081526020015b60405180910390f35b6100e16100dc36600461069c565b610199565b6040516100c5929190610810565b6100bb610321565b61010a6101053660046106d9565b610334565b6040516100c59392919061087a565b436100bb565b6100bb61012d36600461067a565b6001600160a01b03163190565b446100bb565b456100bb565b6040514181526020016100c5565b6101676101623660046106d9565b61034c565b6040516100c591906107fd565b61010a61018236600461069c565b610506565b6100bb61019536600461072e565b4090565b8051439060609067ffffffffffffffff8111156101b8576101b861098a565b6040519080825280602002602001820160405280156101eb57816020015b60608152602001906001900390816101d65790505b50905060005b835181101561031b5760008085838151811061020f5761020f610974565b6020026020010151600001516001600160a01b031686848151811061023657610236610974565b60200260200101516020015160405161024f91906107e1565b6000604051808303816000865af19150503d806000811461028c576040519150601f19603f3d011682016040523d82523d6000602084013e610291565b606091505b5091509150816102e85760405162461bcd60e51b815260206004820181905260248201527f4d756c746963616c6c206167677265676174653a2063616c6c206661696c656460448201526064015b60405180910390fd5b808484815181106102fb576102fb610974565b60200260200101819052505050808061031390610943565b9150506101f1565b50915091565b600061032e6001436108fc565b40905090565b4380406060610343858561034c565b90509250925092565b6060815167ffffffffffffffff8111156103685761036861098a565b6040519080825280602002602001820160405280156103ae57816020015b6040805180820190915260008152606060208201528152602001906001900390816103865790505b50905060005b82518110156104ff576000808483815181106103d2576103d2610974565b6020026020010151600001516001600160a01b03168584815181106103f9576103f9610974565b60200260200101516020015160405161041291906107e1565b6000604051808303816000865af19150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b509150915085156104b657816104b65760405162461bcd60e51b815260206004820152602160248201527f4d756c746963616c6c32206167677265676174653a2063616c6c206661696c656044820152601960fa1b60648201526084016102df565b60405180604001604052808315158152602001828152508484815181106104df576104df610974565b6020026020010181905250505080806104f790610943565b9150506103b4565b5092915050565b6000806060610516600185610334565b9196909550909350915050565b80356001600160a01b038116811461053a57600080fd5b919050565b600082601f83011261055057600080fd5b8135602067ffffffffffffffff8083111561056d5761056d61098a565b8260051b61057c8382016108cb565b8481528381019087850183890186018a101561059757600080fd5b600093505b8684101561066d578035858111156105b357600080fd5b89016040601f19828d0381018213156105cb57600080fd5b6105d36108a2565b6105de8a8501610523565b815282840135898111156105f157600080fd5b8085019450508d603f85011261060657600080fd5b898401358981111561061a5761061a61098a565b61062a8b84601f840116016108cb565b92508083528e8482870101111561064057600080fd5b808486018c85013760009083018b0152808a0191909152855250506001939093019291850191850161059c565b5098975050505050505050565b60006020828403121561068c57600080fd5b61069582610523565b9392505050565b6000602082840312156106ae57600080fd5b813567ffffffffffffffff8111156106c557600080fd5b6106d18482850161053f565b949350505050565b600080604083850312156106ec57600080fd5b823580151581146106fc57600080fd5b9150602083013567ffffffffffffffff81111561071857600080fd5b6107248582860161053f565b9150509250929050565b60006020828403121561074057600080fd5b5035919050565b600082825180855260208086019550808260051b84010181860160005b848110156107a857858303601f1901895281518051151584528401516040858501819052610794818601836107b5565b9a86019a9450505090830190600101610764565b5090979650505050505050565b600081518084526107cd816020860160208601610913565b601f01601f19169290920160200192915050565b600082516107f3818460208701610913565b9190910192915050565b6020815260006106956020830184610747565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b8281101561086c57605f1988870301845261085a8683516107b5565b9550928401929084019060010161083e565b509398975050505050505050565b8381528260208201526060604082015260006108996060830184610747565b95945050505050565b6040805190810167ffffffffffffffff811182821017156108c5576108c561098a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108f4576108f461098a565b604052919050565b60008282101561090e5761090e61095e565b500390565b60005b8381101561092e578181015183820152602001610916565b8381111561093d576000848401525b50505050565b60006000198214156109575761095761095e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b7a462e6e9d6826e74e6e8448de434552dbb3d1717810d91606df1f2c25ba00464736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72425D9D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x72425D9D EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x86D516E8 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xA8B0574E EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xBCE38BD7 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xC3077FA9 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xEE82AC5E EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF28C97D EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x252DBA42 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x27E86D6E EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x399542E9 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x42CBB15C EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x4D2301CC EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP3 SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x321 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x105 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST NUMBER PUSH2 0xBB JUMP JUMPDEST PUSH2 0xBB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST DIFFICULTY PUSH2 0xBB JUMP JUMPDEST GASLIMIT PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD COINBASE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x167 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x10A PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x72E JUMP JUMPDEST BLOCKHASH SWAP1 JUMP JUMPDEST DUP1 MLOAD NUMBER SWAP1 PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B8 JUMPI PUSH2 0x1B8 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x20F JUMPI PUSH2 0x20F PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x236 JUMPI PUSH2 0x236 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x291 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C746963616C6C206167677265676174653A2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2FB JUMPI PUSH2 0x2FB PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x313 SWAP1 PUSH2 0x943 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F1 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E PUSH1 0x1 NUMBER PUSH2 0x8FC JUMP JUMPDEST BLOCKHASH SWAP1 POP SWAP1 JUMP JUMPDEST NUMBER DUP1 BLOCKHASH PUSH1 0x60 PUSH2 0x343 DUP6 DUP6 PUSH2 0x34C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x368 JUMPI PUSH2 0x368 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3AE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x386 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3F9 JUMPI PUSH2 0x3F9 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x44F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x454 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP6 ISZERO PUSH2 0x4B6 JUMPI DUP2 PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C746963616C6C32206167677265676174653A2063616C6C206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4DF JUMPI PUSH2 0x4DF PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x4F7 SWAP1 PUSH2 0x943 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B4 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH2 0x516 PUSH1 0x1 DUP6 PUSH2 0x334 JUMP JUMPDEST SWAP2 SWAP7 SWAP1 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x56D JUMPI PUSH2 0x56D PUSH2 0x98A JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH2 0x57C DUP4 DUP3 ADD PUSH2 0x8CB JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP8 DUP6 ADD DUP4 DUP10 ADD DUP7 ADD DUP11 LT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP7 DUP5 LT ISZERO PUSH2 0x66D JUMPI DUP1 CALLDATALOAD DUP6 DUP2 GT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 ADD PUSH1 0x40 PUSH1 0x1F NOT DUP3 DUP14 SUB DUP2 ADD DUP3 SGT ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D3 PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x5DE DUP11 DUP6 ADD PUSH2 0x523 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP5 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP6 ADD SWAP5 POP POP DUP14 PUSH1 0x3F DUP6 ADD SLT PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 DUP5 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0x61A JUMPI PUSH2 0x61A PUSH2 0x98A JUMP JUMPDEST PUSH2 0x62A DUP12 DUP5 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x8CB JUMP JUMPDEST SWAP3 POP DUP1 DUP4 MSTORE DUP15 DUP5 DUP3 DUP8 ADD ADD GT ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP7 ADD DUP13 DUP6 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP4 ADD DUP12 ADD MSTORE DUP1 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MSTORE POP POP PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x59C JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x695 DUP3 PUSH2 0x523 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D1 DUP5 DUP3 DUP6 ADD PUSH2 0x53F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x724 DUP6 DUP3 DUP7 ADD PUSH2 0x53F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD DUP2 DUP7 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7A8 JUMPI DUP6 DUP4 SUB PUSH1 0x1F NOT ADD DUP10 MSTORE DUP2 MLOAD DUP1 MLOAD ISZERO ISZERO DUP5 MSTORE DUP5 ADD MLOAD PUSH1 0x40 DUP6 DUP6 ADD DUP2 SWAP1 MSTORE PUSH2 0x794 DUP2 DUP7 ADD DUP4 PUSH2 0x7B5 JUMP JUMPDEST SWAP11 DUP7 ADD SWAP11 SWAP5 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x764 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x7CD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x7F3 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x913 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x695 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP3 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x86C JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP5 MSTORE PUSH2 0x85A DUP7 DUP4 MLOAD PUSH2 0x7B5 JUMP JUMPDEST SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x83E JUMP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x899 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x747 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8C5 JUMPI PUSH2 0x8C5 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8F4 JUMPI PUSH2 0x8F4 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x90E JUMPI PUSH2 0x90E PUSH2 0x95E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x92E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x916 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x957 JUMPI PUSH2 0x957 PUSH2 0x95E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 LOG4 PUSH3 0xE6E9D6 DUP3 PUSH15 0x74E6E8448DE434552DBB3D1717810D SWAP2 PUSH1 0x6D CALL CALLCODE 0xC2 JUMPDEST LOG0 DIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"91:3057:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1781:148;1907:15;1781:148;;;5258:25:36;;;5246:2;5231:18;1781:148:21;;;;;;;;263:494;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2071:124::-;;;:::i;2752:394::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1262:111::-;1354:12;1262:111;;1935:130;;;;;;:::i;:::-;-1:-1:-1;;;;;2045:13:21;;;1935:130;1501:152;1630:16;1501:152;;1659:116;1754:14;1659:116;;1379;;;1474:14;4730:51:36;;4718:2;4703:18;1379:116:21;4584:203:36;2201:545:21;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;763:337::-;;;;;;:::i;:::-;;:::i;1106:150::-;;;;;;:::i;:::-;1226:23;;1106:150;263:494;453:13;;406:12;;355:25;;441:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;428:39;;482:9;477:274;501:6;:13;497:1;:17;477:274;;;536:12;550:16;570:6;577:1;570:9;;;;;;;;:::i;:::-;;;;;;;:16;;;-1:-1:-1;;;;;570:21:21;609:6;616:1;609:9;;;;;;;;:::i;:::-;;;;;;;:18;;;570:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:106;;;;663:7;655:52;;;;-1:-1:-1;;;655:52:21;;5898:2:36;655:52:21;;;5880:21:36;;;5917:18;;;5910:30;5976:34;5956:18;;;5949:62;6028:18;;655:52:21;;;;;;;;;737:3;721:10;732:1;721:13;;;;;;;;:::i;:::-;;;;;;:19;;;;521:230;;516:3;;;;;:::i;:::-;;;;477:274;;;;263:494;;;:::o;2071:124::-;2120:17;2171:16;2186:1;2171:12;:16;:::i;:::-;2161:27;2149:39;;2071:124;:::o;2752:394::-;3022:12;3056:23;;2957:26;3102:37;3115:15;3132:6;3102:12;:37::i;:::-;3089:50;;2752:394;;;;;:::o;2201:545::-;2305:26;2369:6;:13;2356:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2356:27:21;;;;;;;;;;;;;;;;2343:40;;2398:9;2393:347;2417:6;:13;2413:1;:17;2393:347;;;2452:12;2466:16;2486:6;2493:1;2486:9;;;;;;;;:::i;:::-;;;;;;;:16;;;-1:-1:-1;;;;;2486:21:21;2525:6;2532:1;2525:9;;;;;;;;:::i;:::-;;;;;;;:18;;;2486:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2451:106;;;;2576:15;2572:107;;;2619:7;2611:53;;;;-1:-1:-1;;;2611:53:21;;5496:2:36;2611:53:21;;;5478:21:36;5535:2;5515:18;;;5508:30;5574:34;5554:18;;;5547:62;-1:-1:-1;;;5625:18:36;;;5618:31;5666:19;;2611:53:21;5294:397:36;2611:53:21;2709:20;;;;;;;;2716:7;2709:20;;;;;;2725:3;2709:20;;;2693:10;2704:1;2693:13;;;;;;;;:::i;:::-;;;;;;:36;;;;2437:303;;2432:3;;;;;:::i;:::-;;;;2393:347;;;;2201:545;;;;:::o;763:337::-;871:19;904:17;935:26;1025:68;1059:4;1077:6;1025:20;:68::i;:::-;986:107;;;;-1:-1:-1;986:107:21;;-1:-1:-1;763:337:21;-1:-1:-1;;763:337:21:o;14:173:36:-;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:1736::-;250:5;303:3;296:4;288:6;284:17;280:27;270:55;;321:1;318;311:12;270:55;357:6;344:20;383:4;406:18;443:2;439;436:10;433:36;;;449:18;;:::i;:::-;495:2;492:1;488:10;518:28;542:2;538;534:11;518:28;:::i;:::-;580:15;;;611:12;;;;643:15;;;677;;;673:24;;670:33;-1:-1:-1;667:53:36;;;716:1;713;706:12;667:53;738:1;729:10;;748:1151;762:2;759:1;756:9;748:1151;;;839:3;826:17;875:2;862:11;859:19;856:39;;;891:1;888;881:12;856:39;918:24;;965:4;-1:-1:-1;;1023:12:36;;;1019:21;;1015:30;-1:-1:-1;1012:50:36;;;1058:1;1055;1048:12;1012:50;1088:22;;:::i;:::-;1137:31;1164:2;1160;1156:11;1137:31;:::i;:::-;1130:5;1123:46;1219:2;1215;1211:11;1198:25;1252:2;1242:8;1239:16;1236:36;;;1268:1;1265;1258:12;1236:36;1303:8;1299:2;1295:17;1285:27;;;1352:3;1347:2;1343;1339:11;1335:21;1325:49;;1370:1;1367;1360:12;1325:49;1418:2;1414;1410:11;1397:25;1445:2;1441;1438:10;1435:36;;;1451:18;;:::i;:::-;1499:48;1543:2;1538;1531:4;1527:2;1523:13;1519:22;1515:31;1499:48;:::i;:::-;1484:63;;1576:2;1567:7;1560:19;1620:3;1615:2;1610;1606;1602:11;1598:20;1595:29;1592:49;;;1637:1;1634;1627:12;1592:49;1698:2;1693;1689;1685:11;1680:2;1671:7;1667:16;1654:47;1748:1;1725:16;;;1721:25;;1714:36;1770:14;;;1763:31;;;;1807:18;;-1:-1:-1;;780:1:36;773:9;;;;;1845:12;;;;1877;;748:1151;;;-1:-1:-1;1917:5:36;192:1736;-1:-1:-1;;;;;;;;192:1736:36:o;1933:186::-;1992:6;2045:2;2033:9;2024:7;2020:23;2016:32;2013:52;;;2061:1;2058;2051:12;2013:52;2084:29;2103:9;2084:29;:::i;:::-;2074:39;1933:186;-1:-1:-1;;;1933:186:36:o;2124:374::-;2230:6;2283:2;2271:9;2262:7;2258:23;2254:32;2251:52;;;2299:1;2296;2289:12;2251:52;2339:9;2326:23;2372:18;2364:6;2361:30;2358:50;;;2404:1;2401;2394:12;2358:50;2427:65;2484:7;2475:6;2464:9;2460:22;2427:65;:::i;:::-;2417:75;2124:374;-1:-1:-1;;;;2124:374:36:o;2503:535::-;2615:6;2623;2676:2;2664:9;2655:7;2651:23;2647:32;2644:52;;;2692:1;2689;2682:12;2644:52;2731:9;2718:23;2784:5;2777:13;2770:21;2763:5;2760:32;2750:60;;2806:1;2803;2796:12;2750:60;2829:5;-1:-1:-1;2885:2:36;2870:18;;2857:32;2912:18;2901:30;;2898:50;;;2944:1;2941;2934:12;2898:50;2967:65;3024:7;3015:6;3004:9;3000:22;2967:65;:::i;:::-;2957:75;;;2503:535;;;;;:::o;3043:180::-;3102:6;3155:2;3143:9;3134:7;3130:23;3126:32;3123:52;;;3171:1;3168;3161:12;3123:52;-1:-1:-1;3194:23:36;;3043:180;-1:-1:-1;3043:180:36:o;3228:810::-;3287:3;3318;3350:5;3344:12;3377:6;3372:3;3365:19;3403:4;3432:2;3427:3;3423:12;3416:19;;3488:2;3478:6;3475:1;3471:14;3464:5;3460:26;3456:35;3525:2;3518:5;3514:14;3546:1;3556:456;3570:6;3567:1;3564:13;3556:456;;;3635:16;;;-1:-1:-1;;3631:30:36;3619:43;;3685:13;;3765:9;;3758:17;3751:25;3738:39;;3816:11;;3810:18;3721:4;3848:13;;;3841:25;;;3887:45;3918:13;;;3810:18;3887:45;:::i;:::-;3990:12;;;;3879:53;-1:-1:-1;;;3955:15:36;;;;3592:1;3585:9;3556:456;;;-1:-1:-1;4028:4:36;;3228:810;-1:-1:-1;;;;;;;3228:810:36:o;4043:257::-;4084:3;4122:5;4116:12;4149:6;4144:3;4137:19;4165:63;4221:6;4214:4;4209:3;4205:14;4198:4;4191:5;4187:16;4165:63;:::i;:::-;4282:2;4261:15;-1:-1:-1;;4257:29:36;4248:39;;;;4289:4;4244:50;;4043:257;-1:-1:-1;;4043:257:36:o;4305:274::-;4434:3;4472:6;4466:13;4488:53;4534:6;4529:3;4522:4;4514:6;4510:17;4488:53;:::i;:::-;4557:16;;;;;4305:274;-1:-1:-1;;4305:274:36:o;4792:315::-;5019:2;5008:9;5001:21;4982:4;5039:62;5097:2;5086:9;5082:18;5074:6;5039:62;:::i;6239:871::-;6427:4;6475:2;6464:9;6460:18;6505:6;6494:9;6487:25;6531:2;6569;6564;6553:9;6549:18;6542:30;6592:6;6627;6621:13;6658:6;6650;6643:22;6696:2;6685:9;6681:18;6674:25;;6758:2;6748:6;6745:1;6741:14;6730:9;6726:30;6722:39;6708:53;;6796:2;6788:6;6784:15;6817:1;6827:254;6841:6;6838:1;6835:13;6827:254;;;6934:2;6930:7;6918:9;6910:6;6906:22;6902:36;6897:3;6890:49;6962:39;6994:6;6985;6979:13;6962:39;:::i;:::-;6952:49;-1:-1:-1;7059:12:36;;;;7024:15;;;;6863:1;6856:9;6827:254;;;-1:-1:-1;7098:6:36;;6239:871;-1:-1:-1;;;;;;;;6239:871:36:o;7115:457::-;7398:6;7387:9;7380:25;7441:6;7436:2;7425:9;7421:18;7414:34;7484:2;7479;7468:9;7464:18;7457:30;7361:4;7504:62;7562:2;7551:9;7547:18;7539:6;7504:62;:::i;:::-;7496:70;7115:457;-1:-1:-1;;;;;7115:457:36:o;7577:257::-;7649:4;7643:11;;;7681:17;;7728:18;7713:34;;7749:22;;;7710:62;7707:88;;;7775:18;;:::i;:::-;7811:4;7804:24;7577:257;:::o;7839:275::-;7910:2;7904:9;7975:2;7956:13;;-1:-1:-1;;7952:27:36;7940:40;;8010:18;7995:34;;8031:22;;;7992:62;7989:88;;;8057:18;;:::i;:::-;8093:2;8086:22;7839:275;;-1:-1:-1;7839:275:36:o;8119:125::-;8159:4;8187:1;8184;8181:8;8178:34;;;8192:18;;:::i;:::-;-1:-1:-1;8229:9:36;;8119:125::o;8249:258::-;8321:1;8331:113;8345:6;8342:1;8339:13;8331:113;;;8421:11;;;8415:18;8402:11;;;8395:39;8367:2;8360:10;8331:113;;;8462:6;8459:1;8456:13;8453:48;;;8497:1;8488:6;8483:3;8479:16;8472:27;8453:48;;8249:258;;;:::o;8512:135::-;8551:3;-1:-1:-1;;8572:17:36;;8569:43;;;8592:18;;:::i;:::-;-1:-1:-1;8639:1:36;8628:13;;8512:135::o;8652:127::-;8713:10;8708:3;8704:20;8701:1;8694:31;8744:4;8741:1;8734:15;8768:4;8765:1;8758:15;8784:127;8845:10;8840:3;8836:20;8833:1;8826:31;8876:4;8873:1;8866:15;8900:4;8897:1;8890:15;8916:127;8977:10;8972:3;8968:20;8965:1;8958:31;9008:4;9005:1;8998:15;9032:4;9029:1;9022:15"},"gasEstimates":{"creation":{"codeDepositCost":"503600","executionCost":"537","totalCost":"504137"},"external":{"aggregate((address,bytes)[])":"infinite","blockAndAggregate((address,bytes)[])":"infinite","getBlockHash(uint256)":"388","getBlockNumber()":"269","getCurrentBlockCoinbase()":"220","getCurrentBlockDifficulty()":"180","getCurrentBlockGasLimit()":"202","getCurrentBlockTimestamp()":"170","getEthBalance(address)":"3068","getLastBlockHash()":"332","tryAggregate(bool,(address,bytes)[])":"infinite","tryBlockAndAggregate(bool,(address,bytes)[])":"infinite"}},"methodIdentifiers":{"aggregate((address,bytes)[])":"252dba42","blockAndAggregate((address,bytes)[])":"c3077fa9","getBlockHash(uint256)":"ee82ac5e","getBlockNumber()":"42cbb15c","getCurrentBlockCoinbase()":"a8b0574e","getCurrentBlockDifficulty()":"72425d9d","getCurrentBlockGasLimit()":"86d516e8","getCurrentBlockTimestamp()":"0f28c97d","getEthBalance(address)":"4d2301cc","getLastBlockHash()":"27e86d6e","tryAggregate(bool,(address,bytes)[])":"bce38bd7","tryBlockAndAggregate(bool,(address,bytes)[])":"399542e9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"_calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"_calls\",\"type\":\"tuple[]\"}],\"name\":\"blockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"_calls\",\"type\":\"tuple[]\"}],\"name\":\"tryAggregate\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"_calls\",\"type\":\"tuple[]\"}],\"name\":\"tryBlockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Multicall.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\npragma abicoder v2;\\n\\ncontract Multicall {\\n    struct Call {\\n        address target;\\n        bytes callData;\\n    }\\n    struct Result {\\n        bool success;\\n        bytes returnData;\\n    }\\n\\n    function aggregate(\\n        Call[] memory _calls\\n    ) public returns (uint256 blockNumber, bytes[] memory returnData) {\\n        blockNumber = block.number;\\n        returnData = new bytes[](_calls.length);\\n        for (uint256 i = 0; i < _calls.length; i++) {\\n            (bool success, bytes memory ret) = _calls[i].target.call(\\n                _calls[i].callData\\n            );\\n            require(success, \\\"Multicall aggregate: call failed\\\");\\n            returnData[i] = ret;\\n        }\\n    }\\n\\n    function blockAndAggregate(\\n        Call[] memory _calls\\n    )\\n        public\\n        returns (\\n            uint256 blockNumber,\\n            bytes32 blockHash,\\n            Result[] memory returnData\\n        )\\n    {\\n        (blockNumber, blockHash, returnData) = tryBlockAndAggregate(\\n            true,\\n            _calls\\n        );\\n    }\\n\\n    function getBlockHash(\\n        uint256 _blockNumber\\n    ) public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(_blockNumber);\\n    }\\n\\n    function getBlockNumber() public view returns (uint256 blockNumber) {\\n        blockNumber = block.number;\\n    }\\n\\n    function getCurrentBlockCoinbase() public view returns (address coinbase) {\\n        coinbase = block.coinbase;\\n    }\\n\\n    function getCurrentBlockDifficulty()\\n        public\\n        view\\n        returns (uint256 difficulty)\\n    {\\n        difficulty = block.difficulty;\\n    }\\n\\n    function getCurrentBlockGasLimit() public view returns (uint256 gaslimit) {\\n        gaslimit = block.gaslimit;\\n    }\\n\\n    function getCurrentBlockTimestamp()\\n        public\\n        view\\n        returns (uint256 timestamp)\\n    {\\n        timestamp = block.timestamp;\\n    }\\n\\n    function getEthBalance(\\n        address _addr\\n    ) public view returns (uint256 balance) {\\n        balance = _addr.balance;\\n    }\\n\\n    function getLastBlockHash() public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(block.number - 1);\\n    }\\n\\n    function tryAggregate(\\n        bool _requireSuccess,\\n        Call[] memory _calls\\n    ) public returns (Result[] memory returnData) {\\n        returnData = new Result[](_calls.length);\\n        for (uint256 i = 0; i < _calls.length; i++) {\\n            (bool success, bytes memory ret) = _calls[i].target.call(\\n                _calls[i].callData\\n            );\\n\\n            if (_requireSuccess) {\\n                require(success, \\\"Multicall2 aggregate: call failed\\\");\\n            }\\n\\n            returnData[i] = Result(success, ret);\\n        }\\n    }\\n\\n    function tryBlockAndAggregate(\\n        bool _requireSuccess,\\n        Call[] memory _calls\\n    )\\n        public\\n        returns (\\n            uint256 blockNumber,\\n            bytes32 blockHash,\\n            Result[] memory returnData\\n        )\\n    {\\n        blockNumber = block.number;\\n        blockHash = blockhash(block.number);\\n        returnData = tryAggregate(_requireSuccess, _calls);\\n    }\\n}\\n\",\"keccak256\":\"0x3302bb7433f86cade35af83e56c9e30f645ff14636dff2ad0cbbcbebf811f780\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/base/Owned.sol":{"Owned":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_prevOwner","type":"address"},{"indexed":true,"internalType":"address","name":"_newOwner","type":"address"}],"name":"OwnerUpdate","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"newOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptOwnership()":{"details":"used by a new owner to accept an ownership transfer"},"constructor":{"details":"constructor"},"transferOwnership(address)":{"details":"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner","params":{"_newOwner":"new contract owner"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3048":{"entryPoint":null,"id":3048,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b031916331790556101e5806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806379ba5097146100515780638da5cb5b1461005b578063d4ee1d901461008a578063f2fde38b1461009d575b600080fd5b6100596100b0565b005b60005461006e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60015461006e906001600160a01b031681565b6100596100ab36600461017f565b61012b565b6001546001600160a01b031633146100c757600080fd5b600154600080546040516001600160a01b0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461014257600080fd5b6000546001600160a01b038281169116141561015d57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561019157600080fd5b81356001600160a01b03811681146101a857600080fd5b939250505056fea26469706673582212209196c993ccd12899e9b456f7ab26aca323e956399cc6d970d5a56f4578fedc0064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1E5 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x6E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x6E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x59 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x17F JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP7 0xC9 SWAP4 0xCC 0xD1 0x28 SWAP10 0xE9 0xB4 JUMP 0xF7 0xAB 0x26 0xAC LOG3 0x23 0xE9 JUMP CODECOPY SWAP13 0xC6 0xD9 PUSH17 0xD5A56F4578FEDC0064736F6C6343000807 STOP CALLER ","sourceMap":"72:1019:22:-:0;;;268:56;;;;;;;;;-1:-1:-1;299:5:22;:18;;-1:-1:-1;;;;;;299:18:22;307:10;299:18;;;72:1019;;;;;;"},"deployedBytecode":{"functionDebugData":{"@acceptOwnership_3106":{"entryPoint":176,"id":3106,"parameterSlots":0,"returnSlots":0},"@newOwner_3032":{"entryPoint":null,"id":3032,"parameterSlots":0,"returnSlots":0},"@owner_3030":{"entryPoint":null,"id":3030,"parameterSlots":0,"returnSlots":0},"@transferOwnership_3078":{"entryPoint":299,"id":3078,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:510:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:216:36","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:36"},"nodeType":"YulFunctionCall","src":"132:12:36"},"nodeType":"YulExpressionStatement","src":"132:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:36"},"nodeType":"YulFunctionCall","src":"101:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:36"},"nodeType":"YulFunctionCall","src":"97:32:36"},"nodeType":"YulIf","src":"94:52:36"},{"nodeType":"YulVariableDeclaration","src":"155:36:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"181:9:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"168:12:36"},"nodeType":"YulFunctionCall","src":"168:23:36"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"159:5:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:36"},"nodeType":"YulFunctionCall","src":"256:12:36"},"nodeType":"YulExpressionStatement","src":"256:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"213:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"224:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"239:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"244:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"235:3:36"},"nodeType":"YulFunctionCall","src":"235:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"231:3:36"},"nodeType":"YulFunctionCall","src":"231:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"220:3:36"},"nodeType":"YulFunctionCall","src":"220:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"210:2:36"},"nodeType":"YulFunctionCall","src":"210:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"203:6:36"},"nodeType":"YulFunctionCall","src":"203:50:36"},"nodeType":"YulIf","src":"200:70:36"},{"nodeType":"YulAssignment","src":"279:15:36","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:36"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:36","type":""}],"src":"14:286:36"},{"body":{"nodeType":"YulBlock","src":"406:102:36","statements":[{"nodeType":"YulAssignment","src":"416:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"428:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"439:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"424:3:36"},"nodeType":"YulFunctionCall","src":"424:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"416:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"473:6:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"489:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"494:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"485:3:36"},"nodeType":"YulFunctionCall","src":"485:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"498:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"481:3:36"},"nodeType":"YulFunctionCall","src":"481:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"469:3:36"},"nodeType":"YulFunctionCall","src":"469:32:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"451:6:36"},"nodeType":"YulFunctionCall","src":"451:51:36"},"nodeType":"YulExpressionStatement","src":"451:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"375:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"386:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"397:4:36","type":""}],"src":"305:203:36"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c806379ba5097146100515780638da5cb5b1461005b578063d4ee1d901461008a578063f2fde38b1461009d575b600080fd5b6100596100b0565b005b60005461006e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60015461006e906001600160a01b031681565b6100596100ab36600461017f565b61012b565b6001546001600160a01b031633146100c757600080fd5b600154600080546040516001600160a01b0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461014257600080fd5b6000546001600160a01b038281169116141561015d57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561019157600080fd5b81356001600160a01b03811681146101a857600080fd5b939250505056fea26469706673582212209196c993ccd12899e9b456f7ab26aca323e956399cc6d970d5a56f4578fedc0064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x6E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x6E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x59 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x17F JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP7 0xC9 SWAP4 0xCC 0xD1 0x28 SWAP10 0xE9 0xB4 JUMP 0xF7 0xAB 0x26 0xAC LOG3 0x23 0xE9 JUMP CODECOPY SWAP13 0xC6 0xD9 PUSH17 0xD5A56F4578FEDC0064736F6C6343000807 STOP CALLER ","sourceMap":"72:1019:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;905:184;;;:::i;:::-;;93:20;;;;;-1:-1:-1;;;;;93:20:22;;;;;;-1:-1:-1;;;;;469:32:36;;;451:51;;439:2;424:18;93:20:22;;;;;;;119:23;;;;;-1:-1:-1;;;;;119:23:22;;;680:139;;;;;;:::i;:::-;;:::i;905:184::-;973:8;;-1:-1:-1;;;;;973:8:22;959:10;:22;951:31;;;;;;1016:8;;;1009:5;;997:28;;-1:-1:-1;;;;;1016:8:22;;;;1009:5;;;;997:28;;;1043:8;;;;1035:16;;-1:-1:-1;;;;;;1035:16:22;;;-1:-1:-1;;;;;1043:8:22;;1035:16;;;;1061:21;;;905:184::o;680:139::-;425:5;;-1:-1:-1;;;;;425:5:22;411:10;:19;403:28;;;;;;776:5:::1;::::0;-1:-1:-1;;;;;763:18:22;;::::1;776:5:::0;::::1;763:18;;755:27;;;::::0;::::1;;792:8;:20:::0;;-1:-1:-1;;;;;;792:20:22::1;-1:-1:-1::0;;;;;792:20:22;;;::::1;::::0;;;::::1;::::0;;680:139::o;14:286:36:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:36;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:36:o"},"gasEstimates":{"creation":{"codeDepositCost":"97000","executionCost":"24382","totalCost":"121382"},"external":{"acceptOwnership()":"56497","newOwner()":"2347","owner()":"2325","transferOwnership(address)":"28873"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","newOwner()":"d4ee1d90","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\"},\"constructor\":{\"details\":\"constructor\"},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner\",\"params\":{\"_newOwner\":\"new contract owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Owned.sol\":\"Owned\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity >=0.8.4;\\n\\ncontract Owned {\\n    address public owner;\\n    address public newOwner;\\n\\n    event OwnerUpdate(address indexed _prevOwner, address indexed _newOwner);\\n\\n    /**\\n        @dev constructor\\n    */\\n    constructor() public {\\n        owner = msg.sender;\\n    }\\n\\n    // allows execution by the owner only\\n    modifier ownerOnly() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n        @dev allows transferring the contract ownership\\n        the new owner still needs to accept the transfer\\n        can only be called by the contract owner\\n\\n        @param _newOwner    new contract owner\\n    */\\n    function transferOwnership(address _newOwner) external ownerOnly {\\n        require(_newOwner != owner);\\n        newOwner = _newOwner;\\n    }\\n\\n    /**\\n        @dev used by a new owner to accept an ownership transfer\\n    */\\n    function acceptOwnership() external {\\n        require(msg.sender == newOwner);\\n        emit OwnerUpdate(owner, newOwner);\\n        owner = newOwner;\\n        newOwner = address(0);\\n    }\\n}\\n\",\"keccak256\":\"0x1c385eb7e54f859b905be6f337bffe52b545d27ec4c4dfe7ad91a886010473d3\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3030,"contract":"contracts/base/Owned.sol:Owned","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":3032,"contract":"contracts/base/Owned.sol:Owned","label":"newOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/base/Utils.sol":{"Utils":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3114":{"entryPoint":null,"id":3114,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212208989613756e5de8345d24bcca14a0d28f13265d0706b382cf011d2a00cf36b6164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 DUP10 PUSH2 0x3756 0xE5 0xDE DUP4 GASLIMIT 0xD2 0x4B 0xCC LOG1 0x4A 0xD 0x28 CALL ORIGIN PUSH6 0xD0706B382CF0 GT 0xD2 LOG0 0xC RETURN PUSH12 0x6164736F6C63430008070033 ","sourceMap":"72:581:23:-:0;;;128:23;;;;;;;;;;72:581;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212208989613756e5de8345d24bcca14a0d28f13265d0706b382cf011d2a00cf36b6164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 DUP10 PUSH2 0x3756 0xE5 0xDE DUP4 GASLIMIT 0xD2 0x4B 0xCC LOG1 0x4A 0xD 0x28 CALL ORIGIN PUSH6 0xD0706B382CF0 GT 0xD2 LOG0 0xC RETURN PUSH12 0x6164736F6C63430008070033 ","sourceMap":"72:581:23:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Utils.sol\":\"Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity >=0.8.4;\\n\\ncontract Utils {\\n    /**\\n        constructor\\n    */\\n    constructor() public {}\\n\\n    // verifies that an amount is greater than zero\\n    modifier greaterThanZero(uint256 _amount) {\\n        require(_amount > 0);\\n        _;\\n    }\\n\\n    // validates an address - currently only checks that it isn't null\\n    modifier validAddress(address _address) {\\n        require(_address != address(0));\\n        _;\\n    }\\n\\n    // verifies that the address is different than this contract address\\n    modifier notThis(address _address) {\\n        require(_address != address(this));\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xeea46f69a9ab7625fc4460a447fe18326372513fc523d112e383c5ed825fc5da\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"constructor"}},"version":1}}},"contracts/interfaces/IChainlinkPriceFeed.sol":{"IChainlinkPriceFeed":{"abi":[{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"latestAnswer()":"50d25bcd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IChainlinkPriceFeed.sol\":\"IChainlinkPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IChainlinkPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IChainlinkPriceFeed {\\n    function latestAnswer() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd5423817a16417540a692840c74370c3e808509460f61031d58bcc6a027f1358\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IERC20.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"uint8","name":"_v","type":"uint8"},{"internalType":"bytes32","name":"_r","type":"bytes32"},{"internalType":"bytes32","name":"_s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IGMXPriceFeed.sol":{"IGMXPriceFeed":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"prices","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"prices(address)":"cfed246b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGMXPriceFeed.sol\":\"IGMXPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IGMXPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IGMXPriceFeed {\\n    function prices(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x458962ab0e9a7a9a9f5592fec64e102e660d58218b2698e44861fd30af97b26d\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IPriceFeed.sol":{"IPriceFeed":{"abi":[{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getHighestPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getLowestPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"PRECISION()":"aaf5eb68","getHighestPrice(address,address)":"1a102f67","getLowestPrice(address,address)":"e6c14362"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getHighestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getLowestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceFeed.sol\":\"IPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeed {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getHighestPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n\\n    function getLowestPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xdac54d0d581c92b44eb91ea93de03ef56bbb44c3eb027c302c81f40ad2bff9d2\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IPriceFeedIntegration.sol":{"IPriceFeedIntegration":{"abi":[{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"PRECISION()":"aaf5eb68","getPrice(address,address)":"ac41865a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceFeedIntegration.sol\":\"IPriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\ninterface IPriceFeedIntegration {\\n    function PRECISION() external view returns (uint256);\\n    \\n    function getPrice(\\n        address _baseToken,\\n        address _quoteToken\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IWETH.sol":{"IWETH":{"abi":[{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"deposit()":"d0e30db0","transfer(address,uint256)":"a9059cbb","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\r\\npragma solidity >=0.8.4;\\r\\n\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function transfer(address _to, uint256 _value) external returns (bool);\\r\\n\\r\\n    function withdraw(uint256) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x8d1a84e20a808248ce28726ef5ca37834b1f087a729de5b8da1f84ba7b5fbf2a\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/ChainId.sol":{"ChainId":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Function for getting the current chain ID","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e51d5d613349b829be2ed7053ae8ba8730e7c334caf956ae5cc6d8bf672a049664736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SAR 0x5D PUSH2 0x3349 0xB8 0x29 0xBE 0x2E 0xD7 SDIV GASPRICE 0xE8 0xBA DUP8 ADDRESS 0xE7 0xC3 CALLVALUE 0xCA 0xF9 JUMP 0xAE 0x5C 0xC6 0xD8 0xBF PUSH8 0x2A049664736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ","sourceMap":"124:232:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;124:232:30;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e51d5d613349b829be2ed7053ae8ba8730e7c334caf956ae5cc6d8bf672a049664736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SAR 0x5D PUSH2 0x3349 0xB8 0x29 0xBE 0x2E 0xD7 SDIV GASPRICE 0xE8 0xBA DUP8 ADDRESS 0xE7 0xC3 CALLVALUE 0xCA 0xF9 JUMP 0xAE 0x5C 0xC6 0xD8 0xBF PUSH8 0x2A049664736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ","sourceMap":"124:232:30:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"get()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Function for getting the current chain ID\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/ChainId.sol\":\"ChainId\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/ChainId.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.0;\\n\\n/// @title Function for getting the current chain ID\\nlibrary ChainId {\\n    /// @dev Gets the current chain ID\\n    /// @return chainId The current chain ID\\n    function get() internal view returns (uint256 chainId) {\\n        assembly {\\n            chainId := chainid()\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbf089e36c798708121cedf8110fbbffe3cdd33cab228d298436016d0e59568e0\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/LowGasSafeMath.sol":{"LowGasSafeMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Optimized overflow and underflow safe math operations","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a06a524f08e7b3f147c6aaf1eb93019fc021b209c699a4b16dd0b9f19a433cc364736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH11 0x524F08E7B3F147C6AAF1EB SWAP4 ADD SWAP16 0xC0 0x21 0xB2 MULMOD 0xC6 SWAP10 LOG4 0xB1 PUSH14 0xD0B9F19A433CC364736F6C634300 ADDMOD SMOD STOP CALLER ","sourceMap":"249:1726:31:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;249:1726:31;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a06a524f08e7b3f147c6aaf1eb93019fc021b209c699a4b16dd0b9f19a433cc364736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH11 0x524F08E7B3F147C6AAF1EB SWAP4 ADD SWAP16 0xC0 0x21 0xB2 MULMOD 0xC6 SWAP10 LOG4 0xB1 PUSH14 0xD0B9F19A433CC364736F6C634300 ADDMOD SMOD STOP CALLER ","sourceMap":"249:1726:31:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(int256,int256)":"infinite","add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","mul(uint256,uint256)":"infinite","sub(int256,int256)":"infinite","sub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LowGasSafeMath.sol\":\"LowGasSafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/LowGasSafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.0;\\n\\n/// @title Optimized overflow and underflow safe math operations\\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\\nlibrary LowGasSafeMath {\\n    /// @notice Returns x + y, reverts if sum overflows uint256\\n    /// @param x The augend\\n    /// @param y The addend\\n    /// @return z The sum of x and y\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    /// @notice Returns x - y, reverts if underflows\\n    /// @param x The minuend\\n    /// @param y The subtrahend\\n    /// @return z The difference of x and y\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n    /// @notice Returns x * y, reverts if overflows\\n    /// @param x The multiplicand\\n    /// @param y The multiplier\\n    /// @return z The product of x and y\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(x == 0 || (z = x * y) / x == y);\\n    }\\n\\n    /// @notice Returns x / y, reverts if y == 0\\n    /// @param x The numerator\\n    /// @param y The denominator\\n    /// @return z The product of x and y\\n    function div(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(y != 0);\\n        z = x / y;\\n    }\\n\\n    /// @notice Returns x + y, reverts if overflows or underflows\\n    /// @param x The augend\\n    /// @param y The addend\\n    /// @return z The sum of x and y\\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\\n        require((z = x + y) >= x == (y >= 0));\\n    }\\n\\n    /// @notice Returns x - y, reverts if overflows or underflows\\n    /// @param x The minuend\\n    /// @param y The subtrahend\\n    /// @return z The difference of x and y\\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\\n        require((z = x - y) <= x == (y >= 0));\\n    }\\n}\",\"keccak256\":\"0xfda83d0f6f1c0f370e438c758712d1003fa304de11bb9b800b1edebf33a3dd8f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost","version":1}}},"contracts/libraries/Math.sol":{"Math":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220312c3068263390a35091055d36220ad308629b1ebdee12b5f2a21f165e811c5664736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x2C ADDRESS PUSH9 0x263390A35091055D36 0x22 EXP 0xD3 ADDMOD PUSH3 0x9B1EBD 0xEE SLT 0xB5 CALLCODE LOG2 0x1F AND 0x5E DUP2 SHR JUMP PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"124:534:32:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;124:534:32;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220312c3068263390a35091055d36220ad308629b1ebdee12b5f2a21f165e811c5664736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x2C ADDRESS PUSH9 0x263390A35091055D36 0x22 EXP 0xD3 ADDMOD PUSH3 0x9B1EBD 0xEE SLT 0xB5 CALLCODE LOG2 0x1F AND 0x5E DUP2 SHR JUMP PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"124:534:32:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"min(uint256,uint256)":"infinite","sqrt(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Math.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\n// a library for performing various math operations\\n\\nlibrary Math {\\n    function min(uint _x, uint _y) internal pure returns (uint z) {\\n        z = _x < _y ? _x : _y;\\n    }\\n\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\n    function sqrt(uint _y) internal pure returns (uint z) {\\n        if (_y > 3) {\\n            z = _y;\\n            uint x = _y / 2 + 1;\\n            while (x < z) {\\n                z = x;\\n                x = (_y / x + x) / 2;\\n            }\\n        } else if (_y != 0) {\\n            z = 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x05700d7ff61f03e01d3c74dac47a4939dec67d452f07ef52ae46808c6d80242d\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/PoolAddress.sol":{"PoolAddress":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Provides functions for deriving a pool address from the pool deployer, tokens","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2ba8bfd667ac0e09d524e89cae53a43fc4c465e54386055696bab3b6b4dfe3b64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xBA DUP12 REVERT PUSH7 0x7AC0E09D524E89 0xCA 0xE5 GASPRICE NUMBER 0xFC 0x4C CHAINID 0x5E SLOAD CODESIZE PUSH1 0x55 PUSH10 0x6BAB3B6B4DFE3B64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"160:958:33:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;160:958:33;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2ba8bfd667ac0e09d524e89cae53a43fc4c465e54386055696bab3b6b4dfe3b64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xBA DUP12 REVERT PUSH7 0x7AC0E09D524E89 0xCA 0xE5 GASPRICE NUMBER 0xFC 0x4C CHAINID 0x5E SLOAD CODESIZE PUSH1 0x55 PUSH10 0x6BAB3B6B4DFE3B64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"160:958:33:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"computeAddress(address,struct PoolAddress.PoolKey memory)":"infinite","getPoolKey(address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the pool deployer, tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/PoolAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\n/// @title Provides functions for deriving a pool address from the pool deployer, tokens\\nlibrary PoolAddress {\\n    bytes32 internal constant POOL_INIT_CODE_HASH =\\n        0x5d5042c6f18fddfd115258692fd1791bd001ac84854ff0ae0ec27cbf2c2a40aa;\\n\\n    /// @notice The identifying key of the pool\\n    struct PoolKey {\\n        address token;\\n    }\\n\\n    function getPoolKey(\\n        address _token\\n    ) internal pure returns (PoolKey memory) {\\n        return PoolKey({token: _token});\\n    }\\n\\n    function computeAddress(\\n        address _poolDeployer,\\n        PoolKey memory _key\\n    ) internal pure returns (address pool) {\\n        pool = address(\\n            uint160(\\n                uint256(\\n                    keccak256(\\n                        abi.encodePacked(\\n                            hex\\\"ff\\\",\\n                            _poolDeployer,\\n                            keccak256(abi.encode(_key.token)),\\n                            POOL_INIT_CODE_HASH\\n                        )\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x89987bbd9bde8c98148647ade9b9c169b4a7c72f0348348f835849f36fc4cfdb\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/TransferHelper.sol":{"TransferHelper":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bb40d7028c79b4e53abf5874575e3f9add0fef64bba67e9970457bc4c5bb48f64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xB40D7028C79B4E53ABF58745 PUSH22 0xE3F9ADD0FEF64BBA67E9970457BC4C5BB48F64736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"182:1715:34:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;182:1715:34;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bb40d7028c79b4e53abf5874575e3f9add0fef64bba67e9970457bc4c5bb48f64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xB40D7028C79B4E53ABF58745 PUSH22 0xE3F9ADD0FEF64BBA67E9970457BC4C5BB48F64736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"182:1715:34:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"safeApprove(address,address,uint256)":"infinite","safeTransfer(address,address,uint256)":"infinite","safeTransferETH(address,uint256)":"infinite","safeTransferFrom(address,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(address _token, address _to, uint256 _value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeApprove: approve failed\\\"\\n        );\\n    }\\n\\n    function safeTransfer(\\n        address _token,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::safeTransfer: transfer failed\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address _token,\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = _token.call(\\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper::transferFrom: transferFrom failed\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address _to, uint256 _value) internal {\\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\\n        require(\\n            success,\\n            \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/MockERC20.sol":{"MockERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"supply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":2,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_3813":{"entryPoint":null,"id":3813,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_698":{"entryPoint":null,"id":698,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_687":{"entryPoint":null,"id":687,"parameterSlots":3,"returnSlots":0},"@_mint_516":{"entryPoint":235,"id":516,"parameterSlots":2,"returnSlots":0},"@_msgSender_814":{"entryPoint":149,"id":814,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":153,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory":{"entryPoint":782,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":897,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":936,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":997,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2818:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"78:821:36","statements":[{"body":{"nodeType":"YulBlock","src":"127:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"136:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"139:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"129:6:36"},"nodeType":"YulFunctionCall","src":"129:12:36"},"nodeType":"YulExpressionStatement","src":"129:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"106:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"114:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"102:3:36"},"nodeType":"YulFunctionCall","src":"102:17:36"},{"name":"end","nodeType":"YulIdentifier","src":"121:3:36"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"98:3:36"},"nodeType":"YulFunctionCall","src":"98:27:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"91:6:36"},"nodeType":"YulFunctionCall","src":"91:35:36"},"nodeType":"YulIf","src":"88:55:36"},{"nodeType":"YulVariableDeclaration","src":"152:23:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"168:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"162:5:36"},"nodeType":"YulFunctionCall","src":"162:13:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"156:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"184:28:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"202:2:36","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"206:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"198:3:36"},"nodeType":"YulFunctionCall","src":"198:10:36"},{"kind":"number","nodeType":"YulLiteral","src":"210:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"194:3:36"},"nodeType":"YulFunctionCall","src":"194:18:36"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"188:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"235:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"237:16:36"},"nodeType":"YulFunctionCall","src":"237:18:36"},"nodeType":"YulExpressionStatement","src":"237:18:36"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"227:2:36"},{"name":"_2","nodeType":"YulIdentifier","src":"231:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"224:2:36"},"nodeType":"YulFunctionCall","src":"224:10:36"},"nodeType":"YulIf","src":"221:36:36"},{"nodeType":"YulVariableDeclaration","src":"266:17:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"280:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"276:3:36"},"nodeType":"YulFunctionCall","src":"276:7:36"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"270:2:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"292:23:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"312:2:36","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"306:5:36"},"nodeType":"YulFunctionCall","src":"306:9:36"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"296:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"324:71:36","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"346:6:36"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"370:2:36"},{"kind":"number","nodeType":"YulLiteral","src":"374:4:36","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"366:3:36"},"nodeType":"YulFunctionCall","src":"366:13:36"},{"name":"_3","nodeType":"YulIdentifier","src":"381:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"362:3:36"},"nodeType":"YulFunctionCall","src":"362:22:36"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:36","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"358:3:36"},"nodeType":"YulFunctionCall","src":"358:31:36"},{"name":"_3","nodeType":"YulIdentifier","src":"391:2:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"354:3:36"},"nodeType":"YulFunctionCall","src":"354:40:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"342:3:36"},"nodeType":"YulFunctionCall","src":"342:53:36"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"328:10:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"454:22:36","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"456:16:36"},"nodeType":"YulFunctionCall","src":"456:18:36"},"nodeType":"YulExpressionStatement","src":"456:18:36"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"413:10:36"},{"name":"_2","nodeType":"YulIdentifier","src":"425:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"410:2:36"},"nodeType":"YulFunctionCall","src":"410:18:36"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"433:10:36"},{"name":"memPtr","nodeType":"YulIdentifier","src":"445:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"430:2:36"},"nodeType":"YulFunctionCall","src":"430:22:36"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"407:2:36"},"nodeType":"YulFunctionCall","src":"407:46:36"},"nodeType":"YulIf","src":"404:72:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"492:2:36","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"496:10:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"485:6:36"},"nodeType":"YulFunctionCall","src":"485:22:36"},"nodeType":"YulExpressionStatement","src":"485:22:36"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"523:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"531:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"516:6:36"},"nodeType":"YulFunctionCall","src":"516:18:36"},"nodeType":"YulExpressionStatement","src":"516:18:36"},{"nodeType":"YulVariableDeclaration","src":"543:14:36","value":{"kind":"number","nodeType":"YulLiteral","src":"553:4:36","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"547:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"603:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"612:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"615:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"605:6:36"},"nodeType":"YulFunctionCall","src":"605:12:36"},"nodeType":"YulExpressionStatement","src":"605:12:36"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"580:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"588:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"576:3:36"},"nodeType":"YulFunctionCall","src":"576:15:36"},{"name":"_4","nodeType":"YulIdentifier","src":"593:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"572:3:36"},"nodeType":"YulFunctionCall","src":"572:24:36"},{"name":"end","nodeType":"YulIdentifier","src":"598:3:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"569:2:36"},"nodeType":"YulFunctionCall","src":"569:33:36"},"nodeType":"YulIf","src":"566:53:36"},{"nodeType":"YulVariableDeclaration","src":"628:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"637:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"632:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"693:87:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"722:6:36"},{"name":"i","nodeType":"YulIdentifier","src":"730:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"718:3:36"},"nodeType":"YulFunctionCall","src":"718:14:36"},{"name":"_4","nodeType":"YulIdentifier","src":"734:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:36"},"nodeType":"YulFunctionCall","src":"714:23:36"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"753:6:36"},{"name":"i","nodeType":"YulIdentifier","src":"761:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"749:3:36"},"nodeType":"YulFunctionCall","src":"749:14:36"},{"name":"_4","nodeType":"YulIdentifier","src":"765:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:36"},"nodeType":"YulFunctionCall","src":"745:23:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"739:5:36"},"nodeType":"YulFunctionCall","src":"739:30:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"707:6:36"},"nodeType":"YulFunctionCall","src":"707:63:36"},"nodeType":"YulExpressionStatement","src":"707:63:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"658:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"661:2:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"655:2:36"},"nodeType":"YulFunctionCall","src":"655:9:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"665:19:36","statements":[{"nodeType":"YulAssignment","src":"667:15:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"676:1:36"},{"name":"_4","nodeType":"YulIdentifier","src":"679:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:36"},"nodeType":"YulFunctionCall","src":"672:10:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"667:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"651:3:36","statements":[]},"src":"647:133:36"},{"body":{"nodeType":"YulBlock","src":"810:59:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"839:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"847:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:36"},"nodeType":"YulFunctionCall","src":"835:15:36"},{"name":"_4","nodeType":"YulIdentifier","src":"852:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:36"},"nodeType":"YulFunctionCall","src":"831:24:36"},{"kind":"number","nodeType":"YulLiteral","src":"857:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"824:6:36"},"nodeType":"YulFunctionCall","src":"824:35:36"},"nodeType":"YulExpressionStatement","src":"824:35:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"795:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"798:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"792:2:36"},"nodeType":"YulFunctionCall","src":"792:9:36"},"nodeType":"YulIf","src":"789:80:36"},{"nodeType":"YulAssignment","src":"878:15:36","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"887:6:36"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"878:5:36"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:36","type":""},{"name":"end","nodeType":"YulTypedName","src":"60:3:36","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"68:5:36","type":""}],"src":"14:885:36"},{"body":{"nodeType":"YulBlock","src":"1039:488:36","statements":[{"body":{"nodeType":"YulBlock","src":"1085:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1094:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1097:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1087:6:36"},"nodeType":"YulFunctionCall","src":"1087:12:36"},"nodeType":"YulExpressionStatement","src":"1087:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"1069:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1056:3:36"},"nodeType":"YulFunctionCall","src":"1056:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"1081:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1052:3:36"},"nodeType":"YulFunctionCall","src":"1052:32:36"},"nodeType":"YulIf","src":"1049:52:36"},{"nodeType":"YulVariableDeclaration","src":"1110:30:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1130:9:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1124:5:36"},"nodeType":"YulFunctionCall","src":"1124:16:36"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1114:6:36","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1149:28:36","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1167:2:36","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1171:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1163:3:36"},"nodeType":"YulFunctionCall","src":"1163:10:36"},{"kind":"number","nodeType":"YulLiteral","src":"1175:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1159:3:36"},"nodeType":"YulFunctionCall","src":"1159:18:36"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1153:2:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1204:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1213:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1206:6:36"},"nodeType":"YulFunctionCall","src":"1206:12:36"},"nodeType":"YulExpressionStatement","src":"1206:12:36"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1192:6:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1200:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1189:2:36"},"nodeType":"YulFunctionCall","src":"1189:14:36"},"nodeType":"YulIf","src":"1186:34:36"},{"nodeType":"YulAssignment","src":"1229:71:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1272:9:36"},{"name":"offset","nodeType":"YulIdentifier","src":"1283:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1268:3:36"},"nodeType":"YulFunctionCall","src":"1268:22:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1292:7:36"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1239:28:36"},"nodeType":"YulFunctionCall","src":"1239:61:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1229:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"1309:41:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1335:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1346:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1331:3:36"},"nodeType":"YulFunctionCall","src":"1331:18:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1325:5:36"},"nodeType":"YulFunctionCall","src":"1325:25:36"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1313:8:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1379:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1388:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1391:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1381:6:36"},"nodeType":"YulFunctionCall","src":"1381:12:36"},"nodeType":"YulExpressionStatement","src":"1381:12:36"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1365:8:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1375:2:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1362:2:36"},"nodeType":"YulFunctionCall","src":"1362:16:36"},"nodeType":"YulIf","src":"1359:36:36"},{"nodeType":"YulAssignment","src":"1404:73:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1447:9:36"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1458:8:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1443:3:36"},"nodeType":"YulFunctionCall","src":"1443:24:36"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1469:7:36"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1414:28:36"},"nodeType":"YulFunctionCall","src":"1414:63:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1404:6:36"}]},{"nodeType":"YulAssignment","src":"1486:35:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1506:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1517:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1502:3:36"},"nodeType":"YulFunctionCall","src":"1502:18:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1496:5:36"},"nodeType":"YulFunctionCall","src":"1496:25:36"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1486:6:36"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"989:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1000:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1012:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1020:6:36","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1028:6:36","type":""}],"src":"904:623:36"},{"body":{"nodeType":"YulBlock","src":"1706:181:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1723:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1734:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1716:6:36"},"nodeType":"YulFunctionCall","src":"1716:21:36"},"nodeType":"YulExpressionStatement","src":"1716:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1768:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1753:3:36"},"nodeType":"YulFunctionCall","src":"1753:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"1773:2:36","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1746:6:36"},"nodeType":"YulFunctionCall","src":"1746:30:36"},"nodeType":"YulExpressionStatement","src":"1746:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1796:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1807:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1792:3:36"},"nodeType":"YulFunctionCall","src":"1792:18:36"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"1812:33:36","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1785:6:36"},"nodeType":"YulFunctionCall","src":"1785:61:36"},"nodeType":"YulExpressionStatement","src":"1785:61:36"},{"nodeType":"YulAssignment","src":"1855:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1867:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1878:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:36"},"nodeType":"YulFunctionCall","src":"1863:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1855:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1683:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1697:4:36","type":""}],"src":"1532:355:36"},{"body":{"nodeType":"YulBlock","src":"1993:76:36","statements":[{"nodeType":"YulAssignment","src":"2003:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2015:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2026:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2011:3:36"},"nodeType":"YulFunctionCall","src":"2011:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2003:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2045:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"2056:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2038:6:36"},"nodeType":"YulFunctionCall","src":"2038:25:36"},"nodeType":"YulExpressionStatement","src":"2038:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1962:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1973:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1984:4:36","type":""}],"src":"1892:177:36"},{"body":{"nodeType":"YulBlock","src":"2122:177:36","statements":[{"body":{"nodeType":"YulBlock","src":"2157:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2178:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2185:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2190:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2181:3:36"},"nodeType":"YulFunctionCall","src":"2181:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2171:6:36"},"nodeType":"YulFunctionCall","src":"2171:31:36"},"nodeType":"YulExpressionStatement","src":"2171:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2222:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2225:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2215:6:36"},"nodeType":"YulFunctionCall","src":"2215:15:36"},"nodeType":"YulExpressionStatement","src":"2215:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2250:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2253:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2243:6:36"},"nodeType":"YulFunctionCall","src":"2243:15:36"},"nodeType":"YulExpressionStatement","src":"2243:15:36"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2138:1:36"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2145:1:36"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2141:3:36"},"nodeType":"YulFunctionCall","src":"2141:6:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2135:2:36"},"nodeType":"YulFunctionCall","src":"2135:13:36"},"nodeType":"YulIf","src":"2132:136:36"},{"nodeType":"YulAssignment","src":"2277:16:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2288:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"2291:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2284:3:36"},"nodeType":"YulFunctionCall","src":"2284:9:36"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2277:3:36"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2105:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"2108:1:36","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2114:3:36","type":""}],"src":"2074:225:36"},{"body":{"nodeType":"YulBlock","src":"2359:325:36","statements":[{"nodeType":"YulAssignment","src":"2369:22:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2383:1:36","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2386:4:36"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2379:3:36"},"nodeType":"YulFunctionCall","src":"2379:12:36"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2369:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"2400:38:36","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2430:4:36"},{"kind":"number","nodeType":"YulLiteral","src":"2436:1:36","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2426:3:36"},"nodeType":"YulFunctionCall","src":"2426:12:36"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2404:18:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"2477:31:36","statements":[{"nodeType":"YulAssignment","src":"2479:27:36","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2493:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"2501:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2489:3:36"},"nodeType":"YulFunctionCall","src":"2489:17:36"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2479:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2457:18:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:36"},"nodeType":"YulFunctionCall","src":"2450:26:36"},"nodeType":"YulIf","src":"2447:61:36"},{"body":{"nodeType":"YulBlock","src":"2567:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2588:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2595:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2600:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2591:3:36"},"nodeType":"YulFunctionCall","src":"2591:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2581:6:36"},"nodeType":"YulFunctionCall","src":"2581:31:36"},"nodeType":"YulExpressionStatement","src":"2581:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2632:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2635:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2625:6:36"},"nodeType":"YulFunctionCall","src":"2625:15:36"},"nodeType":"YulExpressionStatement","src":"2625:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2660:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2663:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2653:6:36"},"nodeType":"YulFunctionCall","src":"2653:15:36"},"nodeType":"YulExpressionStatement","src":"2653:15:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2523:18:36"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2546:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"2554:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2543:2:36"},"nodeType":"YulFunctionCall","src":"2543:14:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2520:2:36"},"nodeType":"YulFunctionCall","src":"2520:38:36"},"nodeType":"YulIf","src":"2517:161:36"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2339:4:36","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2348:6:36","type":""}],"src":"2304:380:36"},{"body":{"nodeType":"YulBlock","src":"2721:95:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2738:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2745:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2750:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2741:3:36"},"nodeType":"YulFunctionCall","src":"2741:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2731:6:36"},"nodeType":"YulFunctionCall","src":"2731:31:36"},"nodeType":"YulExpressionStatement","src":"2731:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2778:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2781:4:36","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2771:6:36"},"nodeType":"YulFunctionCall","src":"2771:15:36"},"nodeType":"YulExpressionStatement","src":"2771:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2802:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2805:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2795:6:36"},"nodeType":"YulFunctionCall","src":"2795:15:36"},"nodeType":"YulExpressionStatement","src":"2795:15:36"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2689:127:36"}]},"contents":"{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000f7138038062000f7183398101604081905262000034916200030e565b8251839083906200004d906003906020850190620001b1565b50805162000063906004906020840190620001b1565b505050620000806200007a6200009560201b60201c565b62000099565b6200008c3382620000eb565b505050620003fb565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001465760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200015a919062000381565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001bf90620003a8565b90600052602060002090601f016020900481019282620001e357600085556200022e565b82601f10620001fe57805160ff19168380011785556200022e565b828001600101855582156200022e579182015b828111156200022e57825182559160200191906001019062000211565b506200023c92915062000240565b5090565b5b808211156200023c576000815560010162000241565b600082601f8301126200026957600080fd5b81516001600160401b0380821115620002865762000286620003e5565b604051601f8301601f19908116603f01168101908282118183101715620002b157620002b1620003e5565b81604052838152602092508683858801011115620002ce57600080fd5b600091505b83821015620002f25785820183015181830184015290820190620002d3565b83821115620003045760008385830101525b9695505050505050565b6000806000606084860312156200032457600080fd5b83516001600160401b03808211156200033c57600080fd5b6200034a8783880162000257565b945060208601519150808211156200036157600080fd5b50620003708682870162000257565b925050604084015190509250925092565b60008219821115620003a357634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003bd57607f821691505b60208210811415620003df57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610b66806200040b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146101eb578063a9059cbb146101fe578063dd62ed3e14610211578063f2fde38b1461022457600080fd5b8063715018a6146101ab5780638da5cb5b146101b557806395d89b41146101d05780639dc29fac146101d857600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806370a082311461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610237565b60405161010f9190610a7a565b60405180910390f35b61012b610126366004610a50565b6102c9565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610a14565b6102e1565b6040516012815260200161010f565b61012b61017d366004610a50565b610305565b61013f6101903660046109bf565b6001600160a01b031660009081526020819052604090205490565b6101b3610327565b005b6005546040516001600160a01b03909116815260200161010f565b61010261033b565b6101b36101e6366004610a50565b61034a565b61012b6101f9366004610a50565b610358565b61012b61020c366004610a50565b6103d8565b61013f61021f3660046109e1565b6103e6565b6101b36102323660046109bf565b610411565b60606003805461024690610af5565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610af5565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6000336102d781858561048a565b5060019392505050565b6000336102ef8582856105af565b6102fa858585610629565b506001949350505050565b6000336102d781858561031883836103e6565b6103229190610acf565b61048a565b61032f6107cd565b6103396000610827565b565b60606004805461024690610af5565b6103548282610879565b5050565b6000338161036682866103e6565b9050838110156103cb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102fa828686840361048a565b6000336102d7818585610629565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104196107cd565b6001600160a01b03811661047e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c2565b61048781610827565b50565b6001600160a01b0383166104ec5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c2565b6001600160a01b03821661054d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105bb84846103e6565b9050600019811461062357818110156106165760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103c2565b610623848484840361048a565b50505050565b6001600160a01b03831661068d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c2565b6001600160a01b0382166106ef5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c2565b6001600160a01b038316600090815260208190526040902054818110156107675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c2565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610623565b6005546001600160a01b031633146103395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c2565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166108d95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c2565b6001600160a01b0382166000908152602081905260409020548181101561094d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c2565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105a2565b80356001600160a01b03811681146109ba57600080fd5b919050565b6000602082840312156109d157600080fd5b6109da826109a3565b9392505050565b600080604083850312156109f457600080fd5b6109fd836109a3565b9150610a0b602084016109a3565b90509250929050565b600080600060608486031215610a2957600080fd5b610a32846109a3565b9250610a40602085016109a3565b9150604084013590509250925092565b60008060408385031215610a6357600080fd5b610a6c836109a3565b946020939093013593505050565b600060208083528351808285015260005b81811015610aa757858101830151858201604001528201610a8b565b81811115610ab9576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610af057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610b0957607f821691505b60208210811415610b2a57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220b2f4c0f04a5a57ae70878414860e5b535f03e2793d8a954f69032217b17859af64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF71 CODESIZE SUB DUP1 PUSH3 0xF71 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x30E JUMP JUMPDEST DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1B1 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1B1 JUMP JUMPDEST POP POP POP PUSH3 0x80 PUSH3 0x7A PUSH3 0x95 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x99 JUMP JUMPDEST PUSH3 0x8C CALLER DUP3 PUSH3 0xEB JUMP JUMPDEST POP POP POP PUSH3 0x3FB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x15A SWAP2 SWAP1 PUSH3 0x381 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1BF SWAP1 PUSH3 0x3A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1E3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x22E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1FE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x22E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x22E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x22E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x211 JUMP JUMPDEST POP PUSH3 0x23C SWAP3 SWAP2 POP PUSH3 0x240 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x23C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x241 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x286 JUMPI PUSH3 0x286 PUSH3 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2B1 JUMPI PUSH3 0x2B1 PUSH3 0x3E5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2F2 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2D3 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x304 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x34A DUP8 DUP4 DUP9 ADD PUSH3 0x257 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x370 DUP7 DUP3 DUP8 ADD PUSH3 0x257 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x3A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3DF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB66 DUP1 PUSH3 0x40B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x327 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x33B JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BF JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D7 DUP2 DUP6 DUP6 PUSH2 0x48A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EF DUP6 DUP3 DUP6 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x2FA DUP6 DUP6 DUP6 PUSH2 0x629 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D7 DUP2 DUP6 DUP6 PUSH2 0x318 DUP4 DUP4 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH2 0x32F PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x339 PUSH1 0x0 PUSH2 0x827 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x354 DUP3 DUP3 PUSH2 0x879 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x366 DUP3 DUP7 PUSH2 0x3E6 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x48A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D7 DUP2 DUP6 DUP6 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x419 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x487 DUP2 PUSH2 0x827 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 PUSH2 0x3E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x623 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x623 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x48A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x94D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x5A2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DA DUP3 PUSH2 0x9A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 PUSH2 0x9A3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0B PUSH1 0x20 DUP5 ADD PUSH2 0x9A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA32 DUP5 PUSH2 0x9A3 JUMP JUMPDEST SWAP3 POP PUSH2 0xA40 PUSH1 0x20 DUP6 ADD PUSH2 0x9A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6C DUP4 PUSH2 0x9A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA8B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xAF0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB09 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 DELEGATECALL 0xC0 CREATE 0x4A GAS JUMPI 0xAE PUSH17 0x878414860E5B535F03E2793D8A954F6903 0x22 OR 0xB1 PUSH25 0x59AF64736F6C63430008070033000000000000000000000000 ","sourceMap":"181:321:35:-:0;;;224:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13:1;;337:4:35;;343:6;;2046:13:1;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:1;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;361:25:35::1;367:10;379:6:::0;361:5:::1;:25::i;:::-;224:169:::0;;;181:321;;640:96:4;719:10;;640:96::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:1:-;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;1734:2:36;8595:65:1;;;1716:21:36;1773:2;1753:18;;;1746:30;1812:33;1792:18;;;1785:61;1863:18;;8595:65:1;;;;;;;;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;2038:25:36;;;8952:37:1;;2011:18:36;8952:37:1;;;;;;;8520:535;;:::o;181:321:35:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;181:321:35;;;-1:-1:-1;181:321:35;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:36;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:36;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:36;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:36:o;904:623::-;1012:6;1020;1028;1081:2;1069:9;1060:7;1056:23;1052:32;1049:52;;;1097:1;1094;1087:12;1049:52;1124:16;;-1:-1:-1;;;;;1189:14:36;;;1186:34;;;1216:1;1213;1206:12;1186:34;1239:61;1292:7;1283:6;1272:9;1268:22;1239:61;:::i;:::-;1229:71;;1346:2;1335:9;1331:18;1325:25;1309:41;;1375:2;1365:8;1362:16;1359:36;;;1391:1;1388;1381:12;1359:36;;1414:63;1469:7;1458:8;1447:9;1443:24;1414:63;:::i;:::-;1404:73;;;1517:2;1506:9;1502:18;1496:25;1486:35;;904:623;;;;;:::o;2074:225::-;2114:3;2145:1;2141:6;2138:1;2135:13;2132:136;;;2190:10;2185:3;2181:20;2178:1;2171:31;2225:4;2222:1;2215:15;2253:4;2250:1;2243:15;2132:136;-1:-1:-1;2284:9:36;;2074:225::o;2304:380::-;2383:1;2379:12;;;;2426;;;2447:61;;2501:4;2493:6;2489:17;2479:27;;2447:61;2554:2;2546:6;2543:14;2523:18;2520:38;2517:161;;;2600:10;2595:3;2591:20;2588:1;2581:31;2635:4;2632:1;2625:15;2663:4;2660:1;2653:15;2517:161;;2304:380;;;:::o;2689:127::-;2750:10;2745:3;2741:20;2738:1;2731:31;2781:4;2778:1;2771:15;2805:4;2802:1;2795:15;2689:127;181:321:35;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_698":{"entryPoint":null,"id":698,"parameterSlots":3,"returnSlots":0},"@_approve_633":{"entryPoint":1162,"id":633,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_687":{"entryPoint":null,"id":687,"parameterSlots":3,"returnSlots":0},"@_burn_588":{"entryPoint":2169,"id":588,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":1997,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_814":{"entryPoint":null,"id":814,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_676":{"entryPoint":1455,"id":676,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":2087,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_459":{"entryPoint":1577,"id":459,"parameterSlots":3,"returnSlots":0},"@allowance_254":{"entryPoint":998,"id":254,"parameterSlots":2,"returnSlots":1},"@approve_279":{"entryPoint":713,"id":279,"parameterSlots":2,"returnSlots":1},"@balanceOf_211":{"entryPoint":null,"id":211,"parameterSlots":1,"returnSlots":1},"@burn_3826":{"entryPoint":842,"id":3826,"parameterSlots":2,"returnSlots":0},"@decimals_187":{"entryPoint":null,"id":187,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_382":{"entryPoint":856,"id":382,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_341":{"entryPoint":773,"id":341,"parameterSlots":2,"returnSlots":1},"@name_167":{"entryPoint":567,"id":167,"parameterSlots":0,"returnSlots":1},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":807,"id":68,"parameterSlots":0,"returnSlots":0},"@symbol_177":{"entryPoint":827,"id":177,"parameterSlots":0,"returnSlots":1},"@totalSupply_197":{"entryPoint":null,"id":197,"parameterSlots":0,"returnSlots":1},"@transferFrom_312":{"entryPoint":737,"id":312,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":1041,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_236":{"entryPoint":984,"id":236,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2467,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2495,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2529,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2580,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2640,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2805,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7587:36","statements":[{"nodeType":"YulBlock","src":"6:3:36","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:36","statements":[{"nodeType":"YulAssignment","src":"73:29:36","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:36"},"nodeType":"YulFunctionCall","src":"82:20:36"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:36"}]},{"body":{"nodeType":"YulBlock","src":"165:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:36"},"nodeType":"YulFunctionCall","src":"167:12:36"},"nodeType":"YulExpressionStatement","src":"167:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:36"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:36"},"nodeType":"YulFunctionCall","src":"146:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:36"},"nodeType":"YulFunctionCall","src":"142:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:36"},"nodeType":"YulFunctionCall","src":"131:31:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:36"},"nodeType":"YulFunctionCall","src":"121:42:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:36"},"nodeType":"YulFunctionCall","src":"114:50:36"},"nodeType":"YulIf","src":"111:70:36"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:36","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:36","type":""}],"src":"14:173:36"},{"body":{"nodeType":"YulBlock","src":"262:116:36","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:36"},"nodeType":"YulFunctionCall","src":"310:12:36"},"nodeType":"YulExpressionStatement","src":"310:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:36"},"nodeType":"YulFunctionCall","src":"279:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:36","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:36"},"nodeType":"YulFunctionCall","src":"275:32:36"},"nodeType":"YulIf","src":"272:52:36"},{"nodeType":"YulAssignment","src":"333:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:36"},"nodeType":"YulFunctionCall","src":"343:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:36"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:36","type":""}],"src":"192:186:36"},{"body":{"nodeType":"YulBlock","src":"470:173:36","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:36"},"nodeType":"YulFunctionCall","src":"518:12:36"},"nodeType":"YulExpressionStatement","src":"518:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:36"},"nodeType":"YulFunctionCall","src":"487:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:36"},"nodeType":"YulFunctionCall","src":"483:32:36"},"nodeType":"YulIf","src":"480:52:36"},{"nodeType":"YulAssignment","src":"541:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:36"},"nodeType":"YulFunctionCall","src":"551:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:36"}]},{"nodeType":"YulAssignment","src":"589:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:36"},"nodeType":"YulFunctionCall","src":"618:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"599:18:36"},"nodeType":"YulFunctionCall","src":"599:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:36","type":""}],"src":"383:260:36"},{"body":{"nodeType":"YulBlock","src":"752:224:36","statements":[{"body":{"nodeType":"YulBlock","src":"798:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"807:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"810:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"800:6:36"},"nodeType":"YulFunctionCall","src":"800:12:36"},"nodeType":"YulExpressionStatement","src":"800:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"773:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"769:3:36"},"nodeType":"YulFunctionCall","src":"769:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"794:2:36","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"765:3:36"},"nodeType":"YulFunctionCall","src":"765:32:36"},"nodeType":"YulIf","src":"762:52:36"},{"nodeType":"YulAssignment","src":"823:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"852:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"833:18:36"},"nodeType":"YulFunctionCall","src":"833:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"823:6:36"}]},{"nodeType":"YulAssignment","src":"871:48:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"904:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"915:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"900:3:36"},"nodeType":"YulFunctionCall","src":"900:18:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"881:18:36"},"nodeType":"YulFunctionCall","src":"881:38:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"871:6:36"}]},{"nodeType":"YulAssignment","src":"928:42:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"955:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"966:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:36"},"nodeType":"YulFunctionCall","src":"951:18:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"938:12:36"},"nodeType":"YulFunctionCall","src":"938:32:36"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"928:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"702:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"713:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"725:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"733:6:36","type":""},{"name":"value2","nodeType":"YulTypedName","src":"741:6:36","type":""}],"src":"648:328:36"},{"body":{"nodeType":"YulBlock","src":"1068:167:36","statements":[{"body":{"nodeType":"YulBlock","src":"1114:16:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1123:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1126:1:36","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1116:6:36"},"nodeType":"YulFunctionCall","src":"1116:12:36"},"nodeType":"YulExpressionStatement","src":"1116:12:36"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1089:7:36"},{"name":"headStart","nodeType":"YulIdentifier","src":"1098:9:36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1085:3:36"},"nodeType":"YulFunctionCall","src":"1085:23:36"},{"kind":"number","nodeType":"YulLiteral","src":"1110:2:36","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1081:3:36"},"nodeType":"YulFunctionCall","src":"1081:32:36"},"nodeType":"YulIf","src":"1078:52:36"},{"nodeType":"YulAssignment","src":"1139:39:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:36"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1149:18:36"},"nodeType":"YulFunctionCall","src":"1149:29:36"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1139:6:36"}]},{"nodeType":"YulAssignment","src":"1187:42:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1225:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1210:3:36"},"nodeType":"YulFunctionCall","src":"1210:18:36"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1197:12:36"},"nodeType":"YulFunctionCall","src":"1197:32:36"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1187:6:36"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1026:9:36","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1037:7:36","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1049:6:36","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1057:6:36","type":""}],"src":"981:254:36"},{"body":{"nodeType":"YulBlock","src":"1341:102:36","statements":[{"nodeType":"YulAssignment","src":"1351:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1363:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1374:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1359:3:36"},"nodeType":"YulFunctionCall","src":"1359:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1351:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1393:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1408:6:36"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1424:3:36","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1429:1:36","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1420:3:36"},"nodeType":"YulFunctionCall","src":"1420:11:36"},{"kind":"number","nodeType":"YulLiteral","src":"1433:1:36","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1416:3:36"},"nodeType":"YulFunctionCall","src":"1416:19:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1404:3:36"},"nodeType":"YulFunctionCall","src":"1404:32:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1386:6:36"},"nodeType":"YulFunctionCall","src":"1386:51:36"},"nodeType":"YulExpressionStatement","src":"1386:51:36"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1310:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1321:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1332:4:36","type":""}],"src":"1240:203:36"},{"body":{"nodeType":"YulBlock","src":"1543:92:36","statements":[{"nodeType":"YulAssignment","src":"1553:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1565:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"1576:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1561:3:36"},"nodeType":"YulFunctionCall","src":"1561:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1553:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:36"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1620:6:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1613:6:36"},"nodeType":"YulFunctionCall","src":"1613:14:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1606:6:36"},"nodeType":"YulFunctionCall","src":"1606:22:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1588:6:36"},"nodeType":"YulFunctionCall","src":"1588:41:36"},"nodeType":"YulExpressionStatement","src":"1588:41:36"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1512:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1523:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1534:4:36","type":""}],"src":"1448:187:36"},{"body":{"nodeType":"YulBlock","src":"1761:476:36","statements":[{"nodeType":"YulVariableDeclaration","src":"1771:12:36","value":{"kind":"number","nodeType":"YulLiteral","src":"1781:2:36","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1775:2:36","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1799:9:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1810:2:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1792:6:36"},"nodeType":"YulFunctionCall","src":"1792:21:36"},"nodeType":"YulExpressionStatement","src":"1792:21:36"},{"nodeType":"YulVariableDeclaration","src":"1822:27:36","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1842:6:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1836:5:36"},"nodeType":"YulFunctionCall","src":"1836:13:36"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1826:6:36","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1869:9:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1880:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:36"},"nodeType":"YulFunctionCall","src":"1865:18:36"},{"name":"length","nodeType":"YulIdentifier","src":"1885:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1858:6:36"},"nodeType":"YulFunctionCall","src":"1858:34:36"},"nodeType":"YulExpressionStatement","src":"1858:34:36"},{"nodeType":"YulVariableDeclaration","src":"1901:10:36","value":{"kind":"number","nodeType":"YulLiteral","src":"1910:1:36","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1905:1:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"1970:90:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1999:9:36"},{"name":"i","nodeType":"YulIdentifier","src":"2010:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1995:3:36"},"nodeType":"YulFunctionCall","src":"1995:17:36"},{"kind":"number","nodeType":"YulLiteral","src":"2014:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1991:3:36"},"nodeType":"YulFunctionCall","src":"1991:26:36"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2033:6:36"},{"name":"i","nodeType":"YulIdentifier","src":"2041:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2029:3:36"},"nodeType":"YulFunctionCall","src":"2029:14:36"},{"name":"_1","nodeType":"YulIdentifier","src":"2045:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2025:3:36"},"nodeType":"YulFunctionCall","src":"2025:23:36"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2019:5:36"},"nodeType":"YulFunctionCall","src":"2019:30:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1984:6:36"},"nodeType":"YulFunctionCall","src":"1984:66:36"},"nodeType":"YulExpressionStatement","src":"1984:66:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1931:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"1934:6:36"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1928:2:36"},"nodeType":"YulFunctionCall","src":"1928:13:36"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1942:19:36","statements":[{"nodeType":"YulAssignment","src":"1944:15:36","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1953:1:36"},{"name":"_1","nodeType":"YulIdentifier","src":"1956:2:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1949:3:36"},"nodeType":"YulFunctionCall","src":"1949:10:36"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1944:1:36"}]}]},"pre":{"nodeType":"YulBlock","src":"1924:3:36","statements":[]},"src":"1920:140:36"},{"body":{"nodeType":"YulBlock","src":"2094:66:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2123:9:36"},{"name":"length","nodeType":"YulIdentifier","src":"2134:6:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2119:3:36"},"nodeType":"YulFunctionCall","src":"2119:22:36"},{"kind":"number","nodeType":"YulLiteral","src":"2143:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:36"},"nodeType":"YulFunctionCall","src":"2115:31:36"},{"kind":"number","nodeType":"YulLiteral","src":"2148:1:36","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2108:6:36"},"nodeType":"YulFunctionCall","src":"2108:42:36"},"nodeType":"YulExpressionStatement","src":"2108:42:36"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2075:1:36"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2072:2:36"},"nodeType":"YulFunctionCall","src":"2072:13:36"},"nodeType":"YulIf","src":"2069:91:36"},{"nodeType":"YulAssignment","src":"2169:62:36","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2185:9:36"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2204:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"2212:2:36","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2200:3:36"},"nodeType":"YulFunctionCall","src":"2200:15:36"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2221:2:36","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2217:3:36"},"nodeType":"YulFunctionCall","src":"2217:7:36"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2196:3:36"},"nodeType":"YulFunctionCall","src":"2196:29:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2181:3:36"},"nodeType":"YulFunctionCall","src":"2181:45:36"},{"kind":"number","nodeType":"YulLiteral","src":"2228:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2177:3:36"},"nodeType":"YulFunctionCall","src":"2177:54:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2169:4:36"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1730:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1741:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1752:4:36","type":""}],"src":"1640:597:36"},{"body":{"nodeType":"YulBlock","src":"2416:225:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2433:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2444:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2426:6:36"},"nodeType":"YulFunctionCall","src":"2426:21:36"},"nodeType":"YulExpressionStatement","src":"2426:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2467:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2478:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2463:3:36"},"nodeType":"YulFunctionCall","src":"2463:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"2483:2:36","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2456:6:36"},"nodeType":"YulFunctionCall","src":"2456:30:36"},"nodeType":"YulExpressionStatement","src":"2456:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2517:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2502:3:36"},"nodeType":"YulFunctionCall","src":"2502:18:36"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"2522:34:36","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2495:6:36"},"nodeType":"YulFunctionCall","src":"2495:62:36"},"nodeType":"YulExpressionStatement","src":"2495:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2577:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2588:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2573:3:36"},"nodeType":"YulFunctionCall","src":"2573:18:36"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"2593:5:36","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2566:6:36"},"nodeType":"YulFunctionCall","src":"2566:33:36"},"nodeType":"YulExpressionStatement","src":"2566:33:36"},{"nodeType":"YulAssignment","src":"2608:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2620:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2631:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2616:3:36"},"nodeType":"YulFunctionCall","src":"2616:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2608:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2393:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2407:4:36","type":""}],"src":"2242:399:36"},{"body":{"nodeType":"YulBlock","src":"2820:224:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2837:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2848:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2830:6:36"},"nodeType":"YulFunctionCall","src":"2830:21:36"},"nodeType":"YulExpressionStatement","src":"2830:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2871:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2882:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2867:3:36"},"nodeType":"YulFunctionCall","src":"2867:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"2887:2:36","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:36"},"nodeType":"YulFunctionCall","src":"2860:30:36"},"nodeType":"YulExpressionStatement","src":"2860:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2910:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2921:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2906:3:36"},"nodeType":"YulFunctionCall","src":"2906:18:36"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"2926:34:36","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2899:6:36"},"nodeType":"YulFunctionCall","src":"2899:62:36"},"nodeType":"YulExpressionStatement","src":"2899:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2981:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"2992:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2977:3:36"},"nodeType":"YulFunctionCall","src":"2977:18:36"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"2997:4:36","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2970:6:36"},"nodeType":"YulFunctionCall","src":"2970:32:36"},"nodeType":"YulExpressionStatement","src":"2970:32:36"},{"nodeType":"YulAssignment","src":"3011:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3023:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3034:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3019:3:36"},"nodeType":"YulFunctionCall","src":"3019:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3011:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2797:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2811:4:36","type":""}],"src":"2646:398:36"},{"body":{"nodeType":"YulBlock","src":"3223:228:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3240:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3251:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3233:6:36"},"nodeType":"YulFunctionCall","src":"3233:21:36"},"nodeType":"YulExpressionStatement","src":"3233:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3274:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3270:3:36"},"nodeType":"YulFunctionCall","src":"3270:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"3290:2:36","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3263:6:36"},"nodeType":"YulFunctionCall","src":"3263:30:36"},"nodeType":"YulExpressionStatement","src":"3263:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3313:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3309:3:36"},"nodeType":"YulFunctionCall","src":"3309:18:36"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"3329:34:36","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:36"},"nodeType":"YulFunctionCall","src":"3302:62:36"},"nodeType":"YulExpressionStatement","src":"3302:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3384:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3395:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3380:3:36"},"nodeType":"YulFunctionCall","src":"3380:18:36"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"3400:8:36","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3373:6:36"},"nodeType":"YulFunctionCall","src":"3373:36:36"},"nodeType":"YulExpressionStatement","src":"3373:36:36"},{"nodeType":"YulAssignment","src":"3418:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3430:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3441:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3426:3:36"},"nodeType":"YulFunctionCall","src":"3426:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3418:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3200:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3214:4:36","type":""}],"src":"3049:402:36"},{"body":{"nodeType":"YulBlock","src":"3630:224:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3647:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3658:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3640:6:36"},"nodeType":"YulFunctionCall","src":"3640:21:36"},"nodeType":"YulExpressionStatement","src":"3640:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3681:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3692:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3677:3:36"},"nodeType":"YulFunctionCall","src":"3677:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"3697:2:36","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3670:6:36"},"nodeType":"YulFunctionCall","src":"3670:30:36"},"nodeType":"YulExpressionStatement","src":"3670:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3720:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3731:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3716:3:36"},"nodeType":"YulFunctionCall","src":"3716:18:36"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"3736:34:36","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3709:6:36"},"nodeType":"YulFunctionCall","src":"3709:62:36"},"nodeType":"YulExpressionStatement","src":"3709:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3791:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3802:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3787:3:36"},"nodeType":"YulFunctionCall","src":"3787:18:36"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"3807:4:36","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3780:6:36"},"nodeType":"YulFunctionCall","src":"3780:32:36"},"nodeType":"YulExpressionStatement","src":"3780:32:36"},{"nodeType":"YulAssignment","src":"3821:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3833:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"3844:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3829:3:36"},"nodeType":"YulFunctionCall","src":"3829:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3821:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3607:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3621:4:36","type":""}],"src":"3456:398:36"},{"body":{"nodeType":"YulBlock","src":"4033:179:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4050:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4061:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4043:6:36"},"nodeType":"YulFunctionCall","src":"4043:21:36"},"nodeType":"YulExpressionStatement","src":"4043:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4084:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4095:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4080:3:36"},"nodeType":"YulFunctionCall","src":"4080:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"4100:2:36","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4073:6:36"},"nodeType":"YulFunctionCall","src":"4073:30:36"},"nodeType":"YulExpressionStatement","src":"4073:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4123:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4134:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4119:3:36"},"nodeType":"YulFunctionCall","src":"4119:18:36"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4139:31:36","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4112:6:36"},"nodeType":"YulFunctionCall","src":"4112:59:36"},"nodeType":"YulExpressionStatement","src":"4112:59:36"},{"nodeType":"YulAssignment","src":"4180:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4192:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4203:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4188:3:36"},"nodeType":"YulFunctionCall","src":"4188:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4180:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4010:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4024:4:36","type":""}],"src":"3859:353:36"},{"body":{"nodeType":"YulBlock","src":"4391:228:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4408:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4419:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4401:6:36"},"nodeType":"YulFunctionCall","src":"4401:21:36"},"nodeType":"YulExpressionStatement","src":"4401:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4442:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4453:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4438:3:36"},"nodeType":"YulFunctionCall","src":"4438:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"4458:2:36","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4431:6:36"},"nodeType":"YulFunctionCall","src":"4431:30:36"},"nodeType":"YulExpressionStatement","src":"4431:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4481:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4492:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4477:3:36"},"nodeType":"YulFunctionCall","src":"4477:18:36"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"4497:34:36","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4470:6:36"},"nodeType":"YulFunctionCall","src":"4470:62:36"},"nodeType":"YulExpressionStatement","src":"4470:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4552:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4563:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4548:3:36"},"nodeType":"YulFunctionCall","src":"4548:18:36"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"4568:8:36","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4541:6:36"},"nodeType":"YulFunctionCall","src":"4541:36:36"},"nodeType":"YulExpressionStatement","src":"4541:36:36"},{"nodeType":"YulAssignment","src":"4586:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4598:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4609:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4594:3:36"},"nodeType":"YulFunctionCall","src":"4594:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4586:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4368:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4382:4:36","type":""}],"src":"4217:402:36"},{"body":{"nodeType":"YulBlock","src":"4798:182:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4815:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4826:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4808:6:36"},"nodeType":"YulFunctionCall","src":"4808:21:36"},"nodeType":"YulExpressionStatement","src":"4808:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4849:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4860:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4845:3:36"},"nodeType":"YulFunctionCall","src":"4845:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"4865:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4838:6:36"},"nodeType":"YulFunctionCall","src":"4838:30:36"},"nodeType":"YulExpressionStatement","src":"4838:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4888:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4899:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4884:3:36"},"nodeType":"YulFunctionCall","src":"4884:18:36"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4904:34:36","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4877:6:36"},"nodeType":"YulFunctionCall","src":"4877:62:36"},"nodeType":"YulExpressionStatement","src":"4877:62:36"},{"nodeType":"YulAssignment","src":"4948:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4960:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"4971:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4956:3:36"},"nodeType":"YulFunctionCall","src":"4956:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4948:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4775:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4789:4:36","type":""}],"src":"4624:356:36"},{"body":{"nodeType":"YulBlock","src":"5159:223:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5176:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5169:6:36"},"nodeType":"YulFunctionCall","src":"5169:21:36"},"nodeType":"YulExpressionStatement","src":"5169:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:36"},"nodeType":"YulFunctionCall","src":"5206:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"5226:2:36","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:36"},"nodeType":"YulFunctionCall","src":"5199:30:36"},"nodeType":"YulExpressionStatement","src":"5199:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5249:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5260:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5245:3:36"},"nodeType":"YulFunctionCall","src":"5245:18:36"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"5265:34:36","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5238:6:36"},"nodeType":"YulFunctionCall","src":"5238:62:36"},"nodeType":"YulExpressionStatement","src":"5238:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5320:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5331:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5316:3:36"},"nodeType":"YulFunctionCall","src":"5316:18:36"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"5336:3:36","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5309:6:36"},"nodeType":"YulFunctionCall","src":"5309:31:36"},"nodeType":"YulExpressionStatement","src":"5309:31:36"},{"nodeType":"YulAssignment","src":"5349:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5361:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5372:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5357:3:36"},"nodeType":"YulFunctionCall","src":"5357:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5349:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5136:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5150:4:36","type":""}],"src":"4985:397:36"},{"body":{"nodeType":"YulBlock","src":"5561:227:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5578:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5589:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5571:6:36"},"nodeType":"YulFunctionCall","src":"5571:21:36"},"nodeType":"YulExpressionStatement","src":"5571:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5612:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5608:3:36"},"nodeType":"YulFunctionCall","src":"5608:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"5628:2:36","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5601:6:36"},"nodeType":"YulFunctionCall","src":"5601:30:36"},"nodeType":"YulExpressionStatement","src":"5601:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5651:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5662:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5647:3:36"},"nodeType":"YulFunctionCall","src":"5647:18:36"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"5667:34:36","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5640:6:36"},"nodeType":"YulFunctionCall","src":"5640:62:36"},"nodeType":"YulExpressionStatement","src":"5640:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5722:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5733:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5718:3:36"},"nodeType":"YulFunctionCall","src":"5718:18:36"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"5738:7:36","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5711:6:36"},"nodeType":"YulFunctionCall","src":"5711:35:36"},"nodeType":"YulExpressionStatement","src":"5711:35:36"},{"nodeType":"YulAssignment","src":"5755:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5767:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5778:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5763:3:36"},"nodeType":"YulFunctionCall","src":"5763:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5755:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5538:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5552:4:36","type":""}],"src":"5387:401:36"},{"body":{"nodeType":"YulBlock","src":"5967:226:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5984:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"5995:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5977:6:36"},"nodeType":"YulFunctionCall","src":"5977:21:36"},"nodeType":"YulExpressionStatement","src":"5977:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6018:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6029:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6014:3:36"},"nodeType":"YulFunctionCall","src":"6014:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"6034:2:36","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6007:6:36"},"nodeType":"YulFunctionCall","src":"6007:30:36"},"nodeType":"YulExpressionStatement","src":"6007:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6057:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6068:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6053:3:36"},"nodeType":"YulFunctionCall","src":"6053:18:36"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"6073:34:36","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6046:6:36"},"nodeType":"YulFunctionCall","src":"6046:62:36"},"nodeType":"YulExpressionStatement","src":"6046:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6128:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6139:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6124:3:36"},"nodeType":"YulFunctionCall","src":"6124:18:36"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"6144:6:36","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6117:6:36"},"nodeType":"YulFunctionCall","src":"6117:34:36"},"nodeType":"YulExpressionStatement","src":"6117:34:36"},{"nodeType":"YulAssignment","src":"6160:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6172:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6183:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6168:3:36"},"nodeType":"YulFunctionCall","src":"6168:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6160:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5944:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5958:4:36","type":""}],"src":"5793:400:36"},{"body":{"nodeType":"YulBlock","src":"6372:227:36","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6389:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6400:2:36","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6382:6:36"},"nodeType":"YulFunctionCall","src":"6382:21:36"},"nodeType":"YulExpressionStatement","src":"6382:21:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6423:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6434:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:36"},"nodeType":"YulFunctionCall","src":"6419:18:36"},{"kind":"number","nodeType":"YulLiteral","src":"6439:2:36","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6412:6:36"},"nodeType":"YulFunctionCall","src":"6412:30:36"},"nodeType":"YulExpressionStatement","src":"6412:30:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6462:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6473:2:36","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6458:3:36"},"nodeType":"YulFunctionCall","src":"6458:18:36"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6478:34:36","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6451:6:36"},"nodeType":"YulFunctionCall","src":"6451:62:36"},"nodeType":"YulExpressionStatement","src":"6451:62:36"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6533:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6544:2:36","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6529:3:36"},"nodeType":"YulFunctionCall","src":"6529:18:36"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6549:7:36","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6522:6:36"},"nodeType":"YulFunctionCall","src":"6522:35:36"},"nodeType":"YulExpressionStatement","src":"6522:35:36"},{"nodeType":"YulAssignment","src":"6566:27:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6578:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6589:3:36","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6574:3:36"},"nodeType":"YulFunctionCall","src":"6574:19:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6566:4:36"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6349:9:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6363:4:36","type":""}],"src":"6198:401:36"},{"body":{"nodeType":"YulBlock","src":"6705:76:36","statements":[{"nodeType":"YulAssignment","src":"6715:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6727:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6738:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6723:3:36"},"nodeType":"YulFunctionCall","src":"6723:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6715:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6757:9:36"},{"name":"value0","nodeType":"YulIdentifier","src":"6768:6:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6750:6:36"},"nodeType":"YulFunctionCall","src":"6750:25:36"},"nodeType":"YulExpressionStatement","src":"6750:25:36"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6674:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6685:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6696:4:36","type":""}],"src":"6604:177:36"},{"body":{"nodeType":"YulBlock","src":"6883:87:36","statements":[{"nodeType":"YulAssignment","src":"6893:26:36","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6905:9:36"},{"kind":"number","nodeType":"YulLiteral","src":"6916:2:36","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6901:3:36"},"nodeType":"YulFunctionCall","src":"6901:18:36"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6893:4:36"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6935:9:36"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6950:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"6958:4:36","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6946:3:36"},"nodeType":"YulFunctionCall","src":"6946:17:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6928:6:36"},"nodeType":"YulFunctionCall","src":"6928:36:36"},"nodeType":"YulExpressionStatement","src":"6928:36:36"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6852:9:36","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6863:6:36","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6874:4:36","type":""}],"src":"6786:184:36"},{"body":{"nodeType":"YulBlock","src":"7023:177:36","statements":[{"body":{"nodeType":"YulBlock","src":"7058:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7079:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7086:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7091:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7082:3:36"},"nodeType":"YulFunctionCall","src":"7082:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7072:6:36"},"nodeType":"YulFunctionCall","src":"7072:31:36"},"nodeType":"YulExpressionStatement","src":"7072:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7123:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7126:4:36","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7116:6:36"},"nodeType":"YulFunctionCall","src":"7116:15:36"},"nodeType":"YulExpressionStatement","src":"7116:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7151:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7154:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7144:6:36"},"nodeType":"YulFunctionCall","src":"7144:15:36"},"nodeType":"YulExpressionStatement","src":"7144:15:36"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7039:1:36"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7046:1:36"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7042:3:36"},"nodeType":"YulFunctionCall","src":"7042:6:36"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7036:2:36"},"nodeType":"YulFunctionCall","src":"7036:13:36"},"nodeType":"YulIf","src":"7033:136:36"},{"nodeType":"YulAssignment","src":"7178:16:36","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7189:1:36"},{"name":"y","nodeType":"YulIdentifier","src":"7192:1:36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7185:3:36"},"nodeType":"YulFunctionCall","src":"7185:9:36"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7178:3:36"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7006:1:36","type":""},{"name":"y","nodeType":"YulTypedName","src":"7009:1:36","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7015:3:36","type":""}],"src":"6975:225:36"},{"body":{"nodeType":"YulBlock","src":"7260:325:36","statements":[{"nodeType":"YulAssignment","src":"7270:22:36","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7284:1:36","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7287:4:36"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7280:3:36"},"nodeType":"YulFunctionCall","src":"7280:12:36"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7270:6:36"}]},{"nodeType":"YulVariableDeclaration","src":"7301:38:36","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7331:4:36"},{"kind":"number","nodeType":"YulLiteral","src":"7337:1:36","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7327:3:36"},"nodeType":"YulFunctionCall","src":"7327:12:36"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7305:18:36","type":""}]},{"body":{"nodeType":"YulBlock","src":"7378:31:36","statements":[{"nodeType":"YulAssignment","src":"7380:27:36","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7394:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"7402:4:36","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7390:3:36"},"nodeType":"YulFunctionCall","src":"7390:17:36"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7380:6:36"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7358:18:36"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7351:6:36"},"nodeType":"YulFunctionCall","src":"7351:26:36"},"nodeType":"YulIf","src":"7348:61:36"},{"body":{"nodeType":"YulBlock","src":"7468:111:36","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:1:36","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7496:3:36","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7501:10:36","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7492:3:36"},"nodeType":"YulFunctionCall","src":"7492:20:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7482:6:36"},"nodeType":"YulFunctionCall","src":"7482:31:36"},"nodeType":"YulExpressionStatement","src":"7482:31:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7533:1:36","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7536:4:36","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7526:6:36"},"nodeType":"YulFunctionCall","src":"7526:15:36"},"nodeType":"YulExpressionStatement","src":"7526:15:36"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7561:1:36","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7564:4:36","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7554:6:36"},"nodeType":"YulFunctionCall","src":"7554:15:36"},"nodeType":"YulExpressionStatement","src":"7554:15:36"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7424:18:36"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7447:6:36"},{"kind":"number","nodeType":"YulLiteral","src":"7455:2:36","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7444:2:36"},"nodeType":"YulFunctionCall","src":"7444:14:36"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7421:2:36"},"nodeType":"YulFunctionCall","src":"7421:38:36"},"nodeType":"YulIf","src":"7418:161:36"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7240:4:36","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7249:6:36","type":""}],"src":"7205:380:36"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":36,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146101eb578063a9059cbb146101fe578063dd62ed3e14610211578063f2fde38b1461022457600080fd5b8063715018a6146101ab5780638da5cb5b146101b557806395d89b41146101d05780639dc29fac146101d857600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806370a082311461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610237565b60405161010f9190610a7a565b60405180910390f35b61012b610126366004610a50565b6102c9565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610a14565b6102e1565b6040516012815260200161010f565b61012b61017d366004610a50565b610305565b61013f6101903660046109bf565b6001600160a01b031660009081526020819052604090205490565b6101b3610327565b005b6005546040516001600160a01b03909116815260200161010f565b61010261033b565b6101b36101e6366004610a50565b61034a565b61012b6101f9366004610a50565b610358565b61012b61020c366004610a50565b6103d8565b61013f61021f3660046109e1565b6103e6565b6101b36102323660046109bf565b610411565b60606003805461024690610af5565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610af5565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6000336102d781858561048a565b5060019392505050565b6000336102ef8582856105af565b6102fa858585610629565b506001949350505050565b6000336102d781858561031883836103e6565b6103229190610acf565b61048a565b61032f6107cd565b6103396000610827565b565b60606004805461024690610af5565b6103548282610879565b5050565b6000338161036682866103e6565b9050838110156103cb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102fa828686840361048a565b6000336102d7818585610629565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104196107cd565b6001600160a01b03811661047e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c2565b61048781610827565b50565b6001600160a01b0383166104ec5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c2565b6001600160a01b03821661054d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105bb84846103e6565b9050600019811461062357818110156106165760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103c2565b610623848484840361048a565b50505050565b6001600160a01b03831661068d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c2565b6001600160a01b0382166106ef5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c2565b6001600160a01b038316600090815260208190526040902054818110156107675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c2565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610623565b6005546001600160a01b031633146103395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c2565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166108d95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c2565b6001600160a01b0382166000908152602081905260409020548181101561094d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c2565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105a2565b80356001600160a01b03811681146109ba57600080fd5b919050565b6000602082840312156109d157600080fd5b6109da826109a3565b9392505050565b600080604083850312156109f457600080fd5b6109fd836109a3565b9150610a0b602084016109a3565b90509250929050565b600080600060608486031215610a2957600080fd5b610a32846109a3565b9250610a40602085016109a3565b9150604084013590509250925092565b60008060408385031215610a6357600080fd5b610a6c836109a3565b946020939093013593505050565b600060208083528351808285015260005b81811015610aa757858101830151858201604001528201610a8b565b81811115610ab9576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610af057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610b0957607f821691505b60208210811415610b2a57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220b2f4c0f04a5a57ae70878414860e5b535f03e2793d8a954f69032217b17859af64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x327 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x33B JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BF JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D7 DUP2 DUP6 DUP6 PUSH2 0x48A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EF DUP6 DUP3 DUP6 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x2FA DUP6 DUP6 DUP6 PUSH2 0x629 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D7 DUP2 DUP6 DUP6 PUSH2 0x318 DUP4 DUP4 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH2 0x32F PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x339 PUSH1 0x0 PUSH2 0x827 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x354 DUP3 DUP3 PUSH2 0x879 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x366 DUP3 DUP7 PUSH2 0x3E6 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x48A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D7 DUP2 DUP6 DUP6 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x419 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x487 DUP2 PUSH2 0x827 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 PUSH2 0x3E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x623 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x623 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x48A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x94D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x5A2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DA DUP3 PUSH2 0x9A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 PUSH2 0x9A3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0B PUSH1 0x20 DUP5 ADD PUSH2 0x9A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA32 DUP5 PUSH2 0x9A3 JUMP JUMPDEST SWAP3 POP PUSH2 0xA40 PUSH1 0x20 DUP6 ADD PUSH2 0x9A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6C DUP4 PUSH2 0x9A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA8B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xAF0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB09 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 DELEGATECALL 0xC0 CREATE 0x4A GAS JUMPI 0xAE PUSH17 0x878414860E5B535F03E2793D8A954F6903 0x22 OR 0xB1 PUSH25 0x59AF64736F6C63430008070033000000000000000000000000 ","sourceMap":"181:321:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1613:14:36;;1606:22;1588:41;;1576:2;1561:18;4444:197:1;1448:187:36;3255:106:1;3342:12;;3255:106;;;6750:25:36;;;6738:2;6723:18;3255:106:1;6604:177:36;5203:256:1;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;6928:36:36;;6916:2;6901:18;3104:91:1;6786:184:36;5854:234:1;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;1824:101:0;;;:::i;:::-;;1201:85;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:0;;;1386:51:36;;1374:2;1359:18;1201:85:0;1240:203:36;2369:102:1;;;:::i;399:101:35:-;;;;;;:::i;:::-;;:::i;6575:427:1:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;2158:98:1:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:4;4581:32:1;719:10:4;4597:7:1;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:1;;4444:197;-1:-1:-1;;;4444:197:1:o;5203:256::-;5300:4;719:10:4;5356:38:1;5372:4;719:10:4;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;719:10:4;5996:64:1;719:10:4;6012:7:1;6049:10;6021:25;719:10:4;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2369:102:1:-;2425:13;2457:7;2450:14;;;;;:::i;399:101:35:-;471:22;477:7;486:6;471:5;:22::i;:::-;399:101;;:::o;6575:427:1:-;6668:4;719:10:4;6668:4:1;6749:25;719:10:4;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;6400:2:36;6784:85:1;;;6382:21:36;6439:2;6419:18;;;6412:30;6478:34;6458:18;;;6451:62;-1:-1:-1;;;6529:18:36;;;6522:35;6574:19;;6784:85:1;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:4;3873:28:1;719:10:4;3890:2:1;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;3251:2:36;2154:73:0::1;::::0;::::1;3233:21:36::0;3290:2;3270:18;;;3263:30;3329:34;3309:18;;;3302:62;-1:-1:-1;;;3380:18:36;;;3373:36;3426:19;;2154:73:0::1;3049:402:36::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;10457:340:1:-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;5995:2:36;10550:68:1;;;5977:21:36;6034:2;6014:18;;;6007:30;6073:34;6053:18;;;6046:62;-1:-1:-1;;;6124:18:36;;;6117:34;6168:19;;10550:68:1;5793:400:36;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;3658:2:36;10628:68:1;;;3640:21:36;3697:2;3677:18;;;3670:30;3736:34;3716:18;;;3709:62;-1:-1:-1;;;3787:18:36;;;3780:32;3829:19;;10628:68:1;3456:398:36;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;6750:25:36;;;10758:32:1;;6723:18:36;10758:32:1;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;4061:2:36;11297:68:1;;;4043:21:36;4100:2;4080:18;;;4073:30;4139:31;4119:18;;;4112:59;4188:18;;11297:68:1;3859:353:36;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;5589:2:36;7544:68:1;;;5571:21:36;5628:2;5608:18;;;5601:30;5667:34;5647:18;;;5640:62;-1:-1:-1;;;5718:18:36;;;5711:35;5763:19;;7544:68:1;5387:401:36;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;2444:2:36;7622:64:1;;;2426:21:36;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;2573:18:36;;;2566:33;2616:19;;7622:64:1;2242:399:36;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;4419:2:36;7793:72:1;;;4401:21:36;4458:2;4438:18;;;4431:30;4497:34;4477:18;;;4470:62;-1:-1:-1;;;4548:18:36;;;4541:36;4594:19;;7793:72:1;4217:402:36;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;6750:25:36;;;8114:13:1;;8163:26;;6723:18:36;8163:26:1;;;;;;;8200:37;9375:659;1359:130:0;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;4826:2:36;1414:68:0;;;4808:21:36;;;4845:18;;;4838:30;4904:34;4884:18;;;4877:62;4956:18;;1414:68:0;4624:356:36;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;9375:659:1:-;-1:-1:-1;;;;;9458:21:1;;9450:67;;;;-1:-1:-1;;;9450:67:1;;5187:2:36;9450:67:1;;;5169:21:36;5226:2;5206:18;;;5199:30;5265:34;5245:18;;;5238:62;-1:-1:-1;;;5316:18:36;;;5309:31;5357:19;;9450:67:1;4985:397:36;9450:67:1;-1:-1:-1;;;;;9613:18:1;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:1;;2848:2:36;9641:71:1;;;2830:21:36;2887:2;2867:18;;;2860:30;2926:34;2906:18;;;2899:62;-1:-1:-1;;;2977:18:36;;;2970:32;3019:19;;9641:71:1;2646:398:36;9641:71:1;-1:-1:-1;;;;;9746:18:1;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;6750:25:36;;;9746:9:1;;:18;9931:37;;6723:18:36;9931:37:1;6604:177:36;14:173;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:36:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:36:o;1640:597::-;1752:4;1781:2;1810;1799:9;1792:21;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1910:1;1920:140;1934:6;1931:1;1928:13;1920:140;;;2029:14;;;2025:23;;2019:30;1995:17;;;2014:2;1991:26;1984:66;1949:10;;1920:140;;;2078:6;2075:1;2072:13;2069:91;;;2148:1;2143:2;2134:6;2123:9;2119:22;2115:31;2108:42;2069:91;-1:-1:-1;2221:2:36;2200:15;-1:-1:-1;;2196:29:36;2181:45;;;;2228:2;2177:54;;1640:597;-1:-1:-1;;;1640:597:36:o;6975:225::-;7015:3;7046:1;7042:6;7039:1;7036:13;7033:136;;;7091:10;7086:3;7082:20;7079:1;7072:31;7126:4;7123:1;7116:15;7154:4;7151:1;7144:15;7033:136;-1:-1:-1;7185:9:36;;6975:225::o;7205:380::-;7284:1;7280:12;;;;7327;;;7348:61;;7402:4;7394:6;7390:17;7380:27;;7348:61;7455:2;7447:6;7444:14;7424:18;7421:38;7418:161;;;7501:10;7496:3;7492:20;7489:1;7482:31;7536:4;7533:1;7526:15;7564:4;7561:1;7554:15;7418:161;;7205:380;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"583600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24648","balanceOf(address)":"2629","burn(address,uint256)":"50954","decimals()":"222","decreaseAllowance(address,uint256)":"26973","increaseAllowance(address,uint256)":"27046","name()":"infinite","owner()":"2346","renounceOwnership()":"infinite","symbol()":"infinite","totalSupply()":"2349","transfer(address,uint256)":"51090","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"28424"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/test/MockERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract MockERC20 is ERC20, Ownable {\\n    constructor(\\n        string memory name,\\n        string memory symbol,\\n        uint256 supply\\n    ) public ERC20(name, symbol) {\\n        _mint(msg.sender, supply);\\n    }\\n\\n    function burn(address account, uint256 amount) public virtual {\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xa8b6c6d942521751ace1e057ff9eb8c5c4cf68fbfaacb045cb6c38f00caeb2cb\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":128,"contract":"contracts/test/MockERC20.sol:MockERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":134,"contract":"contracts/test/MockERC20.sol:MockERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":136,"contract":"contracts/test/MockERC20.sol:MockERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":138,"contract":"contracts/test/MockERC20.sol:MockERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":140,"contract":"contracts/test/MockERC20.sol:MockERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":7,"contract":"contracts/test/MockERC20.sol:MockERC20","label":"_owner","offset":0,"slot":"5","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}